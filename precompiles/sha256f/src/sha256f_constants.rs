// Generic Parameters
pub const CLOCKS_LOAD_STATE: usize = 4; // 4 clocks to load the state
pub const CLOCKS_LOAD_INPUT: usize = 16; // 16 clocks to load the input
pub const CLOCKS_MIXING: usize = 48; // 48 clocks to perform the mixing
pub const CLOCKS_WRITE_STATE: usize = 4; // 4 clocks to write the state
pub const CLOCKS: usize =
    CLOCKS_LOAD_STATE + CLOCKS_LOAD_INPUT + CLOCKS_MIXING + CLOCKS_WRITE_STATE;

// SHA256 round constants (first 32 bits of the fractional parts of the cube roots of the first 64 primes)
pub const RC: [u32; 64] = [
    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,
    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,
    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,
    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,
    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,
    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,
    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,
    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2,
];

// Padding constants (computed by applying the function compute_ae() assuming a initial state and input full of zeros)
pub const PC_A: [u64; 64] = [
    0x428a2f98,
    0x18d2bf928,
    0x201f293d2,
    0x2f51308aa,
    0x30b3f1d90,
    0x188317a03,
    0x2eee7e068,
    0x2c12e762b,
    0x390ea5796,
    0x2ea932a2d,
    0x3292fec91,
    0x30b714615,
    0x2e70ca134,
    0x216b003f6,
    0x2b91692aa,
    0x3e176153d,
    0x35b16e8ae,
    0x48452fbce,
    0x263c7d0fd,
    0x29a0a4dfd,
    0x1cc986ff7,
    0x26ef2a93d,
    0x291fb8b33,
    0x3843aa7d1,
    0x2fc550af0,
    0x2cd767ef8,
    0x372cc549a,
    0x42894d36b,
    0x24f606e52,
    0x3186800dc,
    0x219986ef8,
    0x1b2562b67,
    0x39266c69e,
    0x1a9467821,
    0x36fd33001,
    0x3e3e96306,
    0x27e18e66a,
    0x2a1f76796,
    0x321746df8,
    0x2aafae299,
    0x26423b440,
    0x2d25cc83e,
    0x40eea910f,
    0x35c78005f,
    0x323d83a32,
    0x2a16282d0,
    0x3f44dd5fb,
    0x33c71a765,
    0x364141098,
    0x1bea815ab,
    0x1f8cefe7a,
    0x291101769,
    0x24470ef2a,
    0x259cb89f3,
    0x33284ad5f,
    0x2fb4dc062,
    0x2cca6b9aa,
    0x37940632c,
    0x269a74baa,
    0x2b9d0376e,
    0x2c2020ae7,
    0x4ce54dd2f,
    0x4425c3ba8,
    0x47ca51614,
];

pub const PC_E: [u64; 64] = [
    0x428a2f98,
    0x1484cfa6b,
    0x1bbfe35a9,
    0x21ec469ab,
    0x21463f218,
    0x201f07ae9,
    0x16faf4a8d,
    0x2848ada37,
    0x1db34c6fe,
    0x20005e512,
    0x2f00a2d12,
    0x2928356ac,
    0x295572c93,
    0x2d334865a,
    0x281030ee0,
    0x2d47810a2,
    0x38706fcaa,
    0x319d69326,
    0x226f7c384,
    0x277d04abe,
    0x18512c963,
    0x13b93b702,
    0x14e35c5d2,
    0x2fd7ba740,
    0x28ed50185,
    0x26b34385f,
    0x31af199a5,
    0x3a74831b5,
    0x2e0af456a,
    0x31a26ffd0,
    0x1e30ace22,
    0x1b16558df,
    0x2da698353,
    0x123e0b127,
    0x22468e234,
    0x353b96746,
    0x21f7ae102,
    0x20c181d10,
    0x263f7aa1a,
    0x2b743ed4d,
    0x1aa4ca938,
    0x31e067d5f,
    0x2c7a2c34f,
    0x2df8163be,
    0x2f39dcfad,
    0x32b37622d,
    0x32ce97b93,
    0x29205dc11,
    0x220e2a434,
    0x11e30bd6c,
    0x1ce4b5ffc,
    0x15ad8180a,
    0x150a7bd39,
    0x21c2feed8,
    0x322333b27,
    0x286af6698,
    0x20a84fdc6,
    0x1f3ede348,
    0x19c27b4b2,
    0x2f16355b0,
    0x2bf0be7a6,
    0x3ae7e26cc,
    0x398136d0f,
    0x3b6e574d1,
];
