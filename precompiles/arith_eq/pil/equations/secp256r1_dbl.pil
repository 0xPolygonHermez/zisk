// code generated
//
// equation: 2*s*y1-3*x1*x1-a+p*q0-p*offset
//
// a: 0xFFFFFFFF00000001000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFC
// p: 0xFFFFFFFF00000001000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFF
// offset: 0x40000000000000000000000000000000000000000000000000000000000000000
// 2: 2
// 3: 3
// (p*offset): 0x3FFFFFFFC00000004000000000000000000000003FFFFFFFFFFFFFFFFFFFFFFFC0000000000000000000000000000000000000000000000000000000000000000
//
// chunks:16
// chunk_bits:16
// terms_by_clock: 2


const expr eq_secp256r1_dbl_chunks[32];

// clock #0

eq_secp256r1_dbl_chunks[ 0] =   2 * s * y1                  //   2[0] * s[0] * y1[0]
                              - 3 * x1 * x1                 // - 3[0] * x1[0] * x1[0]
                              - 0xFFFC                      // - a[0]
                              + 0xFFFF * q0;                // + p[0] * q0[0]

eq_secp256r1_dbl_chunks[ 1] =   2 * s' * y1                 //   2[0] * s[1] * y1[0]
                              + 2 * s * y1'                 // + 2[0] * s[0] * y1[1]
                              - 3 * x1' * x1                // - 3[0] * x1[1] * x1[0]
                              - 3 * x1 * x1'                // - 3[0] * x1[0] * x1[1]
                              - 0xFFFF                      // - a[1]
                              + 0xFFFF * q0                 // + p[1] * q0[0]
                              + 0xFFFF * q0';               // + p[0] * q0[1]

// clock #1

eq_secp256r1_dbl_chunks[ 2] =   2 * s' * 'y1                //   2[0] * s[2] * y1[0]
                              + 2 * s * y1                  // + 2[0] * s[1] * y1[1]
                              + 2 * 's * y1'                // + 2[0] * s[0] * y1[2]
                              - 3 * x1' * 'x1               // - 3[0] * x1[2] * x1[0]
                              - 3 * x1 * x1                 // - 3[0] * x1[1] * x1[1]
                              - 3 * 'x1 * x1'               // - 3[0] * x1[0] * x1[2]
                              - 0xFFFF                      // - a[2]
                              + 0xFFFF * 'q0                // + p[2] * q0[0]
                              + 0xFFFF * q0                 // + p[1] * q0[1]
                              + 0xFFFF * q0';               // + p[0] * q0[2]

eq_secp256r1_dbl_chunks[ 3] =   2 * s'2 * 'y1               //   2[0] * s[3] * y1[0]
                              + 2 * s' * y1                 // + 2[0] * s[2] * y1[1]
                              + 2 * s * y1'                 // + 2[0] * s[1] * y1[2]
                              + 2 * 's * y1'2               // + 2[0] * s[0] * y1[3]
                              - 3 * x1'2 * 'x1              // - 3[0] * x1[3] * x1[0]
                              - 3 * x1' * x1                // - 3[0] * x1[2] * x1[1]
                              - 3 * x1 * x1'                // - 3[0] * x1[1] * x1[2]
                              - 3 * 'x1 * x1'2              // - 3[0] * x1[0] * x1[3]
                              - 0xFFFF                      // - a[3]
                              + 0xFFFF * 'q0                // + p[3] * q0[0]
                              + 0xFFFF * q0                 // + p[2] * q0[1]
                              + 0xFFFF * q0'                // + p[1] * q0[2]
                              + 0xFFFF * q0'2;              // + p[0] * q0[3]

// clock #2

eq_secp256r1_dbl_chunks[ 4] =   2 * s'2 * 2'y1              //   2[0] * s[4] * y1[0]
                              + 2 * s' * 'y1                // + 2[0] * s[3] * y1[1]
                              + 2 * s * y1                  // + 2[0] * s[2] * y1[2]
                              + 2 * 's * y1'                // + 2[0] * s[1] * y1[3]
                              + 2 * 2's * y1'2              // + 2[0] * s[0] * y1[4]
                              - 3 * x1'2 * 2'x1             // - 3[0] * x1[4] * x1[0]
                              - 3 * x1' * 'x1               // - 3[0] * x1[3] * x1[1]
                              - 3 * x1 * x1                 // - 3[0] * x1[2] * x1[2]
                              - 3 * 'x1 * x1'               // - 3[0] * x1[1] * x1[3]
                              - 3 * 2'x1 * x1'2             // - 3[0] * x1[0] * x1[4]
                              - 0xFFFF                      // - a[4]
                              + 0xFFFF * 2'q0               // + p[4] * q0[0]
                              + 0xFFFF * 'q0                // + p[3] * q0[1]
                              + 0xFFFF * q0                 // + p[2] * q0[2]
                              + 0xFFFF * q0'                // + p[1] * q0[3]
                              + 0xFFFF * q0'2;              // + p[0] * q0[4]

eq_secp256r1_dbl_chunks[ 5] =   2 * s'3 * 2'y1              //   2[0] * s[5] * y1[0]
                              + 2 * s'2 * 'y1               // + 2[0] * s[4] * y1[1]
                              + 2 * s' * y1                 // + 2[0] * s[3] * y1[2]
                              + 2 * s * y1'                 // + 2[0] * s[2] * y1[3]
                              + 2 * 's * y1'2               // + 2[0] * s[1] * y1[4]
                              + 2 * 2's * y1'3              // + 2[0] * s[0] * y1[5]
                              - 3 * x1'3 * 2'x1             // - 3[0] * x1[5] * x1[0]
                              - 3 * x1'2 * 'x1              // - 3[0] * x1[4] * x1[1]
                              - 3 * x1' * x1                // - 3[0] * x1[3] * x1[2]
                              - 3 * x1 * x1'                // - 3[0] * x1[2] * x1[3]
                              - 3 * 'x1 * x1'2              // - 3[0] * x1[1] * x1[4]
                              - 3 * 2'x1 * x1'3             // - 3[0] * x1[0] * x1[5]
                              - 0xFFFF                      // - a[5]
                              + 0xFFFF * 2'q0               // + p[5] * q0[0]
                              + 0xFFFF * 'q0                // + p[4] * q0[1]
                              + 0xFFFF * q0                 // + p[3] * q0[2]
                              + 0xFFFF * q0'                // + p[2] * q0[3]
                              + 0xFFFF * q0'2               // + p[1] * q0[4]
                              + 0xFFFF * q0'3;              // + p[0] * q0[5]

// clock #3

eq_secp256r1_dbl_chunks[ 6] =   2 * s'3 * 3'y1              //   2[0] * s[6] * y1[0]
                              + 2 * s'2 * 2'y1              // + 2[0] * s[5] * y1[1]
                              + 2 * s' * 'y1                // + 2[0] * s[4] * y1[2]
                              + 2 * s * y1                  // + 2[0] * s[3] * y1[3]
                              + 2 * 's * y1'                // + 2[0] * s[2] * y1[4]
                              + 2 * 2's * y1'2              // + 2[0] * s[1] * y1[5]
                              + 2 * 3's * y1'3              // + 2[0] * s[0] * y1[6]
                              - 3 * x1'3 * 3'x1             // - 3[0] * x1[6] * x1[0]
                              - 3 * x1'2 * 2'x1             // - 3[0] * x1[5] * x1[1]
                              - 3 * x1' * 'x1               // - 3[0] * x1[4] * x1[2]
                              - 3 * x1 * x1                 // - 3[0] * x1[3] * x1[3]
                              - 3 * 'x1 * x1'               // - 3[0] * x1[2] * x1[4]
                              - 3 * 2'x1 * x1'2             // - 3[0] * x1[1] * x1[5]
                              - 3 * 3'x1 * x1'3             // - 3[0] * x1[0] * x1[6]
                              + 0xFFFF * 2'q0               // + p[5] * q0[1]
                              + 0xFFFF * 'q0                // + p[4] * q0[2]
                              + 0xFFFF * q0                 // + p[3] * q0[3]
                              + 0xFFFF * q0'                // + p[2] * q0[4]
                              + 0xFFFF * q0'2               // + p[1] * q0[5]
                              + 0xFFFF * q0'3;              // + p[0] * q0[6]

eq_secp256r1_dbl_chunks[ 7] =   2 * s'4 * 3'y1              //   2[0] * s[7] * y1[0]
                              + 2 * s'3 * 2'y1              // + 2[0] * s[6] * y1[1]
                              + 2 * s'2 * 'y1               // + 2[0] * s[5] * y1[2]
                              + 2 * s' * y1                 // + 2[0] * s[4] * y1[3]
                              + 2 * s * y1'                 // + 2[0] * s[3] * y1[4]
                              + 2 * 's * y1'2               // + 2[0] * s[2] * y1[5]
                              + 2 * 2's * y1'3              // + 2[0] * s[1] * y1[6]
                              + 2 * 3's * y1'4              // + 2[0] * s[0] * y1[7]
                              - 3 * x1'4 * 3'x1             // - 3[0] * x1[7] * x1[0]
                              - 3 * x1'3 * 2'x1             // - 3[0] * x1[6] * x1[1]
                              - 3 * x1'2 * 'x1              // - 3[0] * x1[5] * x1[2]
                              - 3 * x1' * x1                // - 3[0] * x1[4] * x1[3]
                              - 3 * x1 * x1'                // - 3[0] * x1[3] * x1[4]
                              - 3 * 'x1 * x1'2              // - 3[0] * x1[2] * x1[5]
                              - 3 * 2'x1 * x1'3             // - 3[0] * x1[1] * x1[6]
                              - 3 * 3'x1 * x1'4             // - 3[0] * x1[0] * x1[7]
                              + 0xFFFF * 'q0                // + p[5] * q0[2]
                              + 0xFFFF * q0                 // + p[4] * q0[3]
                              + 0xFFFF * q0'                // + p[3] * q0[4]
                              + 0xFFFF * q0'2               // + p[2] * q0[5]
                              + 0xFFFF * q0'3               // + p[1] * q0[6]
                              + 0xFFFF * q0'4;              // + p[0] * q0[7]

// clock #4

eq_secp256r1_dbl_chunks[ 8] =   2 * s'4 * 4'y1              //   2[0] * s[8] * y1[0]
                              + 2 * s'3 * 3'y1              // + 2[0] * s[7] * y1[1]
                              + 2 * s'2 * 2'y1              // + 2[0] * s[6] * y1[2]
                              + 2 * s' * 'y1                // + 2[0] * s[5] * y1[3]
                              + 2 * s * y1                  // + 2[0] * s[4] * y1[4]
                              + 2 * 's * y1'                // + 2[0] * s[3] * y1[5]
                              + 2 * 2's * y1'2              // + 2[0] * s[2] * y1[6]
                              + 2 * 3's * y1'3              // + 2[0] * s[1] * y1[7]
                              + 2 * 4's * y1'4              // + 2[0] * s[0] * y1[8]
                              - 3 * x1'4 * 4'x1             // - 3[0] * x1[8] * x1[0]
                              - 3 * x1'3 * 3'x1             // - 3[0] * x1[7] * x1[1]
                              - 3 * x1'2 * 2'x1             // - 3[0] * x1[6] * x1[2]
                              - 3 * x1' * 'x1               // - 3[0] * x1[5] * x1[3]
                              - 3 * x1 * x1                 // - 3[0] * x1[4] * x1[4]
                              - 3 * 'x1 * x1'               // - 3[0] * x1[3] * x1[5]
                              - 3 * 2'x1 * x1'2             // - 3[0] * x1[2] * x1[6]
                              - 3 * 3'x1 * x1'3             // - 3[0] * x1[1] * x1[7]
                              - 3 * 4'x1 * x1'4             // - 3[0] * x1[0] * x1[8]
                              + 0xFFFF * 'q0                // + p[5] * q0[3]
                              + 0xFFFF * q0                 // + p[4] * q0[4]
                              + 0xFFFF * q0'                // + p[3] * q0[5]
                              + 0xFFFF * q0'2               // + p[2] * q0[6]
                              + 0xFFFF * q0'3               // + p[1] * q0[7]
                              + 0xFFFF * q0'4;              // + p[0] * q0[8]

eq_secp256r1_dbl_chunks[ 9] =   2 * s'5 * 4'y1              //   2[0] * s[9] * y1[0]
                              + 2 * s'4 * 3'y1              // + 2[0] * s[8] * y1[1]
                              + 2 * s'3 * 2'y1              // + 2[0] * s[7] * y1[2]
                              + 2 * s'2 * 'y1               // + 2[0] * s[6] * y1[3]
                              + 2 * s' * y1                 // + 2[0] * s[5] * y1[4]
                              + 2 * s * y1'                 // + 2[0] * s[4] * y1[5]
                              + 2 * 's * y1'2               // + 2[0] * s[3] * y1[6]
                              + 2 * 2's * y1'3              // + 2[0] * s[2] * y1[7]
                              + 2 * 3's * y1'4              // + 2[0] * s[1] * y1[8]
                              + 2 * 4's * y1'5              // + 2[0] * s[0] * y1[9]
                              - 3 * x1'5 * 4'x1             // - 3[0] * x1[9] * x1[0]
                              - 3 * x1'4 * 3'x1             // - 3[0] * x1[8] * x1[1]
                              - 3 * x1'3 * 2'x1             // - 3[0] * x1[7] * x1[2]
                              - 3 * x1'2 * 'x1              // - 3[0] * x1[6] * x1[3]
                              - 3 * x1' * x1                // - 3[0] * x1[5] * x1[4]
                              - 3 * x1 * x1'                // - 3[0] * x1[4] * x1[5]
                              - 3 * 'x1 * x1'2              // - 3[0] * x1[3] * x1[6]
                              - 3 * 2'x1 * x1'3             // - 3[0] * x1[2] * x1[7]
                              - 3 * 3'x1 * x1'4             // - 3[0] * x1[1] * x1[8]
                              - 3 * 4'x1 * x1'5             // - 3[0] * x1[0] * x1[9]
                              + 0xFFFF * q0                 // + p[5] * q0[4]
                              + 0xFFFF * q0'                // + p[4] * q0[5]
                              + 0xFFFF * q0'2               // + p[3] * q0[6]
                              + 0xFFFF * q0'3               // + p[2] * q0[7]
                              + 0xFFFF * q0'4               // + p[1] * q0[8]
                              + 0xFFFF * q0'5;              // + p[0] * q0[9]

// clock #5

eq_secp256r1_dbl_chunks[10] =   2 * s'5 * 5'y1              //   2[0] * s[10] * y1[0]
                              + 2 * s'4 * 4'y1              // + 2[0] * s[9] * y1[1]
                              + 2 * s'3 * 3'y1              // + 2[0] * s[8] * y1[2]
                              + 2 * s'2 * 2'y1              // + 2[0] * s[7] * y1[3]
                              + 2 * s' * 'y1                // + 2[0] * s[6] * y1[4]
                              + 2 * s * y1                  // + 2[0] * s[5] * y1[5]
                              + 2 * 's * y1'                // + 2[0] * s[4] * y1[6]
                              + 2 * 2's * y1'2              // + 2[0] * s[3] * y1[7]
                              + 2 * 3's * y1'3              // + 2[0] * s[2] * y1[8]
                              + 2 * 4's * y1'4              // + 2[0] * s[1] * y1[9]
                              + 2 * 5's * y1'5              // + 2[0] * s[0] * y1[10]
                              - 3 * x1'5 * 5'x1             // - 3[0] * x1[10] * x1[0]
                              - 3 * x1'4 * 4'x1             // - 3[0] * x1[9] * x1[1]
                              - 3 * x1'3 * 3'x1             // - 3[0] * x1[8] * x1[2]
                              - 3 * x1'2 * 2'x1             // - 3[0] * x1[7] * x1[3]
                              - 3 * x1' * 'x1               // - 3[0] * x1[6] * x1[4]
                              - 3 * x1 * x1                 // - 3[0] * x1[5] * x1[5]
                              - 3 * 'x1 * x1'               // - 3[0] * x1[4] * x1[6]
                              - 3 * 2'x1 * x1'2             // - 3[0] * x1[3] * x1[7]
                              - 3 * 3'x1 * x1'3             // - 3[0] * x1[2] * x1[8]
                              - 3 * 4'x1 * x1'4             // - 3[0] * x1[1] * x1[9]
                              - 3 * 5'x1 * x1'5             // - 3[0] * x1[0] * x1[10]
                              + 0xFFFF * q0                 // + p[5] * q0[5]
                              + 0xFFFF * q0'                // + p[4] * q0[6]
                              + 0xFFFF * q0'2               // + p[3] * q0[7]
                              + 0xFFFF * q0'3               // + p[2] * q0[8]
                              + 0xFFFF * q0'4               // + p[1] * q0[9]
                              + 0xFFFF * q0'5;              // + p[0] * q0[10]

eq_secp256r1_dbl_chunks[11] =   2 * s'6 * 5'y1              //   2[0] * s[11] * y1[0]
                              + 2 * s'5 * 4'y1              // + 2[0] * s[10] * y1[1]
                              + 2 * s'4 * 3'y1              // + 2[0] * s[9] * y1[2]
                              + 2 * s'3 * 2'y1              // + 2[0] * s[8] * y1[3]
                              + 2 * s'2 * 'y1               // + 2[0] * s[7] * y1[4]
                              + 2 * s' * y1                 // + 2[0] * s[6] * y1[5]
                              + 2 * s * y1'                 // + 2[0] * s[5] * y1[6]
                              + 2 * 's * y1'2               // + 2[0] * s[4] * y1[7]
                              + 2 * 2's * y1'3              // + 2[0] * s[3] * y1[8]
                              + 2 * 3's * y1'4              // + 2[0] * s[2] * y1[9]
                              + 2 * 4's * y1'5              // + 2[0] * s[1] * y1[10]
                              + 2 * 5's * y1'6              // + 2[0] * s[0] * y1[11]
                              - 3 * x1'6 * 5'x1             // - 3[0] * x1[11] * x1[0]
                              - 3 * x1'5 * 4'x1             // - 3[0] * x1[10] * x1[1]
                              - 3 * x1'4 * 3'x1             // - 3[0] * x1[9] * x1[2]
                              - 3 * x1'3 * 2'x1             // - 3[0] * x1[8] * x1[3]
                              - 3 * x1'2 * 'x1              // - 3[0] * x1[7] * x1[4]
                              - 3 * x1' * x1                // - 3[0] * x1[6] * x1[5]
                              - 3 * x1 * x1'                // - 3[0] * x1[5] * x1[6]
                              - 3 * 'x1 * x1'2              // - 3[0] * x1[4] * x1[7]
                              - 3 * 2'x1 * x1'3             // - 3[0] * x1[3] * x1[8]
                              - 3 * 3'x1 * x1'4             // - 3[0] * x1[2] * x1[9]
                              - 3 * 4'x1 * x1'5             // - 3[0] * x1[1] * x1[10]
                              - 3 * 5'x1 * x1'6             // - 3[0] * x1[0] * x1[11]
                              + 0xFFFF * q0'                // + p[5] * q0[6]
                              + 0xFFFF * q0'2               // + p[4] * q0[7]
                              + 0xFFFF * q0'3               // + p[3] * q0[8]
                              + 0xFFFF * q0'4               // + p[2] * q0[9]
                              + 0xFFFF * q0'5               // + p[1] * q0[10]
                              + 0xFFFF * q0'6;              // + p[0] * q0[11]

// clock #6

eq_secp256r1_dbl_chunks[12] =   2 * s'6 * 6'y1              //   2[0] * s[12] * y1[0]
                              + 2 * s'5 * 5'y1              // + 2[0] * s[11] * y1[1]
                              + 2 * s'4 * 4'y1              // + 2[0] * s[10] * y1[2]
                              + 2 * s'3 * 3'y1              // + 2[0] * s[9] * y1[3]
                              + 2 * s'2 * 2'y1              // + 2[0] * s[8] * y1[4]
                              + 2 * s' * 'y1                // + 2[0] * s[7] * y1[5]
                              + 2 * s * y1                  // + 2[0] * s[6] * y1[6]
                              + 2 * 's * y1'                // + 2[0] * s[5] * y1[7]
                              + 2 * 2's * y1'2              // + 2[0] * s[4] * y1[8]
                              + 2 * 3's * y1'3              // + 2[0] * s[3] * y1[9]
                              + 2 * 4's * y1'4              // + 2[0] * s[2] * y1[10]
                              + 2 * 5's * y1'5              // + 2[0] * s[1] * y1[11]
                              + 2 * 6's * y1'6              // + 2[0] * s[0] * y1[12]
                              - 3 * x1'6 * 6'x1             // - 3[0] * x1[12] * x1[0]
                              - 3 * x1'5 * 5'x1             // - 3[0] * x1[11] * x1[1]
                              - 3 * x1'4 * 4'x1             // - 3[0] * x1[10] * x1[2]
                              - 3 * x1'3 * 3'x1             // - 3[0] * x1[9] * x1[3]
                              - 3 * x1'2 * 2'x1             // - 3[0] * x1[8] * x1[4]
                              - 3 * x1' * 'x1               // - 3[0] * x1[7] * x1[5]
                              - 3 * x1 * x1                 // - 3[0] * x1[6] * x1[6]
                              - 3 * 'x1 * x1'               // - 3[0] * x1[5] * x1[7]
                              - 3 * 2'x1 * x1'2             // - 3[0] * x1[4] * x1[8]
                              - 3 * 3'x1 * x1'3             // - 3[0] * x1[3] * x1[9]
                              - 3 * 4'x1 * x1'4             // - 3[0] * x1[2] * x1[10]
                              - 3 * 5'x1 * x1'5             // - 3[0] * x1[1] * x1[11]
                              - 3 * 6'x1 * x1'6             // - 3[0] * x1[0] * x1[12]
                              - 0x1                         // - a[12]
                              + 0x1 * 6'q0                  // + p[12] * q0[0]
                              + 0xFFFF * q0'                // + p[5] * q0[7]
                              + 0xFFFF * q0'2               // + p[4] * q0[8]
                              + 0xFFFF * q0'3               // + p[3] * q0[9]
                              + 0xFFFF * q0'4               // + p[2] * q0[10]
                              + 0xFFFF * q0'5               // + p[1] * q0[11]
                              + 0xFFFF * q0'6;              // + p[0] * q0[12]

eq_secp256r1_dbl_chunks[13] =   2 * s'7 * 6'y1              //   2[0] * s[13] * y1[0]
                              + 2 * s'6 * 5'y1              // + 2[0] * s[12] * y1[1]
                              + 2 * s'5 * 4'y1              // + 2[0] * s[11] * y1[2]
                              + 2 * s'4 * 3'y1              // + 2[0] * s[10] * y1[3]
                              + 2 * s'3 * 2'y1              // + 2[0] * s[9] * y1[4]
                              + 2 * s'2 * 'y1               // + 2[0] * s[8] * y1[5]
                              + 2 * s' * y1                 // + 2[0] * s[7] * y1[6]
                              + 2 * s * y1'                 // + 2[0] * s[6] * y1[7]
                              + 2 * 's * y1'2               // + 2[0] * s[5] * y1[8]
                              + 2 * 2's * y1'3              // + 2[0] * s[4] * y1[9]
                              + 2 * 3's * y1'4              // + 2[0] * s[3] * y1[10]
                              + 2 * 4's * y1'5              // + 2[0] * s[2] * y1[11]
                              + 2 * 5's * y1'6              // + 2[0] * s[1] * y1[12]
                              + 2 * 6's * y1'7              // + 2[0] * s[0] * y1[13]
                              - 3 * x1'7 * 6'x1             // - 3[0] * x1[13] * x1[0]
                              - 3 * x1'6 * 5'x1             // - 3[0] * x1[12] * x1[1]
                              - 3 * x1'5 * 4'x1             // - 3[0] * x1[11] * x1[2]
                              - 3 * x1'4 * 3'x1             // - 3[0] * x1[10] * x1[3]
                              - 3 * x1'3 * 2'x1             // - 3[0] * x1[9] * x1[4]
                              - 3 * x1'2 * 'x1              // - 3[0] * x1[8] * x1[5]
                              - 3 * x1' * x1                // - 3[0] * x1[7] * x1[6]
                              - 3 * x1 * x1'                // - 3[0] * x1[6] * x1[7]
                              - 3 * 'x1 * x1'2              // - 3[0] * x1[5] * x1[8]
                              - 3 * 2'x1 * x1'3             // - 3[0] * x1[4] * x1[9]
                              - 3 * 3'x1 * x1'4             // - 3[0] * x1[3] * x1[10]
                              - 3 * 4'x1 * x1'5             // - 3[0] * x1[2] * x1[11]
                              - 3 * 5'x1 * x1'6             // - 3[0] * x1[1] * x1[12]
                              - 3 * 6'x1 * x1'7             // - 3[0] * x1[0] * x1[13]
                              + 0x1 * 5'q0                  // + p[12] * q0[1]
                              + 0xFFFF * q0'2               // + p[5] * q0[8]
                              + 0xFFFF * q0'3               // + p[4] * q0[9]
                              + 0xFFFF * q0'4               // + p[3] * q0[10]
                              + 0xFFFF * q0'5               // + p[2] * q0[11]
                              + 0xFFFF * q0'6               // + p[1] * q0[12]
                              + 0xFFFF * q0'7;              // + p[0] * q0[13]

// clock #7

eq_secp256r1_dbl_chunks[14] =   2 * s'7 * 7'y1              //   2[0] * s[14] * y1[0]
                              + 2 * s'6 * 6'y1              // + 2[0] * s[13] * y1[1]
                              + 2 * s'5 * 5'y1              // + 2[0] * s[12] * y1[2]
                              + 2 * s'4 * 4'y1              // + 2[0] * s[11] * y1[3]
                              + 2 * s'3 * 3'y1              // + 2[0] * s[10] * y1[4]
                              + 2 * s'2 * 2'y1              // + 2[0] * s[9] * y1[5]
                              + 2 * s' * 'y1                // + 2[0] * s[8] * y1[6]
                              + 2 * s * y1                  // + 2[0] * s[7] * y1[7]
                              + 2 * 's * y1'                // + 2[0] * s[6] * y1[8]
                              + 2 * 2's * y1'2              // + 2[0] * s[5] * y1[9]
                              + 2 * 3's * y1'3              // + 2[0] * s[4] * y1[10]
                              + 2 * 4's * y1'4              // + 2[0] * s[3] * y1[11]
                              + 2 * 5's * y1'5              // + 2[0] * s[2] * y1[12]
                              + 2 * 6's * y1'6              // + 2[0] * s[1] * y1[13]
                              + 2 * 7's * y1'7              // + 2[0] * s[0] * y1[14]
                              - 3 * x1'7 * 7'x1             // - 3[0] * x1[14] * x1[0]
                              - 3 * x1'6 * 6'x1             // - 3[0] * x1[13] * x1[1]
                              - 3 * x1'5 * 5'x1             // - 3[0] * x1[12] * x1[2]
                              - 3 * x1'4 * 4'x1             // - 3[0] * x1[11] * x1[3]
                              - 3 * x1'3 * 3'x1             // - 3[0] * x1[10] * x1[4]
                              - 3 * x1'2 * 2'x1             // - 3[0] * x1[9] * x1[5]
                              - 3 * x1' * 'x1               // - 3[0] * x1[8] * x1[6]
                              - 3 * x1 * x1                 // - 3[0] * x1[7] * x1[7]
                              - 3 * 'x1 * x1'               // - 3[0] * x1[6] * x1[8]
                              - 3 * 2'x1 * x1'2             // - 3[0] * x1[5] * x1[9]
                              - 3 * 3'x1 * x1'3             // - 3[0] * x1[4] * x1[10]
                              - 3 * 4'x1 * x1'4             // - 3[0] * x1[3] * x1[11]
                              - 3 * 5'x1 * x1'5             // - 3[0] * x1[2] * x1[12]
                              - 3 * 6'x1 * x1'6             // - 3[0] * x1[1] * x1[13]
                              - 3 * 7'x1 * x1'7             // - 3[0] * x1[0] * x1[14]
                              - 0xFFFF                      // - a[14]
                              + 0xFFFF * 7'q0               // + p[14] * q0[0]
                              + 0x1 * 5'q0                  // + p[12] * q0[2]
                              + 0xFFFF * q0'2               // + p[5] * q0[9]
                              + 0xFFFF * q0'3               // + p[4] * q0[10]
                              + 0xFFFF * q0'4               // + p[3] * q0[11]
                              + 0xFFFF * q0'5               // + p[2] * q0[12]
                              + 0xFFFF * q0'6               // + p[1] * q0[13]
                              + 0xFFFF * q0'7;              // + p[0] * q0[14]

eq_secp256r1_dbl_chunks[15] =   2 * s'8 * 7'y1              //   2[0] * s[15] * y1[0]
                              + 2 * s'7 * 6'y1              // + 2[0] * s[14] * y1[1]
                              + 2 * s'6 * 5'y1              // + 2[0] * s[13] * y1[2]
                              + 2 * s'5 * 4'y1              // + 2[0] * s[12] * y1[3]
                              + 2 * s'4 * 3'y1              // + 2[0] * s[11] * y1[4]
                              + 2 * s'3 * 2'y1              // + 2[0] * s[10] * y1[5]
                              + 2 * s'2 * 'y1               // + 2[0] * s[9] * y1[6]
                              + 2 * s' * y1                 // + 2[0] * s[8] * y1[7]
                              + 2 * s * y1'                 // + 2[0] * s[7] * y1[8]
                              + 2 * 's * y1'2               // + 2[0] * s[6] * y1[9]
                              + 2 * 2's * y1'3              // + 2[0] * s[5] * y1[10]
                              + 2 * 3's * y1'4              // + 2[0] * s[4] * y1[11]
                              + 2 * 4's * y1'5              // + 2[0] * s[3] * y1[12]
                              + 2 * 5's * y1'6              // + 2[0] * s[2] * y1[13]
                              + 2 * 6's * y1'7              // + 2[0] * s[1] * y1[14]
                              + 2 * 7's * y1'8              // + 2[0] * s[0] * y1[15]
                              - 3 * x1'8 * 7'x1             // - 3[0] * x1[15] * x1[0]
                              - 3 * x1'7 * 6'x1             // - 3[0] * x1[14] * x1[1]
                              - 3 * x1'6 * 5'x1             // - 3[0] * x1[13] * x1[2]
                              - 3 * x1'5 * 4'x1             // - 3[0] * x1[12] * x1[3]
                              - 3 * x1'4 * 3'x1             // - 3[0] * x1[11] * x1[4]
                              - 3 * x1'3 * 2'x1             // - 3[0] * x1[10] * x1[5]
                              - 3 * x1'2 * 'x1              // - 3[0] * x1[9] * x1[6]
                              - 3 * x1' * x1                // - 3[0] * x1[8] * x1[7]
                              - 3 * x1 * x1'                // - 3[0] * x1[7] * x1[8]
                              - 3 * 'x1 * x1'2              // - 3[0] * x1[6] * x1[9]
                              - 3 * 2'x1 * x1'3             // - 3[0] * x1[5] * x1[10]
                              - 3 * 3'x1 * x1'4             // - 3[0] * x1[4] * x1[11]
                              - 3 * 4'x1 * x1'5             // - 3[0] * x1[3] * x1[12]
                              - 3 * 5'x1 * x1'6             // - 3[0] * x1[2] * x1[13]
                              - 3 * 6'x1 * x1'7             // - 3[0] * x1[1] * x1[14]
                              - 3 * 7'x1 * x1'8             // - 3[0] * x1[0] * x1[15]
                              - 0xFFFF                      // - a[15]
                              + 0xFFFF * 7'q0               // + p[15] * q0[0]
                              + 0xFFFF * 6'q0               // + p[14] * q0[1]
                              + 0x1 * 4'q0                  // + p[12] * q0[3]
                              + 0xFFFF * q0'3               // + p[5] * q0[10]
                              + 0xFFFF * q0'4               // + p[4] * q0[11]
                              + 0xFFFF * q0'5               // + p[3] * q0[12]
                              + 0xFFFF * q0'6               // + p[2] * q0[13]
                              + 0xFFFF * q0'7               // + p[1] * q0[14]
                              + 0xFFFF * q0'8;              // + p[0] * q0[15]

// clock #8

eq_secp256r1_dbl_chunks[16] =   2 * s'7 * 7'y1              //   2[0] * s[15] * y1[1]
                              + 2 * s'6 * 6'y1              // + 2[0] * s[14] * y1[2]
                              + 2 * s'5 * 5'y1              // + 2[0] * s[13] * y1[3]
                              + 2 * s'4 * 4'y1              // + 2[0] * s[12] * y1[4]
                              + 2 * s'3 * 3'y1              // + 2[0] * s[11] * y1[5]
                              + 2 * s'2 * 2'y1              // + 2[0] * s[10] * y1[6]
                              + 2 * s' * 'y1                // + 2[0] * s[9] * y1[7]
                              + 2 * s * y1                  // + 2[0] * s[8] * y1[8]
                              + 2 * 's * y1'                // + 2[0] * s[7] * y1[9]
                              + 2 * 2's * y1'2              // + 2[0] * s[6] * y1[10]
                              + 2 * 3's * y1'3              // + 2[0] * s[5] * y1[11]
                              + 2 * 4's * y1'4              // + 2[0] * s[4] * y1[12]
                              + 2 * 5's * y1'5              // + 2[0] * s[3] * y1[13]
                              + 2 * 6's * y1'6              // + 2[0] * s[2] * y1[14]
                              + 2 * 7's * y1'7              // + 2[0] * s[1] * y1[15]
                              - 3 * x1'7 * 7'x1             // - 3[0] * x1[15] * x1[1]
                              - 3 * x1'6 * 6'x1             // - 3[0] * x1[14] * x1[2]
                              - 3 * x1'5 * 5'x1             // - 3[0] * x1[13] * x1[3]
                              - 3 * x1'4 * 4'x1             // - 3[0] * x1[12] * x1[4]
                              - 3 * x1'3 * 3'x1             // - 3[0] * x1[11] * x1[5]
                              - 3 * x1'2 * 2'x1             // - 3[0] * x1[10] * x1[6]
                              - 3 * x1' * 'x1               // - 3[0] * x1[9] * x1[7]
                              - 3 * x1 * x1                 // - 3[0] * x1[8] * x1[8]
                              - 3 * 'x1 * x1'               // - 3[0] * x1[7] * x1[9]
                              - 3 * 2'x1 * x1'2             // - 3[0] * x1[6] * x1[10]
                              - 3 * 3'x1 * x1'3             // - 3[0] * x1[5] * x1[11]
                              - 3 * 4'x1 * x1'4             // - 3[0] * x1[4] * x1[12]
                              - 3 * 5'x1 * x1'5             // - 3[0] * x1[3] * x1[13]
                              - 3 * 6'x1 * x1'6             // - 3[0] * x1[2] * x1[14]
                              - 3 * 7'x1 * x1'7             // - 3[0] * x1[1] * x1[15]
                              + 0xFFFF * 7'q0               // + p[15] * q0[1]
                              + 0xFFFF * 6'q0               // + p[14] * q0[2]
                              + 0x1 * 4'q0                  // + p[12] * q0[4]
                              + 0xFFFF * q0'3               // + p[5] * q0[11]
                              + 0xFFFF * q0'4               // + p[4] * q0[12]
                              + 0xFFFF * q0'5               // + p[3] * q0[13]
                              + 0xFFFF * q0'6               // + p[2] * q0[14]
                              + 0xFFFF * q0'7               // + p[1] * q0[15]
                              - 0xFFFC;                     // - (p*offset)[16]

eq_secp256r1_dbl_chunks[17] =   2 * s'7 * 6'y1              //   2[0] * s[15] * y1[2]
                              + 2 * s'6 * 5'y1              // + 2[0] * s[14] * y1[3]
                              + 2 * s'5 * 4'y1              // + 2[0] * s[13] * y1[4]
                              + 2 * s'4 * 3'y1              // + 2[0] * s[12] * y1[5]
                              + 2 * s'3 * 2'y1              // + 2[0] * s[11] * y1[6]
                              + 2 * s'2 * 'y1               // + 2[0] * s[10] * y1[7]
                              + 2 * s' * y1                 // + 2[0] * s[9] * y1[8]
                              + 2 * s * y1'                 // + 2[0] * s[8] * y1[9]
                              + 2 * 's * y1'2               // + 2[0] * s[7] * y1[10]
                              + 2 * 2's * y1'3              // + 2[0] * s[6] * y1[11]
                              + 2 * 3's * y1'4              // + 2[0] * s[5] * y1[12]
                              + 2 * 4's * y1'5              // + 2[0] * s[4] * y1[13]
                              + 2 * 5's * y1'6              // + 2[0] * s[3] * y1[14]
                              + 2 * 6's * y1'7              // + 2[0] * s[2] * y1[15]
                              - 3 * x1'7 * 6'x1             // - 3[0] * x1[15] * x1[2]
                              - 3 * x1'6 * 5'x1             // - 3[0] * x1[14] * x1[3]
                              - 3 * x1'5 * 4'x1             // - 3[0] * x1[13] * x1[4]
                              - 3 * x1'4 * 3'x1             // - 3[0] * x1[12] * x1[5]
                              - 3 * x1'3 * 2'x1             // - 3[0] * x1[11] * x1[6]
                              - 3 * x1'2 * 'x1              // - 3[0] * x1[10] * x1[7]
                              - 3 * x1' * x1                // - 3[0] * x1[9] * x1[8]
                              - 3 * x1 * x1'                // - 3[0] * x1[8] * x1[9]
                              - 3 * 'x1 * x1'2              // - 3[0] * x1[7] * x1[10]
                              - 3 * 2'x1 * x1'3             // - 3[0] * x1[6] * x1[11]
                              - 3 * 3'x1 * x1'4             // - 3[0] * x1[5] * x1[12]
                              - 3 * 4'x1 * x1'5             // - 3[0] * x1[4] * x1[13]
                              - 3 * 5'x1 * x1'6             // - 3[0] * x1[3] * x1[14]
                              - 3 * 6'x1 * x1'7             // - 3[0] * x1[2] * x1[15]
                              + 0xFFFF * 6'q0               // + p[15] * q0[2]
                              + 0xFFFF * 5'q0               // + p[14] * q0[3]
                              + 0x1 * 3'q0                  // + p[12] * q0[5]
                              + 0xFFFF * q0'4               // + p[5] * q0[12]
                              + 0xFFFF * q0'5               // + p[4] * q0[13]
                              + 0xFFFF * q0'6               // + p[3] * q0[14]
                              + 0xFFFF * q0'7               // + p[2] * q0[15]
                              - 0xFFFF;                     // - (p*offset)[17]

// clock #9

eq_secp256r1_dbl_chunks[18] =   2 * s'6 * 6'y1              //   2[0] * s[15] * y1[3]
                              + 2 * s'5 * 5'y1              // + 2[0] * s[14] * y1[4]
                              + 2 * s'4 * 4'y1              // + 2[0] * s[13] * y1[5]
                              + 2 * s'3 * 3'y1              // + 2[0] * s[12] * y1[6]
                              + 2 * s'2 * 2'y1              // + 2[0] * s[11] * y1[7]
                              + 2 * s' * 'y1                // + 2[0] * s[10] * y1[8]
                              + 2 * s * y1                  // + 2[0] * s[9] * y1[9]
                              + 2 * 's * y1'                // + 2[0] * s[8] * y1[10]
                              + 2 * 2's * y1'2              // + 2[0] * s[7] * y1[11]
                              + 2 * 3's * y1'3              // + 2[0] * s[6] * y1[12]
                              + 2 * 4's * y1'4              // + 2[0] * s[5] * y1[13]
                              + 2 * 5's * y1'5              // + 2[0] * s[4] * y1[14]
                              + 2 * 6's * y1'6              // + 2[0] * s[3] * y1[15]
                              - 3 * x1'6 * 6'x1             // - 3[0] * x1[15] * x1[3]
                              - 3 * x1'5 * 5'x1             // - 3[0] * x1[14] * x1[4]
                              - 3 * x1'4 * 4'x1             // - 3[0] * x1[13] * x1[5]
                              - 3 * x1'3 * 3'x1             // - 3[0] * x1[12] * x1[6]
                              - 3 * x1'2 * 2'x1             // - 3[0] * x1[11] * x1[7]
                              - 3 * x1' * 'x1               // - 3[0] * x1[10] * x1[8]
                              - 3 * x1 * x1                 // - 3[0] * x1[9] * x1[9]
                              - 3 * 'x1 * x1'               // - 3[0] * x1[8] * x1[10]
                              - 3 * 2'x1 * x1'2             // - 3[0] * x1[7] * x1[11]
                              - 3 * 3'x1 * x1'3             // - 3[0] * x1[6] * x1[12]
                              - 3 * 4'x1 * x1'4             // - 3[0] * x1[5] * x1[13]
                              - 3 * 5'x1 * x1'5             // - 3[0] * x1[4] * x1[14]
                              - 3 * 6'x1 * x1'6             // - 3[0] * x1[3] * x1[15]
                              + 0xFFFF * 6'q0               // + p[15] * q0[3]
                              + 0xFFFF * 5'q0               // + p[14] * q0[4]
                              + 0x1 * 3'q0                  // + p[12] * q0[6]
                              + 0xFFFF * q0'4               // + p[5] * q0[13]
                              + 0xFFFF * q0'5               // + p[4] * q0[14]
                              + 0xFFFF * q0'6               // + p[3] * q0[15]
                              - 0xFFFF;                     // - (p*offset)[18]

eq_secp256r1_dbl_chunks[19] =   2 * s'6 * 5'y1              //   2[0] * s[15] * y1[4]
                              + 2 * s'5 * 4'y1              // + 2[0] * s[14] * y1[5]
                              + 2 * s'4 * 3'y1              // + 2[0] * s[13] * y1[6]
                              + 2 * s'3 * 2'y1              // + 2[0] * s[12] * y1[7]
                              + 2 * s'2 * 'y1               // + 2[0] * s[11] * y1[8]
                              + 2 * s' * y1                 // + 2[0] * s[10] * y1[9]
                              + 2 * s * y1'                 // + 2[0] * s[9] * y1[10]
                              + 2 * 's * y1'2               // + 2[0] * s[8] * y1[11]
                              + 2 * 2's * y1'3              // + 2[0] * s[7] * y1[12]
                              + 2 * 3's * y1'4              // + 2[0] * s[6] * y1[13]
                              + 2 * 4's * y1'5              // + 2[0] * s[5] * y1[14]
                              + 2 * 5's * y1'6              // + 2[0] * s[4] * y1[15]
                              - 3 * x1'6 * 5'x1             // - 3[0] * x1[15] * x1[4]
                              - 3 * x1'5 * 4'x1             // - 3[0] * x1[14] * x1[5]
                              - 3 * x1'4 * 3'x1             // - 3[0] * x1[13] * x1[6]
                              - 3 * x1'3 * 2'x1             // - 3[0] * x1[12] * x1[7]
                              - 3 * x1'2 * 'x1              // - 3[0] * x1[11] * x1[8]
                              - 3 * x1' * x1                // - 3[0] * x1[10] * x1[9]
                              - 3 * x1 * x1'                // - 3[0] * x1[9] * x1[10]
                              - 3 * 'x1 * x1'2              // - 3[0] * x1[8] * x1[11]
                              - 3 * 2'x1 * x1'3             // - 3[0] * x1[7] * x1[12]
                              - 3 * 3'x1 * x1'4             // - 3[0] * x1[6] * x1[13]
                              - 3 * 4'x1 * x1'5             // - 3[0] * x1[5] * x1[14]
                              - 3 * 5'x1 * x1'6             // - 3[0] * x1[4] * x1[15]
                              + 0xFFFF * 5'q0               // + p[15] * q0[4]
                              + 0xFFFF * 4'q0               // + p[14] * q0[5]
                              + 0x1 * 2'q0                  // + p[12] * q0[7]
                              + 0xFFFF * q0'5               // + p[5] * q0[14]
                              + 0xFFFF * q0'6               // + p[4] * q0[15]
                              - 0xFFFF;                     // - (p*offset)[19]

// clock #10

eq_secp256r1_dbl_chunks[20] =   2 * s'5 * 5'y1              //   2[0] * s[15] * y1[5]
                              + 2 * s'4 * 4'y1              // + 2[0] * s[14] * y1[6]
                              + 2 * s'3 * 3'y1              // + 2[0] * s[13] * y1[7]
                              + 2 * s'2 * 2'y1              // + 2[0] * s[12] * y1[8]
                              + 2 * s' * 'y1                // + 2[0] * s[11] * y1[9]
                              + 2 * s * y1                  // + 2[0] * s[10] * y1[10]
                              + 2 * 's * y1'                // + 2[0] * s[9] * y1[11]
                              + 2 * 2's * y1'2              // + 2[0] * s[8] * y1[12]
                              + 2 * 3's * y1'3              // + 2[0] * s[7] * y1[13]
                              + 2 * 4's * y1'4              // + 2[0] * s[6] * y1[14]
                              + 2 * 5's * y1'5              // + 2[0] * s[5] * y1[15]
                              - 3 * x1'5 * 5'x1             // - 3[0] * x1[15] * x1[5]
                              - 3 * x1'4 * 4'x1             // - 3[0] * x1[14] * x1[6]
                              - 3 * x1'3 * 3'x1             // - 3[0] * x1[13] * x1[7]
                              - 3 * x1'2 * 2'x1             // - 3[0] * x1[12] * x1[8]
                              - 3 * x1' * 'x1               // - 3[0] * x1[11] * x1[9]
                              - 3 * x1 * x1                 // - 3[0] * x1[10] * x1[10]
                              - 3 * 'x1 * x1'               // - 3[0] * x1[9] * x1[11]
                              - 3 * 2'x1 * x1'2             // - 3[0] * x1[8] * x1[12]
                              - 3 * 3'x1 * x1'3             // - 3[0] * x1[7] * x1[13]
                              - 3 * 4'x1 * x1'4             // - 3[0] * x1[6] * x1[14]
                              - 3 * 5'x1 * x1'5             // - 3[0] * x1[5] * x1[15]
                              + 0xFFFF * 5'q0               // + p[15] * q0[5]
                              + 0xFFFF * 4'q0               // + p[14] * q0[6]
                              + 0x1 * 2'q0                  // + p[12] * q0[8]
                              + 0xFFFF * q0'5               // + p[5] * q0[15]
                              - 0xFFFF;                     // - (p*offset)[20]

eq_secp256r1_dbl_chunks[21] =   2 * s'5 * 4'y1              //   2[0] * s[15] * y1[6]
                              + 2 * s'4 * 3'y1              // + 2[0] * s[14] * y1[7]
                              + 2 * s'3 * 2'y1              // + 2[0] * s[13] * y1[8]
                              + 2 * s'2 * 'y1               // + 2[0] * s[12] * y1[9]
                              + 2 * s' * y1                 // + 2[0] * s[11] * y1[10]
                              + 2 * s * y1'                 // + 2[0] * s[10] * y1[11]
                              + 2 * 's * y1'2               // + 2[0] * s[9] * y1[12]
                              + 2 * 2's * y1'3              // + 2[0] * s[8] * y1[13]
                              + 2 * 3's * y1'4              // + 2[0] * s[7] * y1[14]
                              + 2 * 4's * y1'5              // + 2[0] * s[6] * y1[15]
                              - 3 * x1'5 * 4'x1             // - 3[0] * x1[15] * x1[6]
                              - 3 * x1'4 * 3'x1             // - 3[0] * x1[14] * x1[7]
                              - 3 * x1'3 * 2'x1             // - 3[0] * x1[13] * x1[8]
                              - 3 * x1'2 * 'x1              // - 3[0] * x1[12] * x1[9]
                              - 3 * x1' * x1                // - 3[0] * x1[11] * x1[10]
                              - 3 * x1 * x1'                // - 3[0] * x1[10] * x1[11]
                              - 3 * 'x1 * x1'2              // - 3[0] * x1[9] * x1[12]
                              - 3 * 2'x1 * x1'3             // - 3[0] * x1[8] * x1[13]
                              - 3 * 3'x1 * x1'4             // - 3[0] * x1[7] * x1[14]
                              - 3 * 4'x1 * x1'5             // - 3[0] * x1[6] * x1[15]
                              + 0xFFFF * 4'q0               // + p[15] * q0[6]
                              + 0xFFFF * 3'q0               // + p[14] * q0[7]
                              + 0x1 * 'q0                   // + p[12] * q0[9]
                              - 0xFFFF;                     // - (p*offset)[21]

// clock #11

eq_secp256r1_dbl_chunks[22] =   2 * s'4 * 4'y1              //   2[0] * s[15] * y1[7]
                              + 2 * s'3 * 3'y1              // + 2[0] * s[14] * y1[8]
                              + 2 * s'2 * 2'y1              // + 2[0] * s[13] * y1[9]
                              + 2 * s' * 'y1                // + 2[0] * s[12] * y1[10]
                              + 2 * s * y1                  // + 2[0] * s[11] * y1[11]
                              + 2 * 's * y1'                // + 2[0] * s[10] * y1[12]
                              + 2 * 2's * y1'2              // + 2[0] * s[9] * y1[13]
                              + 2 * 3's * y1'3              // + 2[0] * s[8] * y1[14]
                              + 2 * 4's * y1'4              // + 2[0] * s[7] * y1[15]
                              - 3 * x1'4 * 4'x1             // - 3[0] * x1[15] * x1[7]
                              - 3 * x1'3 * 3'x1             // - 3[0] * x1[14] * x1[8]
                              - 3 * x1'2 * 2'x1             // - 3[0] * x1[13] * x1[9]
                              - 3 * x1' * 'x1               // - 3[0] * x1[12] * x1[10]
                              - 3 * x1 * x1                 // - 3[0] * x1[11] * x1[11]
                              - 3 * 'x1 * x1'               // - 3[0] * x1[10] * x1[12]
                              - 3 * 2'x1 * x1'2             // - 3[0] * x1[9] * x1[13]
                              - 3 * 3'x1 * x1'3             // - 3[0] * x1[8] * x1[14]
                              - 3 * 4'x1 * x1'4             // - 3[0] * x1[7] * x1[15]
                              + 0xFFFF * 4'q0               // + p[15] * q0[7]
                              + 0xFFFF * 3'q0               // + p[14] * q0[8]
                              + 0x1 * 'q0                   // + p[12] * q0[10]
                              - 0x3;                        // - (p*offset)[22]

eq_secp256r1_dbl_chunks[23] =   2 * s'4 * 3'y1              //   2[0] * s[15] * y1[8]
                              + 2 * s'3 * 2'y1              // + 2[0] * s[14] * y1[9]
                              + 2 * s'2 * 'y1               // + 2[0] * s[13] * y1[10]
                              + 2 * s' * y1                 // + 2[0] * s[12] * y1[11]
                              + 2 * s * y1'                 // + 2[0] * s[11] * y1[12]
                              + 2 * 's * y1'2               // + 2[0] * s[10] * y1[13]
                              + 2 * 2's * y1'3              // + 2[0] * s[9] * y1[14]
                              + 2 * 3's * y1'4              // + 2[0] * s[8] * y1[15]
                              - 3 * x1'4 * 3'x1             // - 3[0] * x1[15] * x1[8]
                              - 3 * x1'3 * 2'x1             // - 3[0] * x1[14] * x1[9]
                              - 3 * x1'2 * 'x1              // - 3[0] * x1[13] * x1[10]
                              - 3 * x1' * x1                // - 3[0] * x1[12] * x1[11]
                              - 3 * x1 * x1'                // - 3[0] * x1[11] * x1[12]
                              - 3 * 'x1 * x1'2              // - 3[0] * x1[10] * x1[13]
                              - 3 * 2'x1 * x1'3             // - 3[0] * x1[9] * x1[14]
                              - 3 * 3'x1 * x1'4             // - 3[0] * x1[8] * x1[15]
                              + 0xFFFF * 3'q0               // + p[15] * q0[8]
                              + 0xFFFF * 2'q0               // + p[14] * q0[9]
                              + 0x1 * q0;                   // + p[12] * q0[11]

// clock #12

eq_secp256r1_dbl_chunks[24] =   2 * s'3 * 3'y1              //   2[0] * s[15] * y1[9]
                              + 2 * s'2 * 2'y1              // + 2[0] * s[14] * y1[10]
                              + 2 * s' * 'y1                // + 2[0] * s[13] * y1[11]
                              + 2 * s * y1                  // + 2[0] * s[12] * y1[12]
                              + 2 * 's * y1'                // + 2[0] * s[11] * y1[13]
                              + 2 * 2's * y1'2              // + 2[0] * s[10] * y1[14]
                              + 2 * 3's * y1'3              // + 2[0] * s[9] * y1[15]
                              - 3 * x1'3 * 3'x1             // - 3[0] * x1[15] * x1[9]
                              - 3 * x1'2 * 2'x1             // - 3[0] * x1[14] * x1[10]
                              - 3 * x1' * 'x1               // - 3[0] * x1[13] * x1[11]
                              - 3 * x1 * x1                 // - 3[0] * x1[12] * x1[12]
                              - 3 * 'x1 * x1'               // - 3[0] * x1[11] * x1[13]
                              - 3 * 2'x1 * x1'2             // - 3[0] * x1[10] * x1[14]
                              - 3 * 3'x1 * x1'3             // - 3[0] * x1[9] * x1[15]
                              + 0xFFFF * 3'q0               // + p[15] * q0[9]
                              + 0xFFFF * 2'q0               // + p[14] * q0[10]
                              + 0x1 * q0;                   // + p[12] * q0[12]

eq_secp256r1_dbl_chunks[25] =   2 * s'3 * 2'y1              //   2[0] * s[15] * y1[10]
                              + 2 * s'2 * 'y1               // + 2[0] * s[14] * y1[11]
                              + 2 * s' * y1                 // + 2[0] * s[13] * y1[12]
                              + 2 * s * y1'                 // + 2[0] * s[12] * y1[13]
                              + 2 * 's * y1'2               // + 2[0] * s[11] * y1[14]
                              + 2 * 2's * y1'3              // + 2[0] * s[10] * y1[15]
                              - 3 * x1'3 * 2'x1             // - 3[0] * x1[15] * x1[10]
                              - 3 * x1'2 * 'x1              // - 3[0] * x1[14] * x1[11]
                              - 3 * x1' * x1                // - 3[0] * x1[13] * x1[12]
                              - 3 * x1 * x1'                // - 3[0] * x1[12] * x1[13]
                              - 3 * 'x1 * x1'2              // - 3[0] * x1[11] * x1[14]
                              - 3 * 2'x1 * x1'3             // - 3[0] * x1[10] * x1[15]
                              + 0xFFFF * 2'q0               // + p[15] * q0[10]
                              + 0xFFFF * 'q0                // + p[14] * q0[11]
                              + 0x1 * q0';                  // + p[12] * q0[13]

// clock #13

eq_secp256r1_dbl_chunks[26] =   2 * s'2 * 2'y1              //   2[0] * s[15] * y1[11]
                              + 2 * s' * 'y1                // + 2[0] * s[14] * y1[12]
                              + 2 * s * y1                  // + 2[0] * s[13] * y1[13]
                              + 2 * 's * y1'                // + 2[0] * s[12] * y1[14]
                              + 2 * 2's * y1'2              // + 2[0] * s[11] * y1[15]
                              - 3 * x1'2 * 2'x1             // - 3[0] * x1[15] * x1[11]
                              - 3 * x1' * 'x1               // - 3[0] * x1[14] * x1[12]
                              - 3 * x1 * x1                 // - 3[0] * x1[13] * x1[13]
                              - 3 * 'x1 * x1'               // - 3[0] * x1[12] * x1[14]
                              - 3 * 2'x1 * x1'2             // - 3[0] * x1[11] * x1[15]
                              + 0xFFFF * 2'q0               // + p[15] * q0[11]
                              + 0xFFFF * 'q0                // + p[14] * q0[12]
                              + 0x1 * q0';                  // + p[12] * q0[14]

eq_secp256r1_dbl_chunks[27] =   2 * s'2 * 'y1               //   2[0] * s[15] * y1[12]
                              + 2 * s' * y1                 // + 2[0] * s[14] * y1[13]
                              + 2 * s * y1'                 // + 2[0] * s[13] * y1[14]
                              + 2 * 's * y1'2               // + 2[0] * s[12] * y1[15]
                              - 3 * x1'2 * 'x1              // - 3[0] * x1[15] * x1[12]
                              - 3 * x1' * x1                // - 3[0] * x1[14] * x1[13]
                              - 3 * x1 * x1'                // - 3[0] * x1[13] * x1[14]
                              - 3 * 'x1 * x1'2              // - 3[0] * x1[12] * x1[15]
                              + 0xFFFF * 'q0                // + p[15] * q0[12]
                              + 0xFFFF * q0                 // + p[14] * q0[13]
                              + 0x1 * q0'2;                 // + p[12] * q0[15]

// clock #14

eq_secp256r1_dbl_chunks[28] =   2 * s' * 'y1                //   2[0] * s[15] * y1[13]
                              + 2 * s * y1                  // + 2[0] * s[14] * y1[14]
                              + 2 * 's * y1'                // + 2[0] * s[13] * y1[15]
                              - 3 * x1' * 'x1               // - 3[0] * x1[15] * x1[13]
                              - 3 * x1 * x1                 // - 3[0] * x1[14] * x1[14]
                              - 3 * 'x1 * x1'               // - 3[0] * x1[13] * x1[15]
                              + 0xFFFF * 'q0                // + p[15] * q0[13]
                              + 0xFFFF * q0                 // + p[14] * q0[14]
                              - 0x4;                        // - (p*offset)[28]

eq_secp256r1_dbl_chunks[29] =   2 * s' * y1                 //   2[0] * s[15] * y1[14]
                              + 2 * s * y1'                 // + 2[0] * s[14] * y1[15]
                              - 3 * x1' * x1                // - 3[0] * x1[15] * x1[14]
                              - 3 * x1 * x1'                // - 3[0] * x1[14] * x1[15]
                              + 0xFFFF * q0                 // + p[15] * q0[14]
                              + 0xFFFF * q0';               // + p[14] * q0[15]

// clock #15

eq_secp256r1_dbl_chunks[30] =   2 * s * y1                  //   2[0] * s[15] * y1[15]
                              - 3 * x1 * x1                 // - 3[0] * x1[15] * x1[15]
                              + 0xFFFF * q0                 // + p[15] * q0[15]
                              - 0xFFFC;                     // - (p*offset)[30]

eq_secp256r1_dbl_chunks[31] = - 0x3FFFF;                    // - (p*offset)[31]

