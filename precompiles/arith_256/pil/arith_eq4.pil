// code generated
//
// equation: s*x1-s*x3-y1-y3+p*q2-p*offset
//
// p: 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F
// offset: 0x20000000000000000000000000000000000000000000000000000000000000000
//
// chunks:16
// chunk_bits:16
// terms_by_clock: 2

// clock #0

arith_eq[ 4][ 0] =   s * x1                      //   s[0] * x1[0]
                   - s * x3                      // - s[0] * x3[0]
                   - y1                          // - y1[0]
                   - y3                          // - y3[0]
                   + 0xFC2F * q2;                // + p[0] * q2[0]

arith_eq[ 4][ 1] =   s * x1                      //   s[1] * x1[0]
                   + s * x1                      // + s[0] * x1[1]
                   - s * x3                      // - s[1] * x3[0]
                   - s * x3                      // - s[0] * x3[1]
                   - y1                          // - y1[1]
                   - y3                          // - y3[1]
                   + 0xFFFF * q2                 // + p[1] * q2[0]
                   + 0xFC2F * q2;                // + p[0] * q2[1]

// clock #1

arith_eq[ 4][ 2] =   s * 'x1                     //   s[2] * x1[0]
                   + 's * 'x1                    // + s[1] * x1[1]
                   + 's * x1                     // + s[0] * x1[2]
                   - s * 'x3                     // - s[2] * x3[0]
                   - 's * 'x3                    // - s[1] * x3[1]
                   - 's * x3                     // - s[0] * x3[2]
                   - y1                          // - y1[2]
                   - y3                          // - y3[2]
                   + 0xFFFE * 'q2                // + p[2] * q2[0]
                   + 0xFFFF * 'q2                // + p[1] * q2[1]
                   + 0xFC2F * q2;                // + p[0] * q2[2]

arith_eq[ 4][ 3] =   s * 'x1                     //   s[3] * x1[0]
                   + s * 'x1                     // + s[2] * x1[1]
                   + 's * x1                     // + s[1] * x1[2]
                   + 's * x1                     // + s[0] * x1[3]
                   - s * 'x3                     // - s[3] * x3[0]
                   - s * 'x3                     // - s[2] * x3[1]
                   - 's * x3                     // - s[1] * x3[2]
                   - 's * x3                     // - s[0] * x3[3]
                   - y1                          // - y1[3]
                   - y3                          // - y3[3]
                   + 0xFFFF * 'q2                // + p[3] * q2[0]
                   + 0xFFFE * 'q2                // + p[2] * q2[1]
                   + 0xFFFF * q2                 // + p[1] * q2[2]
                   + 0xFC2F * q2;                // + p[0] * q2[3]

// clock #2

arith_eq[ 4][ 4] =   s * 2'x1                    //   s[4] * x1[0]
                   + 's * 2'x1                   // + s[3] * x1[1]
                   + 's * 'x1                    // + s[2] * x1[2]
                   + 2's * 'x1                   // + s[1] * x1[3]
                   + 2's * x1                    // + s[0] * x1[4]
                   - s * 2'x3                    // - s[4] * x3[0]
                   - 's * 2'x3                   // - s[3] * x3[1]
                   - 's * 'x3                    // - s[2] * x3[2]
                   - 2's * 'x3                   // - s[1] * x3[3]
                   - 2's * x3                    // - s[0] * x3[4]
                   - y1                          // - y1[4]
                   - y3                          // - y3[4]
                   + 0xFFFF * 2'q2               // + p[4] * q2[0]
                   + 0xFFFF * 2'q2               // + p[3] * q2[1]
                   + 0xFFFE * 'q2                // + p[2] * q2[2]
                   + 0xFFFF * 'q2                // + p[1] * q2[3]
                   + 0xFC2F * q2;                // + p[0] * q2[4]

arith_eq[ 4][ 5] =   s * 2'x1                    //   s[5] * x1[0]
                   + s * 2'x1                    // + s[4] * x1[1]
                   + 's * 'x1                    // + s[3] * x1[2]
                   + 's * 'x1                    // + s[2] * x1[3]
                   + 2's * x1                    // + s[1] * x1[4]
                   + 2's * x1                    // + s[0] * x1[5]
                   - s * 2'x3                    // - s[5] * x3[0]
                   - s * 2'x3                    // - s[4] * x3[1]
                   - 's * 'x3                    // - s[3] * x3[2]
                   - 's * 'x3                    // - s[2] * x3[3]
                   - 2's * x3                    // - s[1] * x3[4]
                   - 2's * x3                    // - s[0] * x3[5]
                   - y1                          // - y1[5]
                   - y3                          // - y3[5]
                   + 0xFFFF * 2'q2               // + p[5] * q2[0]
                   + 0xFFFF * 2'q2               // + p[4] * q2[1]
                   + 0xFFFF * 'q2                // + p[3] * q2[2]
                   + 0xFFFE * 'q2                // + p[2] * q2[3]
                   + 0xFFFF * q2                 // + p[1] * q2[4]
                   + 0xFC2F * q2;                // + p[0] * q2[5]

// clock #3

arith_eq[ 4][ 6] =   s * 3'x1                    //   s[6] * x1[0]
                   + 's * 3'x1                   // + s[5] * x1[1]
                   + 's * 2'x1                   // + s[4] * x1[2]
                   + 2's * 2'x1                  // + s[3] * x1[3]
                   + 2's * 'x1                   // + s[2] * x1[4]
                   + 3's * 'x1                   // + s[1] * x1[5]
                   + 3's * x1                    // + s[0] * x1[6]
                   - s * 3'x3                    // - s[6] * x3[0]
                   - 's * 3'x3                   // - s[5] * x3[1]
                   - 's * 2'x3                   // - s[4] * x3[2]
                   - 2's * 2'x3                  // - s[3] * x3[3]
                   - 2's * 'x3                   // - s[2] * x3[4]
                   - 3's * 'x3                   // - s[1] * x3[5]
                   - 3's * x3                    // - s[0] * x3[6]
                   - y1                          // - y1[6]
                   - y3                          // - y3[6]
                   + 0xFFFF * 3'q2               // + p[6] * q2[0]
                   + 0xFFFF * 3'q2               // + p[5] * q2[1]
                   + 0xFFFF * 2'q2               // + p[4] * q2[2]
                   + 0xFFFF * 2'q2               // + p[3] * q2[3]
                   + 0xFFFE * 'q2                // + p[2] * q2[4]
                   + 0xFFFF * 'q2                // + p[1] * q2[5]
                   + 0xFC2F * q2;                // + p[0] * q2[6]

arith_eq[ 4][ 7] =   s * 3'x1                    //   s[7] * x1[0]
                   + s * 3'x1                    // + s[6] * x1[1]
                   + 's * 2'x1                   // + s[5] * x1[2]
                   + 's * 2'x1                   // + s[4] * x1[3]
                   + 2's * 'x1                   // + s[3] * x1[4]
                   + 2's * 'x1                   // + s[2] * x1[5]
                   + 3's * x1                    // + s[1] * x1[6]
                   + 3's * x1                    // + s[0] * x1[7]
                   - s * 3'x3                    // - s[7] * x3[0]
                   - s * 3'x3                    // - s[6] * x3[1]
                   - 's * 2'x3                   // - s[5] * x3[2]
                   - 's * 2'x3                   // - s[4] * x3[3]
                   - 2's * 'x3                   // - s[3] * x3[4]
                   - 2's * 'x3                   // - s[2] * x3[5]
                   - 3's * x3                    // - s[1] * x3[6]
                   - 3's * x3                    // - s[0] * x3[7]
                   - y1                          // - y1[7]
                   - y3                          // - y3[7]
                   + 0xFFFF * 3'q2               // + p[7] * q2[0]
                   + 0xFFFF * 3'q2               // + p[6] * q2[1]
                   + 0xFFFF * 2'q2               // + p[5] * q2[2]
                   + 0xFFFF * 2'q2               // + p[4] * q2[3]
                   + 0xFFFF * 'q2                // + p[3] * q2[4]
                   + 0xFFFE * 'q2                // + p[2] * q2[5]
                   + 0xFFFF * q2                 // + p[1] * q2[6]
                   + 0xFC2F * q2;                // + p[0] * q2[7]

// clock #4

arith_eq[ 4][ 8] =   s * 4'x1                    //   s[8] * x1[0]
                   + 's * 4'x1                   // + s[7] * x1[1]
                   + 's * 3'x1                   // + s[6] * x1[2]
                   + 2's * 3'x1                  // + s[5] * x1[3]
                   + 2's * 2'x1                  // + s[4] * x1[4]
                   + 3's * 2'x1                  // + s[3] * x1[5]
                   + 3's * 'x1                   // + s[2] * x1[6]
                   + 4's * 'x1                   // + s[1] * x1[7]
                   + 4's * x1                    // + s[0] * x1[8]
                   - s * 4'x3                    // - s[8] * x3[0]
                   - 's * 4'x3                   // - s[7] * x3[1]
                   - 's * 3'x3                   // - s[6] * x3[2]
                   - 2's * 3'x3                  // - s[5] * x3[3]
                   - 2's * 2'x3                  // - s[4] * x3[4]
                   - 3's * 2'x3                  // - s[3] * x3[5]
                   - 3's * 'x3                   // - s[2] * x3[6]
                   - 4's * 'x3                   // - s[1] * x3[7]
                   - 4's * x3                    // - s[0] * x3[8]
                   - y1                          // - y1[8]
                   - y3                          // - y3[8]
                   + 0xFFFF * 4'q2               // + p[8] * q2[0]
                   + 0xFFFF * 4'q2               // + p[7] * q2[1]
                   + 0xFFFF * 3'q2               // + p[6] * q2[2]
                   + 0xFFFF * 3'q2               // + p[5] * q2[3]
                   + 0xFFFF * 2'q2               // + p[4] * q2[4]
                   + 0xFFFF * 2'q2               // + p[3] * q2[5]
                   + 0xFFFE * 'q2                // + p[2] * q2[6]
                   + 0xFFFF * 'q2                // + p[1] * q2[7]
                   + 0xFC2F * q2;                // + p[0] * q2[8]

arith_eq[ 4][ 9] =   s * 4'x1                    //   s[9] * x1[0]
                   + s * 4'x1                    // + s[8] * x1[1]
                   + 's * 3'x1                   // + s[7] * x1[2]
                   + 's * 3'x1                   // + s[6] * x1[3]
                   + 2's * 2'x1                  // + s[5] * x1[4]
                   + 2's * 2'x1                  // + s[4] * x1[5]
                   + 3's * 'x1                   // + s[3] * x1[6]
                   + 3's * 'x1                   // + s[2] * x1[7]
                   + 4's * x1                    // + s[1] * x1[8]
                   + 4's * x1                    // + s[0] * x1[9]
                   - s * 4'x3                    // - s[9] * x3[0]
                   - s * 4'x3                    // - s[8] * x3[1]
                   - 's * 3'x3                   // - s[7] * x3[2]
                   - 's * 3'x3                   // - s[6] * x3[3]
                   - 2's * 2'x3                  // - s[5] * x3[4]
                   - 2's * 2'x3                  // - s[4] * x3[5]
                   - 3's * 'x3                   // - s[3] * x3[6]
                   - 3's * 'x3                   // - s[2] * x3[7]
                   - 4's * x3                    // - s[1] * x3[8]
                   - 4's * x3                    // - s[0] * x3[9]
                   - y1                          // - y1[9]
                   - y3                          // - y3[9]
                   + 0xFFFF * 4'q2               // + p[9] * q2[0]
                   + 0xFFFF * 4'q2               // + p[8] * q2[1]
                   + 0xFFFF * 3'q2               // + p[7] * q2[2]
                   + 0xFFFF * 3'q2               // + p[6] * q2[3]
                   + 0xFFFF * 2'q2               // + p[5] * q2[4]
                   + 0xFFFF * 2'q2               // + p[4] * q2[5]
                   + 0xFFFF * 'q2                // + p[3] * q2[6]
                   + 0xFFFE * 'q2                // + p[2] * q2[7]
                   + 0xFFFF * q2                 // + p[1] * q2[8]
                   + 0xFC2F * q2;                // + p[0] * q2[9]

// clock #5

arith_eq[ 4][10] =   s * 5'x1                    //   s[10] * x1[0]
                   + 's * 5'x1                   // + s[9] * x1[1]
                   + 's * 4'x1                   // + s[8] * x1[2]
                   + 2's * 4'x1                  // + s[7] * x1[3]
                   + 2's * 3'x1                  // + s[6] * x1[4]
                   + 3's * 3'x1                  // + s[5] * x1[5]
                   + 3's * 2'x1                  // + s[4] * x1[6]
                   + 4's * 2'x1                  // + s[3] * x1[7]
                   + 4's * 'x1                   // + s[2] * x1[8]
                   + 5's * 'x1                   // + s[1] * x1[9]
                   + 5's * x1                    // + s[0] * x1[10]
                   - s * 5'x3                    // - s[10] * x3[0]
                   - 's * 5'x3                   // - s[9] * x3[1]
                   - 's * 4'x3                   // - s[8] * x3[2]
                   - 2's * 4'x3                  // - s[7] * x3[3]
                   - 2's * 3'x3                  // - s[6] * x3[4]
                   - 3's * 3'x3                  // - s[5] * x3[5]
                   - 3's * 2'x3                  // - s[4] * x3[6]
                   - 4's * 2'x3                  // - s[3] * x3[7]
                   - 4's * 'x3                   // - s[2] * x3[8]
                   - 5's * 'x3                   // - s[1] * x3[9]
                   - 5's * x3                    // - s[0] * x3[10]
                   - y1                          // - y1[10]
                   - y3                          // - y3[10]
                   + 0xFFFF * 5'q2               // + p[10] * q2[0]
                   + 0xFFFF * 5'q2               // + p[9] * q2[1]
                   + 0xFFFF * 4'q2               // + p[8] * q2[2]
                   + 0xFFFF * 4'q2               // + p[7] * q2[3]
                   + 0xFFFF * 3'q2               // + p[6] * q2[4]
                   + 0xFFFF * 3'q2               // + p[5] * q2[5]
                   + 0xFFFF * 2'q2               // + p[4] * q2[6]
                   + 0xFFFF * 2'q2               // + p[3] * q2[7]
                   + 0xFFFE * 'q2                // + p[2] * q2[8]
                   + 0xFFFF * 'q2                // + p[1] * q2[9]
                   + 0xFC2F * q2;                // + p[0] * q2[10]

arith_eq[ 4][11] =   s * 5'x1                    //   s[11] * x1[0]
                   + s * 5'x1                    // + s[10] * x1[1]
                   + 's * 4'x1                   // + s[9] * x1[2]
                   + 's * 4'x1                   // + s[8] * x1[3]
                   + 2's * 3'x1                  // + s[7] * x1[4]
                   + 2's * 3'x1                  // + s[6] * x1[5]
                   + 3's * 2'x1                  // + s[5] * x1[6]
                   + 3's * 2'x1                  // + s[4] * x1[7]
                   + 4's * 'x1                   // + s[3] * x1[8]
                   + 4's * 'x1                   // + s[2] * x1[9]
                   + 5's * x1                    // + s[1] * x1[10]
                   + 5's * x1                    // + s[0] * x1[11]
                   - s * 5'x3                    // - s[11] * x3[0]
                   - s * 5'x3                    // - s[10] * x3[1]
                   - 's * 4'x3                   // - s[9] * x3[2]
                   - 's * 4'x3                   // - s[8] * x3[3]
                   - 2's * 3'x3                  // - s[7] * x3[4]
                   - 2's * 3'x3                  // - s[6] * x3[5]
                   - 3's * 2'x3                  // - s[5] * x3[6]
                   - 3's * 2'x3                  // - s[4] * x3[7]
                   - 4's * 'x3                   // - s[3] * x3[8]
                   - 4's * 'x3                   // - s[2] * x3[9]
                   - 5's * x3                    // - s[1] * x3[10]
                   - 5's * x3                    // - s[0] * x3[11]
                   - y1                          // - y1[11]
                   - y3                          // - y3[11]
                   + 0xFFFF * 5'q2               // + p[11] * q2[0]
                   + 0xFFFF * 5'q2               // + p[10] * q2[1]
                   + 0xFFFF * 4'q2               // + p[9] * q2[2]
                   + 0xFFFF * 4'q2               // + p[8] * q2[3]
                   + 0xFFFF * 3'q2               // + p[7] * q2[4]
                   + 0xFFFF * 3'q2               // + p[6] * q2[5]
                   + 0xFFFF * 2'q2               // + p[5] * q2[6]
                   + 0xFFFF * 2'q2               // + p[4] * q2[7]
                   + 0xFFFF * 'q2                // + p[3] * q2[8]
                   + 0xFFFE * 'q2                // + p[2] * q2[9]
                   + 0xFFFF * q2                 // + p[1] * q2[10]
                   + 0xFC2F * q2;                // + p[0] * q2[11]

// clock #6

arith_eq[ 4][12] =   s * 6'x1                    //   s[12] * x1[0]
                   + 's * 6'x1                   // + s[11] * x1[1]
                   + 's * 5'x1                   // + s[10] * x1[2]
                   + 2's * 5'x1                  // + s[9] * x1[3]
                   + 2's * 4'x1                  // + s[8] * x1[4]
                   + 3's * 4'x1                  // + s[7] * x1[5]
                   + 3's * 3'x1                  // + s[6] * x1[6]
                   + 4's * 3'x1                  // + s[5] * x1[7]
                   + 4's * 2'x1                  // + s[4] * x1[8]
                   + 5's * 2'x1                  // + s[3] * x1[9]
                   + 5's * 'x1                   // + s[2] * x1[10]
                   + 6's * 'x1                   // + s[1] * x1[11]
                   + 6's * x1                    // + s[0] * x1[12]
                   - s * 6'x3                    // - s[12] * x3[0]
                   - 's * 6'x3                   // - s[11] * x3[1]
                   - 's * 5'x3                   // - s[10] * x3[2]
                   - 2's * 5'x3                  // - s[9] * x3[3]
                   - 2's * 4'x3                  // - s[8] * x3[4]
                   - 3's * 4'x3                  // - s[7] * x3[5]
                   - 3's * 3'x3                  // - s[6] * x3[6]
                   - 4's * 3'x3                  // - s[5] * x3[7]
                   - 4's * 2'x3                  // - s[4] * x3[8]
                   - 5's * 2'x3                  // - s[3] * x3[9]
                   - 5's * 'x3                   // - s[2] * x3[10]
                   - 6's * 'x3                   // - s[1] * x3[11]
                   - 6's * x3                    // - s[0] * x3[12]
                   - y1                          // - y1[12]
                   - y3                          // - y3[12]
                   + 0xFFFF * 6'q2               // + p[12] * q2[0]
                   + 0xFFFF * 6'q2               // + p[11] * q2[1]
                   + 0xFFFF * 5'q2               // + p[10] * q2[2]
                   + 0xFFFF * 5'q2               // + p[9] * q2[3]
                   + 0xFFFF * 4'q2               // + p[8] * q2[4]
                   + 0xFFFF * 4'q2               // + p[7] * q2[5]
                   + 0xFFFF * 3'q2               // + p[6] * q2[6]
                   + 0xFFFF * 3'q2               // + p[5] * q2[7]
                   + 0xFFFF * 2'q2               // + p[4] * q2[8]
                   + 0xFFFF * 2'q2               // + p[3] * q2[9]
                   + 0xFFFE * 'q2                // + p[2] * q2[10]
                   + 0xFFFF * 'q2                // + p[1] * q2[11]
                   + 0xFC2F * q2;                // + p[0] * q2[12]

arith_eq[ 4][13] =   s * 6'x1                    //   s[13] * x1[0]
                   + s * 6'x1                    // + s[12] * x1[1]
                   + 's * 5'x1                   // + s[11] * x1[2]
                   + 's * 5'x1                   // + s[10] * x1[3]
                   + 2's * 4'x1                  // + s[9] * x1[4]
                   + 2's * 4'x1                  // + s[8] * x1[5]
                   + 3's * 3'x1                  // + s[7] * x1[6]
                   + 3's * 3'x1                  // + s[6] * x1[7]
                   + 4's * 2'x1                  // + s[5] * x1[8]
                   + 4's * 2'x1                  // + s[4] * x1[9]
                   + 5's * 'x1                   // + s[3] * x1[10]
                   + 5's * 'x1                   // + s[2] * x1[11]
                   + 6's * x1                    // + s[1] * x1[12]
                   + 6's * x1                    // + s[0] * x1[13]
                   - s * 6'x3                    // - s[13] * x3[0]
                   - s * 6'x3                    // - s[12] * x3[1]
                   - 's * 5'x3                   // - s[11] * x3[2]
                   - 's * 5'x3                   // - s[10] * x3[3]
                   - 2's * 4'x3                  // - s[9] * x3[4]
                   - 2's * 4'x3                  // - s[8] * x3[5]
                   - 3's * 3'x3                  // - s[7] * x3[6]
                   - 3's * 3'x3                  // - s[6] * x3[7]
                   - 4's * 2'x3                  // - s[5] * x3[8]
                   - 4's * 2'x3                  // - s[4] * x3[9]
                   - 5's * 'x3                   // - s[3] * x3[10]
                   - 5's * 'x3                   // - s[2] * x3[11]
                   - 6's * x3                    // - s[1] * x3[12]
                   - 6's * x3                    // - s[0] * x3[13]
                   - y1                          // - y1[13]
                   - y3                          // - y3[13]
                   + 0xFFFF * 6'q2               // + p[13] * q2[0]
                   + 0xFFFF * 6'q2               // + p[12] * q2[1]
                   + 0xFFFF * 5'q2               // + p[11] * q2[2]
                   + 0xFFFF * 5'q2               // + p[10] * q2[3]
                   + 0xFFFF * 4'q2               // + p[9] * q2[4]
                   + 0xFFFF * 4'q2               // + p[8] * q2[5]
                   + 0xFFFF * 3'q2               // + p[7] * q2[6]
                   + 0xFFFF * 3'q2               // + p[6] * q2[7]
                   + 0xFFFF * 2'q2               // + p[5] * q2[8]
                   + 0xFFFF * 2'q2               // + p[4] * q2[9]
                   + 0xFFFF * 'q2                // + p[3] * q2[10]
                   + 0xFFFE * 'q2                // + p[2] * q2[11]
                   + 0xFFFF * q2                 // + p[1] * q2[12]
                   + 0xFC2F * q2;                // + p[0] * q2[13]

// clock #7

arith_eq[ 4][14] =   s * 7'x1                    //   s[14] * x1[0]
                   + 's * 7'x1                   // + s[13] * x1[1]
                   + 's * 6'x1                   // + s[12] * x1[2]
                   + 2's * 6'x1                  // + s[11] * x1[3]
                   + 2's * 5'x1                  // + s[10] * x1[4]
                   + 3's * 5'x1                  // + s[9] * x1[5]
                   + 3's * 4'x1                  // + s[8] * x1[6]
                   + 4's * 4'x1                  // + s[7] * x1[7]
                   + 4's * 3'x1                  // + s[6] * x1[8]
                   + 5's * 3'x1                  // + s[5] * x1[9]
                   + 5's * 2'x1                  // + s[4] * x1[10]
                   + 6's * 2'x1                  // + s[3] * x1[11]
                   + 6's * 'x1                   // + s[2] * x1[12]
                   + 7's * 'x1                   // + s[1] * x1[13]
                   + 7's * x1                    // + s[0] * x1[14]
                   - s * 7'x3                    // - s[14] * x3[0]
                   - 's * 7'x3                   // - s[13] * x3[1]
                   - 's * 6'x3                   // - s[12] * x3[2]
                   - 2's * 6'x3                  // - s[11] * x3[3]
                   - 2's * 5'x3                  // - s[10] * x3[4]
                   - 3's * 5'x3                  // - s[9] * x3[5]
                   - 3's * 4'x3                  // - s[8] * x3[6]
                   - 4's * 4'x3                  // - s[7] * x3[7]
                   - 4's * 3'x3                  // - s[6] * x3[8]
                   - 5's * 3'x3                  // - s[5] * x3[9]
                   - 5's * 2'x3                  // - s[4] * x3[10]
                   - 6's * 2'x3                  // - s[3] * x3[11]
                   - 6's * 'x3                   // - s[2] * x3[12]
                   - 7's * 'x3                   // - s[1] * x3[13]
                   - 7's * x3                    // - s[0] * x3[14]
                   - y1                          // - y1[14]
                   - y3                          // - y3[14]
                   + 0xFFFF * 7'q2               // + p[14] * q2[0]
                   + 0xFFFF * 7'q2               // + p[13] * q2[1]
                   + 0xFFFF * 6'q2               // + p[12] * q2[2]
                   + 0xFFFF * 6'q2               // + p[11] * q2[3]
                   + 0xFFFF * 5'q2               // + p[10] * q2[4]
                   + 0xFFFF * 5'q2               // + p[9] * q2[5]
                   + 0xFFFF * 4'q2               // + p[8] * q2[6]
                   + 0xFFFF * 4'q2               // + p[7] * q2[7]
                   + 0xFFFF * 3'q2               // + p[6] * q2[8]
                   + 0xFFFF * 3'q2               // + p[5] * q2[9]
                   + 0xFFFF * 2'q2               // + p[4] * q2[10]
                   + 0xFFFF * 2'q2               // + p[3] * q2[11]
                   + 0xFFFE * 'q2                // + p[2] * q2[12]
                   + 0xFFFF * 'q2                // + p[1] * q2[13]
                   + 0xFC2F * q2;                // + p[0] * q2[14]

arith_eq[ 4][15] =   s * 7'x1                    //   s[15] * x1[0]
                   + s * 7'x1                    // + s[14] * x1[1]
                   + 's * 6'x1                   // + s[13] * x1[2]
                   + 's * 6'x1                   // + s[12] * x1[3]
                   + 2's * 5'x1                  // + s[11] * x1[4]
                   + 2's * 5'x1                  // + s[10] * x1[5]
                   + 3's * 4'x1                  // + s[9] * x1[6]
                   + 3's * 4'x1                  // + s[8] * x1[7]
                   + 4's * 3'x1                  // + s[7] * x1[8]
                   + 4's * 3'x1                  // + s[6] * x1[9]
                   + 5's * 2'x1                  // + s[5] * x1[10]
                   + 5's * 2'x1                  // + s[4] * x1[11]
                   + 6's * 'x1                   // + s[3] * x1[12]
                   + 6's * 'x1                   // + s[2] * x1[13]
                   + 7's * x1                    // + s[1] * x1[14]
                   + 7's * x1                    // + s[0] * x1[15]
                   - s * 7'x3                    // - s[15] * x3[0]
                   - s * 7'x3                    // - s[14] * x3[1]
                   - 's * 6'x3                   // - s[13] * x3[2]
                   - 's * 6'x3                   // - s[12] * x3[3]
                   - 2's * 5'x3                  // - s[11] * x3[4]
                   - 2's * 5'x3                  // - s[10] * x3[5]
                   - 3's * 4'x3                  // - s[9] * x3[6]
                   - 3's * 4'x3                  // - s[8] * x3[7]
                   - 4's * 3'x3                  // - s[7] * x3[8]
                   - 4's * 3'x3                  // - s[6] * x3[9]
                   - 5's * 2'x3                  // - s[5] * x3[10]
                   - 5's * 2'x3                  // - s[4] * x3[11]
                   - 6's * 'x3                   // - s[3] * x3[12]
                   - 6's * 'x3                   // - s[2] * x3[13]
                   - 7's * x3                    // - s[1] * x3[14]
                   - 7's * x3                    // - s[0] * x3[15]
                   - y1                          // - y1[15]
                   - y3                          // - y3[15]
                   + 0xFFFF * 7'q2               // + p[15] * q2[0]
                   + 0xFFFF * 7'q2               // + p[14] * q2[1]
                   + 0xFFFF * 6'q2               // + p[13] * q2[2]
                   + 0xFFFF * 6'q2               // + p[12] * q2[3]
                   + 0xFFFF * 5'q2               // + p[11] * q2[4]
                   + 0xFFFF * 5'q2               // + p[10] * q2[5]
                   + 0xFFFF * 4'q2               // + p[9] * q2[6]
                   + 0xFFFF * 4'q2               // + p[8] * q2[7]
                   + 0xFFFF * 3'q2               // + p[7] * q2[8]
                   + 0xFFFF * 3'q2               // + p[6] * q2[9]
                   + 0xFFFF * 2'q2               // + p[5] * q2[10]
                   + 0xFFFF * 2'q2               // + p[4] * q2[11]
                   + 0xFFFF * 'q2                // + p[3] * q2[12]
                   + 0xFFFE * 'q2                // + p[2] * q2[13]
                   + 0xFFFF * q2                 // + p[1] * q2[14]
                   + 0xFC2F * q2;                // + p[0] * q2[15]

// clock #8

arith_eq[ 4][16] =   's * 8'x1                   //   s[15] * x1[1]
                   + 's * 7'x1                   // + s[14] * x1[2]
                   + 2's * 7'x1                  // + s[13] * x1[3]
                   + 2's * 6'x1                  // + s[12] * x1[4]
                   + 3's * 6'x1                  // + s[11] * x1[5]
                   + 3's * 5'x1                  // + s[10] * x1[6]
                   + 4's * 5'x1                  // + s[9] * x1[7]
                   + 4's * 4'x1                  // + s[8] * x1[8]
                   + 5's * 4'x1                  // + s[7] * x1[9]
                   + 5's * 3'x1                  // + s[6] * x1[10]
                   + 6's * 3'x1                  // + s[5] * x1[11]
                   + 6's * 2'x1                  // + s[4] * x1[12]
                   + 7's * 2'x1                  // + s[3] * x1[13]
                   + 7's * 'x1                   // + s[2] * x1[14]
                   + 8's * 'x1                   // + s[1] * x1[15]
                   - 's * 8'x3                   // - s[15] * x3[1]
                   - 's * 7'x3                   // - s[14] * x3[2]
                   - 2's * 7'x3                  // - s[13] * x3[3]
                   - 2's * 6'x3                  // - s[12] * x3[4]
                   - 3's * 6'x3                  // - s[11] * x3[5]
                   - 3's * 5'x3                  // - s[10] * x3[6]
                   - 4's * 5'x3                  // - s[9] * x3[7]
                   - 4's * 4'x3                  // - s[8] * x3[8]
                   - 5's * 4'x3                  // - s[7] * x3[9]
                   - 5's * 3'x3                  // - s[6] * x3[10]
                   - 6's * 3'x3                  // - s[5] * x3[11]
                   - 6's * 2'x3                  // - s[4] * x3[12]
                   - 7's * 2'x3                  // - s[3] * x3[13]
                   - 7's * 'x3                   // - s[2] * x3[14]
                   - 8's * 'x3                   // - s[1] * x3[15]
                   + 0xFFFF * 8'q2               // + p[15] * q2[1]
                   + 0xFFFF * 7'q2               // + p[14] * q2[2]
                   + 0xFFFF * 7'q2               // + p[13] * q2[3]
                   + 0xFFFF * 6'q2               // + p[12] * q2[4]
                   + 0xFFFF * 6'q2               // + p[11] * q2[5]
                   + 0xFFFF * 5'q2               // + p[10] * q2[6]
                   + 0xFFFF * 5'q2               // + p[9] * q2[7]
                   + 0xFFFF * 4'q2               // + p[8] * q2[8]
                   + 0xFFFF * 4'q2               // + p[7] * q2[9]
                   + 0xFFFF * 3'q2               // + p[6] * q2[10]
                   + 0xFFFF * 3'q2               // + p[5] * q2[11]
                   + 0xFFFF * 2'q2               // + p[4] * q2[12]
                   + 0xFFFF * 2'q2               // + p[3] * q2[13]
                   + 0xFFFE * 'q2                // + p[2] * q2[14]
                   + 0xFFFF * 'q2;               // + p[1] * q2[15]

arith_eq[ 4][17] =   's * 7'x1                   //   s[15] * x1[2]
                   + 's * 7'x1                   // + s[14] * x1[3]
                   + 2's * 6'x1                  // + s[13] * x1[4]
                   + 2's * 6'x1                  // + s[12] * x1[5]
                   + 3's * 5'x1                  // + s[11] * x1[6]
                   + 3's * 5'x1                  // + s[10] * x1[7]
                   + 4's * 4'x1                  // + s[9] * x1[8]
                   + 4's * 4'x1                  // + s[8] * x1[9]
                   + 5's * 3'x1                  // + s[7] * x1[10]
                   + 5's * 3'x1                  // + s[6] * x1[11]
                   + 6's * 2'x1                  // + s[5] * x1[12]
                   + 6's * 2'x1                  // + s[4] * x1[13]
                   + 7's * 'x1                   // + s[3] * x1[14]
                   + 7's * 'x1                   // + s[2] * x1[15]
                   - 's * 7'x3                   // - s[15] * x3[2]
                   - 's * 7'x3                   // - s[14] * x3[3]
                   - 2's * 6'x3                  // - s[13] * x3[4]
                   - 2's * 6'x3                  // - s[12] * x3[5]
                   - 3's * 5'x3                  // - s[11] * x3[6]
                   - 3's * 5'x3                  // - s[10] * x3[7]
                   - 4's * 4'x3                  // - s[9] * x3[8]
                   - 4's * 4'x3                  // - s[8] * x3[9]
                   - 5's * 3'x3                  // - s[7] * x3[10]
                   - 5's * 3'x3                  // - s[6] * x3[11]
                   - 6's * 2'x3                  // - s[5] * x3[12]
                   - 6's * 2'x3                  // - s[4] * x3[13]
                   - 7's * 'x3                   // - s[3] * x3[14]
                   - 7's * 'x3                   // - s[2] * x3[15]
                   + 0xFFFF * 7'q2               // + p[15] * q2[2]
                   + 0xFFFF * 7'q2               // + p[14] * q2[3]
                   + 0xFFFF * 6'q2               // + p[13] * q2[4]
                   + 0xFFFF * 6'q2               // + p[12] * q2[5]
                   + 0xFFFF * 5'q2               // + p[11] * q2[6]
                   + 0xFFFF * 5'q2               // + p[10] * q2[7]
                   + 0xFFFF * 4'q2               // + p[9] * q2[8]
                   + 0xFFFF * 4'q2               // + p[8] * q2[9]
                   + 0xFFFF * 3'q2               // + p[7] * q2[10]
                   + 0xFFFF * 3'q2               // + p[6] * q2[11]
                   + 0xFFFF * 2'q2               // + p[5] * q2[12]
                   + 0xFFFF * 2'q2               // + p[4] * q2[13]
                   + 0xFFFF * 'q2                // + p[3] * q2[14]
                   + 0xFFFE * 'q2;               // + p[2] * q2[15]

// clock #9

arith_eq[ 4][18] =   2's * 8'x1                  //   s[15] * x1[3]
                   + 2's * 7'x1                  // + s[14] * x1[4]
                   + 3's * 7'x1                  // + s[13] * x1[5]
                   + 3's * 6'x1                  // + s[12] * x1[6]
                   + 4's * 6'x1                  // + s[11] * x1[7]
                   + 4's * 5'x1                  // + s[10] * x1[8]
                   + 5's * 5'x1                  // + s[9] * x1[9]
                   + 5's * 4'x1                  // + s[8] * x1[10]
                   + 6's * 4'x1                  // + s[7] * x1[11]
                   + 6's * 3'x1                  // + s[6] * x1[12]
                   + 7's * 3'x1                  // + s[5] * x1[13]
                   + 7's * 2'x1                  // + s[4] * x1[14]
                   + 8's * 2'x1                  // + s[3] * x1[15]
                   - 2's * 8'x3                  // - s[15] * x3[3]
                   - 2's * 7'x3                  // - s[14] * x3[4]
                   - 3's * 7'x3                  // - s[13] * x3[5]
                   - 3's * 6'x3                  // - s[12] * x3[6]
                   - 4's * 6'x3                  // - s[11] * x3[7]
                   - 4's * 5'x3                  // - s[10] * x3[8]
                   - 5's * 5'x3                  // - s[9] * x3[9]
                   - 5's * 4'x3                  // - s[8] * x3[10]
                   - 6's * 4'x3                  // - s[7] * x3[11]
                   - 6's * 3'x3                  // - s[6] * x3[12]
                   - 7's * 3'x3                  // - s[5] * x3[13]
                   - 7's * 2'x3                  // - s[4] * x3[14]
                   - 8's * 2'x3                  // - s[3] * x3[15]
                   + 0xFFFF * 8'q2               // + p[15] * q2[3]
                   + 0xFFFF * 7'q2               // + p[14] * q2[4]
                   + 0xFFFF * 7'q2               // + p[13] * q2[5]
                   + 0xFFFF * 6'q2               // + p[12] * q2[6]
                   + 0xFFFF * 6'q2               // + p[11] * q2[7]
                   + 0xFFFF * 5'q2               // + p[10] * q2[8]
                   + 0xFFFF * 5'q2               // + p[9] * q2[9]
                   + 0xFFFF * 4'q2               // + p[8] * q2[10]
                   + 0xFFFF * 4'q2               // + p[7] * q2[11]
                   + 0xFFFF * 3'q2               // + p[6] * q2[12]
                   + 0xFFFF * 3'q2               // + p[5] * q2[13]
                   + 0xFFFF * 2'q2               // + p[4] * q2[14]
                   + 0xFFFF * 2'q2;              // + p[3] * q2[15]

arith_eq[ 4][19] =   2's * 7'x1                  //   s[15] * x1[4]
                   + 2's * 7'x1                  // + s[14] * x1[5]
                   + 3's * 6'x1                  // + s[13] * x1[6]
                   + 3's * 6'x1                  // + s[12] * x1[7]
                   + 4's * 5'x1                  // + s[11] * x1[8]
                   + 4's * 5'x1                  // + s[10] * x1[9]
                   + 5's * 4'x1                  // + s[9] * x1[10]
                   + 5's * 4'x1                  // + s[8] * x1[11]
                   + 6's * 3'x1                  // + s[7] * x1[12]
                   + 6's * 3'x1                  // + s[6] * x1[13]
                   + 7's * 2'x1                  // + s[5] * x1[14]
                   + 7's * 2'x1                  // + s[4] * x1[15]
                   - 2's * 7'x3                  // - s[15] * x3[4]
                   - 2's * 7'x3                  // - s[14] * x3[5]
                   - 3's * 6'x3                  // - s[13] * x3[6]
                   - 3's * 6'x3                  // - s[12] * x3[7]
                   - 4's * 5'x3                  // - s[11] * x3[8]
                   - 4's * 5'x3                  // - s[10] * x3[9]
                   - 5's * 4'x3                  // - s[9] * x3[10]
                   - 5's * 4'x3                  // - s[8] * x3[11]
                   - 6's * 3'x3                  // - s[7] * x3[12]
                   - 6's * 3'x3                  // - s[6] * x3[13]
                   - 7's * 2'x3                  // - s[5] * x3[14]
                   - 7's * 2'x3                  // - s[4] * x3[15]
                   + 0xFFFF * 7'q2               // + p[15] * q2[4]
                   + 0xFFFF * 7'q2               // + p[14] * q2[5]
                   + 0xFFFF * 6'q2               // + p[13] * q2[6]
                   + 0xFFFF * 6'q2               // + p[12] * q2[7]
                   + 0xFFFF * 5'q2               // + p[11] * q2[8]
                   + 0xFFFF * 5'q2               // + p[10] * q2[9]
                   + 0xFFFF * 4'q2               // + p[9] * q2[10]
                   + 0xFFFF * 4'q2               // + p[8] * q2[11]
                   + 0xFFFF * 3'q2               // + p[7] * q2[12]
                   + 0xFFFF * 3'q2               // + p[6] * q2[13]
                   + 0xFFFF * 2'q2               // + p[5] * q2[14]
                   + 0xFFFF * 2'q2;              // + p[4] * q2[15]

// clock #10

arith_eq[ 4][20] =   3's * 8'x1                  //   s[15] * x1[5]
                   + 3's * 7'x1                  // + s[14] * x1[6]
                   + 4's * 7'x1                  // + s[13] * x1[7]
                   + 4's * 6'x1                  // + s[12] * x1[8]
                   + 5's * 6'x1                  // + s[11] * x1[9]
                   + 5's * 5'x1                  // + s[10] * x1[10]
                   + 6's * 5'x1                  // + s[9] * x1[11]
                   + 6's * 4'x1                  // + s[8] * x1[12]
                   + 7's * 4'x1                  // + s[7] * x1[13]
                   + 7's * 3'x1                  // + s[6] * x1[14]
                   + 8's * 3'x1                  // + s[5] * x1[15]
                   - 3's * 8'x3                  // - s[15] * x3[5]
                   - 3's * 7'x3                  // - s[14] * x3[6]
                   - 4's * 7'x3                  // - s[13] * x3[7]
                   - 4's * 6'x3                  // - s[12] * x3[8]
                   - 5's * 6'x3                  // - s[11] * x3[9]
                   - 5's * 5'x3                  // - s[10] * x3[10]
                   - 6's * 5'x3                  // - s[9] * x3[11]
                   - 6's * 4'x3                  // - s[8] * x3[12]
                   - 7's * 4'x3                  // - s[7] * x3[13]
                   - 7's * 3'x3                  // - s[6] * x3[14]
                   - 8's * 3'x3                  // - s[5] * x3[15]
                   + 0xFFFF * 8'q2               // + p[15] * q2[5]
                   + 0xFFFF * 7'q2               // + p[14] * q2[6]
                   + 0xFFFF * 7'q2               // + p[13] * q2[7]
                   + 0xFFFF * 6'q2               // + p[12] * q2[8]
                   + 0xFFFF * 6'q2               // + p[11] * q2[9]
                   + 0xFFFF * 5'q2               // + p[10] * q2[10]
                   + 0xFFFF * 5'q2               // + p[9] * q2[11]
                   + 0xFFFF * 4'q2               // + p[8] * q2[12]
                   + 0xFFFF * 4'q2               // + p[7] * q2[13]
                   + 0xFFFF * 3'q2               // + p[6] * q2[14]
                   + 0xFFFF * 3'q2;              // + p[5] * q2[15]

arith_eq[ 4][21] =   3's * 7'x1                  //   s[15] * x1[6]
                   + 3's * 7'x1                  // + s[14] * x1[7]
                   + 4's * 6'x1                  // + s[13] * x1[8]
                   + 4's * 6'x1                  // + s[12] * x1[9]
                   + 5's * 5'x1                  // + s[11] * x1[10]
                   + 5's * 5'x1                  // + s[10] * x1[11]
                   + 6's * 4'x1                  // + s[9] * x1[12]
                   + 6's * 4'x1                  // + s[8] * x1[13]
                   + 7's * 3'x1                  // + s[7] * x1[14]
                   + 7's * 3'x1                  // + s[6] * x1[15]
                   - 3's * 7'x3                  // - s[15] * x3[6]
                   - 3's * 7'x3                  // - s[14] * x3[7]
                   - 4's * 6'x3                  // - s[13] * x3[8]
                   - 4's * 6'x3                  // - s[12] * x3[9]
                   - 5's * 5'x3                  // - s[11] * x3[10]
                   - 5's * 5'x3                  // - s[10] * x3[11]
                   - 6's * 4'x3                  // - s[9] * x3[12]
                   - 6's * 4'x3                  // - s[8] * x3[13]
                   - 7's * 3'x3                  // - s[7] * x3[14]
                   - 7's * 3'x3                  // - s[6] * x3[15]
                   + 0xFFFF * 7'q2               // + p[15] * q2[6]
                   + 0xFFFF * 7'q2               // + p[14] * q2[7]
                   + 0xFFFF * 6'q2               // + p[13] * q2[8]
                   + 0xFFFF * 6'q2               // + p[12] * q2[9]
                   + 0xFFFF * 5'q2               // + p[11] * q2[10]
                   + 0xFFFF * 5'q2               // + p[10] * q2[11]
                   + 0xFFFF * 4'q2               // + p[9] * q2[12]
                   + 0xFFFF * 4'q2               // + p[8] * q2[13]
                   + 0xFFFF * 3'q2               // + p[7] * q2[14]
                   + 0xFFFF * 3'q2;              // + p[6] * q2[15]

// clock #11

arith_eq[ 4][22] =   4's * 8'x1                  //   s[15] * x1[7]
                   + 4's * 7'x1                  // + s[14] * x1[8]
                   + 5's * 7'x1                  // + s[13] * x1[9]
                   + 5's * 6'x1                  // + s[12] * x1[10]
                   + 6's * 6'x1                  // + s[11] * x1[11]
                   + 6's * 5'x1                  // + s[10] * x1[12]
                   + 7's * 5'x1                  // + s[9] * x1[13]
                   + 7's * 4'x1                  // + s[8] * x1[14]
                   + 8's * 4'x1                  // + s[7] * x1[15]
                   - 4's * 8'x3                  // - s[15] * x3[7]
                   - 4's * 7'x3                  // - s[14] * x3[8]
                   - 5's * 7'x3                  // - s[13] * x3[9]
                   - 5's * 6'x3                  // - s[12] * x3[10]
                   - 6's * 6'x3                  // - s[11] * x3[11]
                   - 6's * 5'x3                  // - s[10] * x3[12]
                   - 7's * 5'x3                  // - s[9] * x3[13]
                   - 7's * 4'x3                  // - s[8] * x3[14]
                   - 8's * 4'x3                  // - s[7] * x3[15]
                   + 0xFFFF * 8'q2               // + p[15] * q2[7]
                   + 0xFFFF * 7'q2               // + p[14] * q2[8]
                   + 0xFFFF * 7'q2               // + p[13] * q2[9]
                   + 0xFFFF * 6'q2               // + p[12] * q2[10]
                   + 0xFFFF * 6'q2               // + p[11] * q2[11]
                   + 0xFFFF * 5'q2               // + p[10] * q2[12]
                   + 0xFFFF * 5'q2               // + p[9] * q2[13]
                   + 0xFFFF * 4'q2               // + p[8] * q2[14]
                   + 0xFFFF * 4'q2;              // + p[7] * q2[15]

arith_eq[ 4][23] =   4's * 7'x1                  //   s[15] * x1[8]
                   + 4's * 7'x1                  // + s[14] * x1[9]
                   + 5's * 6'x1                  // + s[13] * x1[10]
                   + 5's * 6'x1                  // + s[12] * x1[11]
                   + 6's * 5'x1                  // + s[11] * x1[12]
                   + 6's * 5'x1                  // + s[10] * x1[13]
                   + 7's * 4'x1                  // + s[9] * x1[14]
                   + 7's * 4'x1                  // + s[8] * x1[15]
                   - 4's * 7'x3                  // - s[15] * x3[8]
                   - 4's * 7'x3                  // - s[14] * x3[9]
                   - 5's * 6'x3                  // - s[13] * x3[10]
                   - 5's * 6'x3                  // - s[12] * x3[11]
                   - 6's * 5'x3                  // - s[11] * x3[12]
                   - 6's * 5'x3                  // - s[10] * x3[13]
                   - 7's * 4'x3                  // - s[9] * x3[14]
                   - 7's * 4'x3                  // - s[8] * x3[15]
                   + 0xFFFF * 7'q2               // + p[15] * q2[8]
                   + 0xFFFF * 7'q2               // + p[14] * q2[9]
                   + 0xFFFF * 6'q2               // + p[13] * q2[10]
                   + 0xFFFF * 6'q2               // + p[12] * q2[11]
                   + 0xFFFF * 5'q2               // + p[11] * q2[12]
                   + 0xFFFF * 5'q2               // + p[10] * q2[13]
                   + 0xFFFF * 4'q2               // + p[9] * q2[14]
                   + 0xFFFF * 4'q2;              // + p[8] * q2[15]

// clock #12

arith_eq[ 4][24] =   5's * 8'x1                  //   s[15] * x1[9]
                   + 5's * 7'x1                  // + s[14] * x1[10]
                   + 6's * 7'x1                  // + s[13] * x1[11]
                   + 6's * 6'x1                  // + s[12] * x1[12]
                   + 7's * 6'x1                  // + s[11] * x1[13]
                   + 7's * 5'x1                  // + s[10] * x1[14]
                   + 8's * 5'x1                  // + s[9] * x1[15]
                   - 5's * 8'x3                  // - s[15] * x3[9]
                   - 5's * 7'x3                  // - s[14] * x3[10]
                   - 6's * 7'x3                  // - s[13] * x3[11]
                   - 6's * 6'x3                  // - s[12] * x3[12]
                   - 7's * 6'x3                  // - s[11] * x3[13]
                   - 7's * 5'x3                  // - s[10] * x3[14]
                   - 8's * 5'x3                  // - s[9] * x3[15]
                   + 0xFFFF * 8'q2               // + p[15] * q2[9]
                   + 0xFFFF * 7'q2               // + p[14] * q2[10]
                   + 0xFFFF * 7'q2               // + p[13] * q2[11]
                   + 0xFFFF * 6'q2               // + p[12] * q2[12]
                   + 0xFFFF * 6'q2               // + p[11] * q2[13]
                   + 0xFFFF * 5'q2               // + p[10] * q2[14]
                   + 0xFFFF * 5'q2;              // + p[9] * q2[15]

arith_eq[ 4][25] =   5's * 7'x1                  //   s[15] * x1[10]
                   + 5's * 7'x1                  // + s[14] * x1[11]
                   + 6's * 6'x1                  // + s[13] * x1[12]
                   + 6's * 6'x1                  // + s[12] * x1[13]
                   + 7's * 5'x1                  // + s[11] * x1[14]
                   + 7's * 5'x1                  // + s[10] * x1[15]
                   - 5's * 7'x3                  // - s[15] * x3[10]
                   - 5's * 7'x3                  // - s[14] * x3[11]
                   - 6's * 6'x3                  // - s[13] * x3[12]
                   - 6's * 6'x3                  // - s[12] * x3[13]
                   - 7's * 5'x3                  // - s[11] * x3[14]
                   - 7's * 5'x3                  // - s[10] * x3[15]
                   + 0xFFFF * 7'q2               // + p[15] * q2[10]
                   + 0xFFFF * 7'q2               // + p[14] * q2[11]
                   + 0xFFFF * 6'q2               // + p[13] * q2[12]
                   + 0xFFFF * 6'q2               // + p[12] * q2[13]
                   + 0xFFFF * 5'q2               // + p[11] * q2[14]
                   + 0xFFFF * 5'q2;              // + p[10] * q2[15]

// clock #13

arith_eq[ 4][26] =   6's * 8'x1                  //   s[15] * x1[11]
                   + 6's * 7'x1                  // + s[14] * x1[12]
                   + 7's * 7'x1                  // + s[13] * x1[13]
                   + 7's * 6'x1                  // + s[12] * x1[14]
                   + 8's * 6'x1                  // + s[11] * x1[15]
                   - 6's * 8'x3                  // - s[15] * x3[11]
                   - 6's * 7'x3                  // - s[14] * x3[12]
                   - 7's * 7'x3                  // - s[13] * x3[13]
                   - 7's * 6'x3                  // - s[12] * x3[14]
                   - 8's * 6'x3                  // - s[11] * x3[15]
                   + 0xFFFF * 8'q2               // + p[15] * q2[11]
                   + 0xFFFF * 7'q2               // + p[14] * q2[12]
                   + 0xFFFF * 7'q2               // + p[13] * q2[13]
                   + 0xFFFF * 6'q2               // + p[12] * q2[14]
                   + 0xFFFF * 6'q2;              // + p[11] * q2[15]

arith_eq[ 4][27] =   6's * 7'x1                  //   s[15] * x1[12]
                   + 6's * 7'x1                  // + s[14] * x1[13]
                   + 7's * 6'x1                  // + s[13] * x1[14]
                   + 7's * 6'x1                  // + s[12] * x1[15]
                   - 6's * 7'x3                  // - s[15] * x3[12]
                   - 6's * 7'x3                  // - s[14] * x3[13]
                   - 7's * 6'x3                  // - s[13] * x3[14]
                   - 7's * 6'x3                  // - s[12] * x3[15]
                   + 0xFFFF * 7'q2               // + p[15] * q2[12]
                   + 0xFFFF * 7'q2               // + p[14] * q2[13]
                   + 0xFFFF * 6'q2               // + p[13] * q2[14]
                   + 0xFFFF * 6'q2;              // + p[12] * q2[15]

// clock #14

arith_eq[ 4][28] =   7's * 8'x1                  //   s[15] * x1[13]
                   + 7's * 7'x1                  // + s[14] * x1[14]
                   + 8's * 7'x1                  // + s[13] * x1[15]
                   - 7's * 8'x3                  // - s[15] * x3[13]
                   - 7's * 7'x3                  // - s[14] * x3[14]
                   - 8's * 7'x3                  // - s[13] * x3[15]
                   + 0xFFFF * 8'q2               // + p[15] * q2[13]
                   + 0xFFFF * 7'q2               // + p[14] * q2[14]
                   + 0xFFFF * 7'q2;              // + p[13] * q2[15]

arith_eq[ 4][29] =   7's * 7'x1                  //   s[15] * x1[14]
                   + 7's * 7'x1                  // + s[14] * x1[15]
                   - 7's * 7'x3                  // - s[15] * x3[14]
                   - 7's * 7'x3                  // - s[14] * x3[15]
                   + 0xFFFF * 7'q2               // + p[15] * q2[14]
                   + 0xFFFF * 7'q2;              // + p[14] * q2[15]

// clock #15

arith_eq[ 4][30] =   8's * 8'x1                  //   s[15] * x1[15]
                   - 8's * 8'x3                  // - s[15] * x3[15]
                   + 0xFFFF * 8'q2;              // + p[15] * q2[15]

arith_eq[ 4][31] = 0;

