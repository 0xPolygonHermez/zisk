// code generated
//
// equation: x1*y1+x2-y3-q1*y2*p2_256-q0*y2
//
// p2_256: 0x10000000000000000000000000000000000000000000000000000000000000000
//
// chunks:16
// chunk_bits:16
// terms_by_clock: 2

// clock #0

arith_eq[ 0][ 0] =   x1 * y1                     //   x1[0] * y1[0]
                   + x2                          // + x2[0]
                   - y3                          // - y3[0]
                   - q0 * y2;                    // - q0[0] * y2[0]

arith_eq[ 0][ 1] =   x1 * y1                     //   x1[1] * y1[0]
                   + x1 * y1                     // + x1[0] * y1[1]
                   + x2                          // + x2[1]
                   - y3                          // - y3[1]
                   - q0 * y2                     // - q0[1] * y2[0]
                   - q0 * y2;                    // - q0[0] * y2[1]

// clock #1

arith_eq[ 0][ 2] =   x1 * 'y1                    //   x1[2] * y1[0]
                   + 'x1 * 'y1                   // + x1[1] * y1[1]
                   + 'x1 * y1                    // + x1[0] * y1[2]
                   + x2                          // + x2[2]
                   - y3                          // - y3[2]
                   - q0 * 'y2                    // - q0[2] * y2[0]
                   - 'q0 * 'y2                   // - q0[1] * y2[1]
                   - 'q0 * y2;                   // - q0[0] * y2[2]

arith_eq[ 0][ 3] =   x1 * 'y1                    //   x1[3] * y1[0]
                   + x1 * 'y1                    // + x1[2] * y1[1]
                   + 'x1 * y1                    // + x1[1] * y1[2]
                   + 'x1 * y1                    // + x1[0] * y1[3]
                   + x2                          // + x2[3]
                   - y3                          // - y3[3]
                   - q0 * 'y2                    // - q0[3] * y2[0]
                   - q0 * 'y2                    // - q0[2] * y2[1]
                   - 'q0 * y2                    // - q0[1] * y2[2]
                   - 'q0 * y2;                   // - q0[0] * y2[3]

// clock #2

arith_eq[ 0][ 4] =   x1 * 2'y1                   //   x1[4] * y1[0]
                   + 'x1 * 2'y1                  // + x1[3] * y1[1]
                   + 'x1 * 'y1                   // + x1[2] * y1[2]
                   + 2'x1 * 'y1                  // + x1[1] * y1[3]
                   + 2'x1 * y1                   // + x1[0] * y1[4]
                   + x2                          // + x2[4]
                   - y3                          // - y3[4]
                   - q0 * 2'y2                   // - q0[4] * y2[0]
                   - 'q0 * 2'y2                  // - q0[3] * y2[1]
                   - 'q0 * 'y2                   // - q0[2] * y2[2]
                   - 2'q0 * 'y2                  // - q0[1] * y2[3]
                   - 2'q0 * y2;                  // - q0[0] * y2[4]

arith_eq[ 0][ 5] =   x1 * 2'y1                   //   x1[5] * y1[0]
                   + x1 * 2'y1                   // + x1[4] * y1[1]
                   + 'x1 * 'y1                   // + x1[3] * y1[2]
                   + 'x1 * 'y1                   // + x1[2] * y1[3]
                   + 2'x1 * y1                   // + x1[1] * y1[4]
                   + 2'x1 * y1                   // + x1[0] * y1[5]
                   + x2                          // + x2[5]
                   - y3                          // - y3[5]
                   - q0 * 2'y2                   // - q0[5] * y2[0]
                   - q0 * 2'y2                   // - q0[4] * y2[1]
                   - 'q0 * 'y2                   // - q0[3] * y2[2]
                   - 'q0 * 'y2                   // - q0[2] * y2[3]
                   - 2'q0 * y2                   // - q0[1] * y2[4]
                   - 2'q0 * y2;                  // - q0[0] * y2[5]

// clock #3

arith_eq[ 0][ 6] =   x1 * 3'y1                   //   x1[6] * y1[0]
                   + 'x1 * 3'y1                  // + x1[5] * y1[1]
                   + 'x1 * 2'y1                  // + x1[4] * y1[2]
                   + 2'x1 * 2'y1                 // + x1[3] * y1[3]
                   + 2'x1 * 'y1                  // + x1[2] * y1[4]
                   + 3'x1 * 'y1                  // + x1[1] * y1[5]
                   + 3'x1 * y1                   // + x1[0] * y1[6]
                   + x2                          // + x2[6]
                   - y3                          // - y3[6]
                   - q0 * 3'y2                   // - q0[6] * y2[0]
                   - 'q0 * 3'y2                  // - q0[5] * y2[1]
                   - 'q0 * 2'y2                  // - q0[4] * y2[2]
                   - 2'q0 * 2'y2                 // - q0[3] * y2[3]
                   - 2'q0 * 'y2                  // - q0[2] * y2[4]
                   - 3'q0 * 'y2                  // - q0[1] * y2[5]
                   - 3'q0 * y2;                  // - q0[0] * y2[6]

arith_eq[ 0][ 7] =   x1 * 3'y1                   //   x1[7] * y1[0]
                   + x1 * 3'y1                   // + x1[6] * y1[1]
                   + 'x1 * 2'y1                  // + x1[5] * y1[2]
                   + 'x1 * 2'y1                  // + x1[4] * y1[3]
                   + 2'x1 * 'y1                  // + x1[3] * y1[4]
                   + 2'x1 * 'y1                  // + x1[2] * y1[5]
                   + 3'x1 * y1                   // + x1[1] * y1[6]
                   + 3'x1 * y1                   // + x1[0] * y1[7]
                   + x2                          // + x2[7]
                   - y3                          // - y3[7]
                   - q0 * 3'y2                   // - q0[7] * y2[0]
                   - q0 * 3'y2                   // - q0[6] * y2[1]
                   - 'q0 * 2'y2                  // - q0[5] * y2[2]
                   - 'q0 * 2'y2                  // - q0[4] * y2[3]
                   - 2'q0 * 'y2                  // - q0[3] * y2[4]
                   - 2'q0 * 'y2                  // - q0[2] * y2[5]
                   - 3'q0 * y2                   // - q0[1] * y2[6]
                   - 3'q0 * y2;                  // - q0[0] * y2[7]

// clock #4

arith_eq[ 0][ 8] =   x1 * 4'y1                   //   x1[8] * y1[0]
                   + 'x1 * 4'y1                  // + x1[7] * y1[1]
                   + 'x1 * 3'y1                  // + x1[6] * y1[2]
                   + 2'x1 * 3'y1                 // + x1[5] * y1[3]
                   + 2'x1 * 2'y1                 // + x1[4] * y1[4]
                   + 3'x1 * 2'y1                 // + x1[3] * y1[5]
                   + 3'x1 * 'y1                  // + x1[2] * y1[6]
                   + 4'x1 * 'y1                  // + x1[1] * y1[7]
                   + 4'x1 * y1                   // + x1[0] * y1[8]
                   + x2                          // + x2[8]
                   - y3                          // - y3[8]
                   - q0 * 4'y2                   // - q0[8] * y2[0]
                   - 'q0 * 4'y2                  // - q0[7] * y2[1]
                   - 'q0 * 3'y2                  // - q0[6] * y2[2]
                   - 2'q0 * 3'y2                 // - q0[5] * y2[3]
                   - 2'q0 * 2'y2                 // - q0[4] * y2[4]
                   - 3'q0 * 2'y2                 // - q0[3] * y2[5]
                   - 3'q0 * 'y2                  // - q0[2] * y2[6]
                   - 4'q0 * 'y2                  // - q0[1] * y2[7]
                   - 4'q0 * y2;                  // - q0[0] * y2[8]

arith_eq[ 0][ 9] =   x1 * 4'y1                   //   x1[9] * y1[0]
                   + x1 * 4'y1                   // + x1[8] * y1[1]
                   + 'x1 * 3'y1                  // + x1[7] * y1[2]
                   + 'x1 * 3'y1                  // + x1[6] * y1[3]
                   + 2'x1 * 2'y1                 // + x1[5] * y1[4]
                   + 2'x1 * 2'y1                 // + x1[4] * y1[5]
                   + 3'x1 * 'y1                  // + x1[3] * y1[6]
                   + 3'x1 * 'y1                  // + x1[2] * y1[7]
                   + 4'x1 * y1                   // + x1[1] * y1[8]
                   + 4'x1 * y1                   // + x1[0] * y1[9]
                   + x2                          // + x2[9]
                   - y3                          // - y3[9]
                   - q0 * 4'y2                   // - q0[9] * y2[0]
                   - q0 * 4'y2                   // - q0[8] * y2[1]
                   - 'q0 * 3'y2                  // - q0[7] * y2[2]
                   - 'q0 * 3'y2                  // - q0[6] * y2[3]
                   - 2'q0 * 2'y2                 // - q0[5] * y2[4]
                   - 2'q0 * 2'y2                 // - q0[4] * y2[5]
                   - 3'q0 * 'y2                  // - q0[3] * y2[6]
                   - 3'q0 * 'y2                  // - q0[2] * y2[7]
                   - 4'q0 * y2                   // - q0[1] * y2[8]
                   - 4'q0 * y2;                  // - q0[0] * y2[9]

// clock #5

arith_eq[ 0][10] =   x1 * 5'y1                   //   x1[10] * y1[0]
                   + 'x1 * 5'y1                  // + x1[9] * y1[1]
                   + 'x1 * 4'y1                  // + x1[8] * y1[2]
                   + 2'x1 * 4'y1                 // + x1[7] * y1[3]
                   + 2'x1 * 3'y1                 // + x1[6] * y1[4]
                   + 3'x1 * 3'y1                 // + x1[5] * y1[5]
                   + 3'x1 * 2'y1                 // + x1[4] * y1[6]
                   + 4'x1 * 2'y1                 // + x1[3] * y1[7]
                   + 4'x1 * 'y1                  // + x1[2] * y1[8]
                   + 5'x1 * 'y1                  // + x1[1] * y1[9]
                   + 5'x1 * y1                   // + x1[0] * y1[10]
                   + x2                          // + x2[10]
                   - y3                          // - y3[10]
                   - q0 * 5'y2                   // - q0[10] * y2[0]
                   - 'q0 * 5'y2                  // - q0[9] * y2[1]
                   - 'q0 * 4'y2                  // - q0[8] * y2[2]
                   - 2'q0 * 4'y2                 // - q0[7] * y2[3]
                   - 2'q0 * 3'y2                 // - q0[6] * y2[4]
                   - 3'q0 * 3'y2                 // - q0[5] * y2[5]
                   - 3'q0 * 2'y2                 // - q0[4] * y2[6]
                   - 4'q0 * 2'y2                 // - q0[3] * y2[7]
                   - 4'q0 * 'y2                  // - q0[2] * y2[8]
                   - 5'q0 * 'y2                  // - q0[1] * y2[9]
                   - 5'q0 * y2;                  // - q0[0] * y2[10]

arith_eq[ 0][11] =   x1 * 5'y1                   //   x1[11] * y1[0]
                   + x1 * 5'y1                   // + x1[10] * y1[1]
                   + 'x1 * 4'y1                  // + x1[9] * y1[2]
                   + 'x1 * 4'y1                  // + x1[8] * y1[3]
                   + 2'x1 * 3'y1                 // + x1[7] * y1[4]
                   + 2'x1 * 3'y1                 // + x1[6] * y1[5]
                   + 3'x1 * 2'y1                 // + x1[5] * y1[6]
                   + 3'x1 * 2'y1                 // + x1[4] * y1[7]
                   + 4'x1 * 'y1                  // + x1[3] * y1[8]
                   + 4'x1 * 'y1                  // + x1[2] * y1[9]
                   + 5'x1 * y1                   // + x1[1] * y1[10]
                   + 5'x1 * y1                   // + x1[0] * y1[11]
                   + x2                          // + x2[11]
                   - y3                          // - y3[11]
                   - q0 * 5'y2                   // - q0[11] * y2[0]
                   - q0 * 5'y2                   // - q0[10] * y2[1]
                   - 'q0 * 4'y2                  // - q0[9] * y2[2]
                   - 'q0 * 4'y2                  // - q0[8] * y2[3]
                   - 2'q0 * 3'y2                 // - q0[7] * y2[4]
                   - 2'q0 * 3'y2                 // - q0[6] * y2[5]
                   - 3'q0 * 2'y2                 // - q0[5] * y2[6]
                   - 3'q0 * 2'y2                 // - q0[4] * y2[7]
                   - 4'q0 * 'y2                  // - q0[3] * y2[8]
                   - 4'q0 * 'y2                  // - q0[2] * y2[9]
                   - 5'q0 * y2                   // - q0[1] * y2[10]
                   - 5'q0 * y2;                  // - q0[0] * y2[11]

// clock #6

arith_eq[ 0][12] =   x1 * 6'y1                   //   x1[12] * y1[0]
                   + 'x1 * 6'y1                  // + x1[11] * y1[1]
                   + 'x1 * 5'y1                  // + x1[10] * y1[2]
                   + 2'x1 * 5'y1                 // + x1[9] * y1[3]
                   + 2'x1 * 4'y1                 // + x1[8] * y1[4]
                   + 3'x1 * 4'y1                 // + x1[7] * y1[5]
                   + 3'x1 * 3'y1                 // + x1[6] * y1[6]
                   + 4'x1 * 3'y1                 // + x1[5] * y1[7]
                   + 4'x1 * 2'y1                 // + x1[4] * y1[8]
                   + 5'x1 * 2'y1                 // + x1[3] * y1[9]
                   + 5'x1 * 'y1                  // + x1[2] * y1[10]
                   + 6'x1 * 'y1                  // + x1[1] * y1[11]
                   + 6'x1 * y1                   // + x1[0] * y1[12]
                   + x2                          // + x2[12]
                   - y3                          // - y3[12]
                   - q0 * 6'y2                   // - q0[12] * y2[0]
                   - 'q0 * 6'y2                  // - q0[11] * y2[1]
                   - 'q0 * 5'y2                  // - q0[10] * y2[2]
                   - 2'q0 * 5'y2                 // - q0[9] * y2[3]
                   - 2'q0 * 4'y2                 // - q0[8] * y2[4]
                   - 3'q0 * 4'y2                 // - q0[7] * y2[5]
                   - 3'q0 * 3'y2                 // - q0[6] * y2[6]
                   - 4'q0 * 3'y2                 // - q0[5] * y2[7]
                   - 4'q0 * 2'y2                 // - q0[4] * y2[8]
                   - 5'q0 * 2'y2                 // - q0[3] * y2[9]
                   - 5'q0 * 'y2                  // - q0[2] * y2[10]
                   - 6'q0 * 'y2                  // - q0[1] * y2[11]
                   - 6'q0 * y2;                  // - q0[0] * y2[12]

arith_eq[ 0][13] =   x1 * 6'y1                   //   x1[13] * y1[0]
                   + x1 * 6'y1                   // + x1[12] * y1[1]
                   + 'x1 * 5'y1                  // + x1[11] * y1[2]
                   + 'x1 * 5'y1                  // + x1[10] * y1[3]
                   + 2'x1 * 4'y1                 // + x1[9] * y1[4]
                   + 2'x1 * 4'y1                 // + x1[8] * y1[5]
                   + 3'x1 * 3'y1                 // + x1[7] * y1[6]
                   + 3'x1 * 3'y1                 // + x1[6] * y1[7]
                   + 4'x1 * 2'y1                 // + x1[5] * y1[8]
                   + 4'x1 * 2'y1                 // + x1[4] * y1[9]
                   + 5'x1 * 'y1                  // + x1[3] * y1[10]
                   + 5'x1 * 'y1                  // + x1[2] * y1[11]
                   + 6'x1 * y1                   // + x1[1] * y1[12]
                   + 6'x1 * y1                   // + x1[0] * y1[13]
                   + x2                          // + x2[13]
                   - y3                          // - y3[13]
                   - q0 * 6'y2                   // - q0[13] * y2[0]
                   - q0 * 6'y2                   // - q0[12] * y2[1]
                   - 'q0 * 5'y2                  // - q0[11] * y2[2]
                   - 'q0 * 5'y2                  // - q0[10] * y2[3]
                   - 2'q0 * 4'y2                 // - q0[9] * y2[4]
                   - 2'q0 * 4'y2                 // - q0[8] * y2[5]
                   - 3'q0 * 3'y2                 // - q0[7] * y2[6]
                   - 3'q0 * 3'y2                 // - q0[6] * y2[7]
                   - 4'q0 * 2'y2                 // - q0[5] * y2[8]
                   - 4'q0 * 2'y2                 // - q0[4] * y2[9]
                   - 5'q0 * 'y2                  // - q0[3] * y2[10]
                   - 5'q0 * 'y2                  // - q0[2] * y2[11]
                   - 6'q0 * y2                   // - q0[1] * y2[12]
                   - 6'q0 * y2;                  // - q0[0] * y2[13]

// clock #7

arith_eq[ 0][14] =   x1 * 7'y1                   //   x1[14] * y1[0]
                   + 'x1 * 7'y1                  // + x1[13] * y1[1]
                   + 'x1 * 6'y1                  // + x1[12] * y1[2]
                   + 2'x1 * 6'y1                 // + x1[11] * y1[3]
                   + 2'x1 * 5'y1                 // + x1[10] * y1[4]
                   + 3'x1 * 5'y1                 // + x1[9] * y1[5]
                   + 3'x1 * 4'y1                 // + x1[8] * y1[6]
                   + 4'x1 * 4'y1                 // + x1[7] * y1[7]
                   + 4'x1 * 3'y1                 // + x1[6] * y1[8]
                   + 5'x1 * 3'y1                 // + x1[5] * y1[9]
                   + 5'x1 * 2'y1                 // + x1[4] * y1[10]
                   + 6'x1 * 2'y1                 // + x1[3] * y1[11]
                   + 6'x1 * 'y1                  // + x1[2] * y1[12]
                   + 7'x1 * 'y1                  // + x1[1] * y1[13]
                   + 7'x1 * y1                   // + x1[0] * y1[14]
                   + x2                          // + x2[14]
                   - y3                          // - y3[14]
                   - q0 * 7'y2                   // - q0[14] * y2[0]
                   - 'q0 * 7'y2                  // - q0[13] * y2[1]
                   - 'q0 * 6'y2                  // - q0[12] * y2[2]
                   - 2'q0 * 6'y2                 // - q0[11] * y2[3]
                   - 2'q0 * 5'y2                 // - q0[10] * y2[4]
                   - 3'q0 * 5'y2                 // - q0[9] * y2[5]
                   - 3'q0 * 4'y2                 // - q0[8] * y2[6]
                   - 4'q0 * 4'y2                 // - q0[7] * y2[7]
                   - 4'q0 * 3'y2                 // - q0[6] * y2[8]
                   - 5'q0 * 3'y2                 // - q0[5] * y2[9]
                   - 5'q0 * 2'y2                 // - q0[4] * y2[10]
                   - 6'q0 * 2'y2                 // - q0[3] * y2[11]
                   - 6'q0 * 'y2                  // - q0[2] * y2[12]
                   - 7'q0 * 'y2                  // - q0[1] * y2[13]
                   - 7'q0 * y2;                  // - q0[0] * y2[14]

arith_eq[ 0][15] =   x1 * 7'y1                   //   x1[15] * y1[0]
                   + x1 * 7'y1                   // + x1[14] * y1[1]
                   + 'x1 * 6'y1                  // + x1[13] * y1[2]
                   + 'x1 * 6'y1                  // + x1[12] * y1[3]
                   + 2'x1 * 5'y1                 // + x1[11] * y1[4]
                   + 2'x1 * 5'y1                 // + x1[10] * y1[5]
                   + 3'x1 * 4'y1                 // + x1[9] * y1[6]
                   + 3'x1 * 4'y1                 // + x1[8] * y1[7]
                   + 4'x1 * 3'y1                 // + x1[7] * y1[8]
                   + 4'x1 * 3'y1                 // + x1[6] * y1[9]
                   + 5'x1 * 2'y1                 // + x1[5] * y1[10]
                   + 5'x1 * 2'y1                 // + x1[4] * y1[11]
                   + 6'x1 * 'y1                  // + x1[3] * y1[12]
                   + 6'x1 * 'y1                  // + x1[2] * y1[13]
                   + 7'x1 * y1                   // + x1[1] * y1[14]
                   + 7'x1 * y1                   // + x1[0] * y1[15]
                   + x2                          // + x2[15]
                   - y3                          // - y3[15]
                   - q0 * 7'y2                   // - q0[15] * y2[0]
                   - q0 * 7'y2                   // - q0[14] * y2[1]
                   - 'q0 * 6'y2                  // - q0[13] * y2[2]
                   - 'q0 * 6'y2                  // - q0[12] * y2[3]
                   - 2'q0 * 5'y2                 // - q0[11] * y2[4]
                   - 2'q0 * 5'y2                 // - q0[10] * y2[5]
                   - 3'q0 * 4'y2                 // - q0[9] * y2[6]
                   - 3'q0 * 4'y2                 // - q0[8] * y2[7]
                   - 4'q0 * 3'y2                 // - q0[7] * y2[8]
                   - 4'q0 * 3'y2                 // - q0[6] * y2[9]
                   - 5'q0 * 2'y2                 // - q0[5] * y2[10]
                   - 5'q0 * 2'y2                 // - q0[4] * y2[11]
                   - 6'q0 * 'y2                  // - q0[3] * y2[12]
                   - 6'q0 * 'y2                  // - q0[2] * y2[13]
                   - 7'q0 * y2                   // - q0[1] * y2[14]
                   - 7'q0 * y2;                  // - q0[0] * y2[15]

// clock #8

arith_eq[ 0][16] =   'x1 * 8'y1                  //   x1[15] * y1[1]
                   + 'x1 * 7'y1                  // + x1[14] * y1[2]
                   + 2'x1 * 7'y1                 // + x1[13] * y1[3]
                   + 2'x1 * 6'y1                 // + x1[12] * y1[4]
                   + 3'x1 * 6'y1                 // + x1[11] * y1[5]
                   + 3'x1 * 5'y1                 // + x1[10] * y1[6]
                   + 4'x1 * 5'y1                 // + x1[9] * y1[7]
                   + 4'x1 * 4'y1                 // + x1[8] * y1[8]
                   + 5'x1 * 4'y1                 // + x1[7] * y1[9]
                   + 5'x1 * 3'y1                 // + x1[6] * y1[10]
                   + 6'x1 * 3'y1                 // + x1[5] * y1[11]
                   + 6'x1 * 2'y1                 // + x1[4] * y1[12]
                   + 7'x1 * 2'y1                 // + x1[3] * y1[13]
                   + 7'x1 * 'y1                  // + x1[2] * y1[14]
                   + 8'x1 * 'y1                  // + x1[1] * y1[15]
                   - 'q0 * 8'y2                  // - q0[15] * y2[1]
                   - 'q0 * 7'y2                  // - q0[14] * y2[2]
                   - 2'q0 * 7'y2                 // - q0[13] * y2[3]
                   - 2'q0 * 6'y2                 // - q0[12] * y2[4]
                   - 3'q0 * 6'y2                 // - q0[11] * y2[5]
                   - 3'q0 * 5'y2                 // - q0[10] * y2[6]
                   - 4'q0 * 5'y2                 // - q0[9] * y2[7]
                   - 4'q0 * 4'y2                 // - q0[8] * y2[8]
                   - 5'q0 * 4'y2                 // - q0[7] * y2[9]
                   - 5'q0 * 3'y2                 // - q0[6] * y2[10]
                   - 6'q0 * 3'y2                 // - q0[5] * y2[11]
                   - 6'q0 * 2'y2                 // - q0[4] * y2[12]
                   - 7'q0 * 2'y2                 // - q0[3] * y2[13]
                   - 7'q0 * 'y2                  // - q0[2] * y2[14]
                   - 8'q0 * 'y2;                 // - q0[1] * y2[15]

arith_eq[ 0][17] =   'x1 * 7'y1                  //   x1[15] * y1[2]
                   + 'x1 * 7'y1                  // + x1[14] * y1[3]
                   + 2'x1 * 6'y1                 // + x1[13] * y1[4]
                   + 2'x1 * 6'y1                 // + x1[12] * y1[5]
                   + 3'x1 * 5'y1                 // + x1[11] * y1[6]
                   + 3'x1 * 5'y1                 // + x1[10] * y1[7]
                   + 4'x1 * 4'y1                 // + x1[9] * y1[8]
                   + 4'x1 * 4'y1                 // + x1[8] * y1[9]
                   + 5'x1 * 3'y1                 // + x1[7] * y1[10]
                   + 5'x1 * 3'y1                 // + x1[6] * y1[11]
                   + 6'x1 * 2'y1                 // + x1[5] * y1[12]
                   + 6'x1 * 2'y1                 // + x1[4] * y1[13]
                   + 7'x1 * 'y1                  // + x1[3] * y1[14]
                   + 7'x1 * 'y1                  // + x1[2] * y1[15]
                   - 'q0 * 7'y2                  // - q0[15] * y2[2]
                   - 'q0 * 7'y2                  // - q0[14] * y2[3]
                   - 2'q0 * 6'y2                 // - q0[13] * y2[4]
                   - 2'q0 * 6'y2                 // - q0[12] * y2[5]
                   - 3'q0 * 5'y2                 // - q0[11] * y2[6]
                   - 3'q0 * 5'y2                 // - q0[10] * y2[7]
                   - 4'q0 * 4'y2                 // - q0[9] * y2[8]
                   - 4'q0 * 4'y2                 // - q0[8] * y2[9]
                   - 5'q0 * 3'y2                 // - q0[7] * y2[10]
                   - 5'q0 * 3'y2                 // - q0[6] * y2[11]
                   - 6'q0 * 2'y2                 // - q0[5] * y2[12]
                   - 6'q0 * 2'y2                 // - q0[4] * y2[13]
                   - 7'q0 * 'y2                  // - q0[3] * y2[14]
                   - 7'q0 * 'y2;                 // - q0[2] * y2[15]

// clock #9

arith_eq[ 0][18] =   2'x1 * 8'y1                 //   x1[15] * y1[3]
                   + 2'x1 * 7'y1                 // + x1[14] * y1[4]
                   + 3'x1 * 7'y1                 // + x1[13] * y1[5]
                   + 3'x1 * 6'y1                 // + x1[12] * y1[6]
                   + 4'x1 * 6'y1                 // + x1[11] * y1[7]
                   + 4'x1 * 5'y1                 // + x1[10] * y1[8]
                   + 5'x1 * 5'y1                 // + x1[9] * y1[9]
                   + 5'x1 * 4'y1                 // + x1[8] * y1[10]
                   + 6'x1 * 4'y1                 // + x1[7] * y1[11]
                   + 6'x1 * 3'y1                 // + x1[6] * y1[12]
                   + 7'x1 * 3'y1                 // + x1[5] * y1[13]
                   + 7'x1 * 2'y1                 // + x1[4] * y1[14]
                   + 8'x1 * 2'y1                 // + x1[3] * y1[15]
                   - 2'q0 * 8'y2                 // - q0[15] * y2[3]
                   - 2'q0 * 7'y2                 // - q0[14] * y2[4]
                   - 3'q0 * 7'y2                 // - q0[13] * y2[5]
                   - 3'q0 * 6'y2                 // - q0[12] * y2[6]
                   - 4'q0 * 6'y2                 // - q0[11] * y2[7]
                   - 4'q0 * 5'y2                 // - q0[10] * y2[8]
                   - 5'q0 * 5'y2                 // - q0[9] * y2[9]
                   - 5'q0 * 4'y2                 // - q0[8] * y2[10]
                   - 6'q0 * 4'y2                 // - q0[7] * y2[11]
                   - 6'q0 * 3'y2                 // - q0[6] * y2[12]
                   - 7'q0 * 3'y2                 // - q0[5] * y2[13]
                   - 7'q0 * 2'y2                 // - q0[4] * y2[14]
                   - 8'q0 * 2'y2;                // - q0[3] * y2[15]

arith_eq[ 0][19] =   2'x1 * 7'y1                 //   x1[15] * y1[4]
                   + 2'x1 * 7'y1                 // + x1[14] * y1[5]
                   + 3'x1 * 6'y1                 // + x1[13] * y1[6]
                   + 3'x1 * 6'y1                 // + x1[12] * y1[7]
                   + 4'x1 * 5'y1                 // + x1[11] * y1[8]
                   + 4'x1 * 5'y1                 // + x1[10] * y1[9]
                   + 5'x1 * 4'y1                 // + x1[9] * y1[10]
                   + 5'x1 * 4'y1                 // + x1[8] * y1[11]
                   + 6'x1 * 3'y1                 // + x1[7] * y1[12]
                   + 6'x1 * 3'y1                 // + x1[6] * y1[13]
                   + 7'x1 * 2'y1                 // + x1[5] * y1[14]
                   + 7'x1 * 2'y1                 // + x1[4] * y1[15]
                   - 2'q0 * 7'y2                 // - q0[15] * y2[4]
                   - 2'q0 * 7'y2                 // - q0[14] * y2[5]
                   - 3'q0 * 6'y2                 // - q0[13] * y2[6]
                   - 3'q0 * 6'y2                 // - q0[12] * y2[7]
                   - 4'q0 * 5'y2                 // - q0[11] * y2[8]
                   - 4'q0 * 5'y2                 // - q0[10] * y2[9]
                   - 5'q0 * 4'y2                 // - q0[9] * y2[10]
                   - 5'q0 * 4'y2                 // - q0[8] * y2[11]
                   - 6'q0 * 3'y2                 // - q0[7] * y2[12]
                   - 6'q0 * 3'y2                 // - q0[6] * y2[13]
                   - 7'q0 * 2'y2                 // - q0[5] * y2[14]
                   - 7'q0 * 2'y2;                // - q0[4] * y2[15]

// clock #10

arith_eq[ 0][20] =   3'x1 * 8'y1                 //   x1[15] * y1[5]
                   + 3'x1 * 7'y1                 // + x1[14] * y1[6]
                   + 4'x1 * 7'y1                 // + x1[13] * y1[7]
                   + 4'x1 * 6'y1                 // + x1[12] * y1[8]
                   + 5'x1 * 6'y1                 // + x1[11] * y1[9]
                   + 5'x1 * 5'y1                 // + x1[10] * y1[10]
                   + 6'x1 * 5'y1                 // + x1[9] * y1[11]
                   + 6'x1 * 4'y1                 // + x1[8] * y1[12]
                   + 7'x1 * 4'y1                 // + x1[7] * y1[13]
                   + 7'x1 * 3'y1                 // + x1[6] * y1[14]
                   + 8'x1 * 3'y1                 // + x1[5] * y1[15]
                   - 3'q0 * 8'y2                 // - q0[15] * y2[5]
                   - 3'q0 * 7'y2                 // - q0[14] * y2[6]
                   - 4'q0 * 7'y2                 // - q0[13] * y2[7]
                   - 4'q0 * 6'y2                 // - q0[12] * y2[8]
                   - 5'q0 * 6'y2                 // - q0[11] * y2[9]
                   - 5'q0 * 5'y2                 // - q0[10] * y2[10]
                   - 6'q0 * 5'y2                 // - q0[9] * y2[11]
                   - 6'q0 * 4'y2                 // - q0[8] * y2[12]
                   - 7'q0 * 4'y2                 // - q0[7] * y2[13]
                   - 7'q0 * 3'y2                 // - q0[6] * y2[14]
                   - 8'q0 * 3'y2;                // - q0[5] * y2[15]

arith_eq[ 0][21] =   3'x1 * 7'y1                 //   x1[15] * y1[6]
                   + 3'x1 * 7'y1                 // + x1[14] * y1[7]
                   + 4'x1 * 6'y1                 // + x1[13] * y1[8]
                   + 4'x1 * 6'y1                 // + x1[12] * y1[9]
                   + 5'x1 * 5'y1                 // + x1[11] * y1[10]
                   + 5'x1 * 5'y1                 // + x1[10] * y1[11]
                   + 6'x1 * 4'y1                 // + x1[9] * y1[12]
                   + 6'x1 * 4'y1                 // + x1[8] * y1[13]
                   + 7'x1 * 3'y1                 // + x1[7] * y1[14]
                   + 7'x1 * 3'y1                 // + x1[6] * y1[15]
                   - 3'q0 * 7'y2                 // - q0[15] * y2[6]
                   - 3'q0 * 7'y2                 // - q0[14] * y2[7]
                   - 4'q0 * 6'y2                 // - q0[13] * y2[8]
                   - 4'q0 * 6'y2                 // - q0[12] * y2[9]
                   - 5'q0 * 5'y2                 // - q0[11] * y2[10]
                   - 5'q0 * 5'y2                 // - q0[10] * y2[11]
                   - 6'q0 * 4'y2                 // - q0[9] * y2[12]
                   - 6'q0 * 4'y2                 // - q0[8] * y2[13]
                   - 7'q0 * 3'y2                 // - q0[7] * y2[14]
                   - 7'q0 * 3'y2;                // - q0[6] * y2[15]

// clock #11

arith_eq[ 0][22] =   4'x1 * 8'y1                 //   x1[15] * y1[7]
                   + 4'x1 * 7'y1                 // + x1[14] * y1[8]
                   + 5'x1 * 7'y1                 // + x1[13] * y1[9]
                   + 5'x1 * 6'y1                 // + x1[12] * y1[10]
                   + 6'x1 * 6'y1                 // + x1[11] * y1[11]
                   + 6'x1 * 5'y1                 // + x1[10] * y1[12]
                   + 7'x1 * 5'y1                 // + x1[9] * y1[13]
                   + 7'x1 * 4'y1                 // + x1[8] * y1[14]
                   + 8'x1 * 4'y1                 // + x1[7] * y1[15]
                   - 4'q0 * 8'y2                 // - q0[15] * y2[7]
                   - 4'q0 * 7'y2                 // - q0[14] * y2[8]
                   - 5'q0 * 7'y2                 // - q0[13] * y2[9]
                   - 5'q0 * 6'y2                 // - q0[12] * y2[10]
                   - 6'q0 * 6'y2                 // - q0[11] * y2[11]
                   - 6'q0 * 5'y2                 // - q0[10] * y2[12]
                   - 7'q0 * 5'y2                 // - q0[9] * y2[13]
                   - 7'q0 * 4'y2                 // - q0[8] * y2[14]
                   - 8'q0 * 4'y2;                // - q0[7] * y2[15]

arith_eq[ 0][23] =   4'x1 * 7'y1                 //   x1[15] * y1[8]
                   + 4'x1 * 7'y1                 // + x1[14] * y1[9]
                   + 5'x1 * 6'y1                 // + x1[13] * y1[10]
                   + 5'x1 * 6'y1                 // + x1[12] * y1[11]
                   + 6'x1 * 5'y1                 // + x1[11] * y1[12]
                   + 6'x1 * 5'y1                 // + x1[10] * y1[13]
                   + 7'x1 * 4'y1                 // + x1[9] * y1[14]
                   + 7'x1 * 4'y1                 // + x1[8] * y1[15]
                   - 4'q0 * 7'y2                 // - q0[15] * y2[8]
                   - 4'q0 * 7'y2                 // - q0[14] * y2[9]
                   - 5'q0 * 6'y2                 // - q0[13] * y2[10]
                   - 5'q0 * 6'y2                 // - q0[12] * y2[11]
                   - 6'q0 * 5'y2                 // - q0[11] * y2[12]
                   - 6'q0 * 5'y2                 // - q0[10] * y2[13]
                   - 7'q0 * 4'y2                 // - q0[9] * y2[14]
                   - 7'q0 * 4'y2;                // - q0[8] * y2[15]

// clock #12

arith_eq[ 0][24] =   5'x1 * 8'y1                 //   x1[15] * y1[9]
                   + 5'x1 * 7'y1                 // + x1[14] * y1[10]
                   + 6'x1 * 7'y1                 // + x1[13] * y1[11]
                   + 6'x1 * 6'y1                 // + x1[12] * y1[12]
                   + 7'x1 * 6'y1                 // + x1[11] * y1[13]
                   + 7'x1 * 5'y1                 // + x1[10] * y1[14]
                   + 8'x1 * 5'y1                 // + x1[9] * y1[15]
                   - 5'q0 * 8'y2                 // - q0[15] * y2[9]
                   - 5'q0 * 7'y2                 // - q0[14] * y2[10]
                   - 6'q0 * 7'y2                 // - q0[13] * y2[11]
                   - 6'q0 * 6'y2                 // - q0[12] * y2[12]
                   - 7'q0 * 6'y2                 // - q0[11] * y2[13]
                   - 7'q0 * 5'y2                 // - q0[10] * y2[14]
                   - 8'q0 * 5'y2;                // - q0[9] * y2[15]

arith_eq[ 0][25] =   5'x1 * 7'y1                 //   x1[15] * y1[10]
                   + 5'x1 * 7'y1                 // + x1[14] * y1[11]
                   + 6'x1 * 6'y1                 // + x1[13] * y1[12]
                   + 6'x1 * 6'y1                 // + x1[12] * y1[13]
                   + 7'x1 * 5'y1                 // + x1[11] * y1[14]
                   + 7'x1 * 5'y1                 // + x1[10] * y1[15]
                   - 5'q0 * 7'y2                 // - q0[15] * y2[10]
                   - 5'q0 * 7'y2                 // - q0[14] * y2[11]
                   - 6'q0 * 6'y2                 // - q0[13] * y2[12]
                   - 6'q0 * 6'y2                 // - q0[12] * y2[13]
                   - 7'q0 * 5'y2                 // - q0[11] * y2[14]
                   - 7'q0 * 5'y2;                // - q0[10] * y2[15]

// clock #13

arith_eq[ 0][26] =   6'x1 * 8'y1                 //   x1[15] * y1[11]
                   + 6'x1 * 7'y1                 // + x1[14] * y1[12]
                   + 7'x1 * 7'y1                 // + x1[13] * y1[13]
                   + 7'x1 * 6'y1                 // + x1[12] * y1[14]
                   + 8'x1 * 6'y1                 // + x1[11] * y1[15]
                   - 6'q0 * 8'y2                 // - q0[15] * y2[11]
                   - 6'q0 * 7'y2                 // - q0[14] * y2[12]
                   - 7'q0 * 7'y2                 // - q0[13] * y2[13]
                   - 7'q0 * 6'y2                 // - q0[12] * y2[14]
                   - 8'q0 * 6'y2;                // - q0[11] * y2[15]

arith_eq[ 0][27] =   6'x1 * 7'y1                 //   x1[15] * y1[12]
                   + 6'x1 * 7'y1                 // + x1[14] * y1[13]
                   + 7'x1 * 6'y1                 // + x1[13] * y1[14]
                   + 7'x1 * 6'y1                 // + x1[12] * y1[15]
                   - 6'q0 * 7'y2                 // - q0[15] * y2[12]
                   - 6'q0 * 7'y2                 // - q0[14] * y2[13]
                   - 7'q0 * 6'y2                 // - q0[13] * y2[14]
                   - 7'q0 * 6'y2;                // - q0[12] * y2[15]

// clock #14

arith_eq[ 0][28] =   7'x1 * 8'y1                 //   x1[15] * y1[13]
                   + 7'x1 * 7'y1                 // + x1[14] * y1[14]
                   + 8'x1 * 7'y1                 // + x1[13] * y1[15]
                   - 7'q0 * 8'y2                 // - q0[15] * y2[13]
                   - 7'q0 * 7'y2                 // - q0[14] * y2[14]
                   - 8'q0 * 7'y2;                // - q0[13] * y2[15]

arith_eq[ 0][29] =   7'x1 * 7'y1                 //   x1[15] * y1[14]
                   + 7'x1 * 7'y1                 // + x1[14] * y1[15]
                   - 7'q0 * 7'y2                 // - q0[15] * y2[14]
                   - 7'q0 * 7'y2;                // - q0[14] * y2[15]

// clock #15

arith_eq[ 0][30] =   8'x1 * 8'y1                 //   x1[15] * y1[15]
                   - 8'q0 * 8'y2;                // - q0[15] * y2[15]

