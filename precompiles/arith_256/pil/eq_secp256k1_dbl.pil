// code generated
//
// equation: 2*s*y1-3*x1*x1+p*q0-p*offset
//
// p: 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F
// offset: 0x40000000000000000000000000000000000000000000000000000000000000000
// 2: 2
// 3: 3
// (p*offset): 0x3FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFBFFFFF0BC0000000000000000000000000000000000000000000000000000000000000000
//
// chunks:16
// chunk_bits:16
// terms_by_clock: 2


const expr eq_secp256k1_dbl_chunks[32];

// clock #0

eq_secp256k1_dbl_chunks[ 0] =   2 * s * y1                  //   2[0] * s[0] * y1[0]
                              - 3 * x1 * x1                 // - 3[0] * x1[0] * x1[0]
                              + 0xFC2F * q0;                // + p[0] * q0[0]

eq_secp256k1_dbl_chunks[ 1] =   2 * s * y1                  //   2[0] * s[1] * y1[0]
                              + 2 * s * y1                  // + 2[0] * s[0] * y1[1]
                              - 3 * x1 * x1                 // - 3[0] * x1[1] * x1[0]
                              - 3 * x1 * x1                 // - 3[0] * x1[0] * x1[1]
                              + 0xFFFF * q0                 // + p[1] * q0[0]
                              + 0xFC2F * q0;                // + p[0] * q0[1]

// clock #1

eq_secp256k1_dbl_chunks[ 2] =   2 * s * 'y1                 //   2[0] * s[2] * y1[0]
                              + 2 * 's * 'y1                // + 2[0] * s[1] * y1[1]
                              + 2 * 's * y1                 // + 2[0] * s[0] * y1[2]
                              - 3 * x1 * 'x1                // - 3[0] * x1[2] * x1[0]
                              - 3 * 'x1 * 'x1               // - 3[0] * x1[1] * x1[1]
                              - 3 * 'x1 * x1                // - 3[0] * x1[0] * x1[2]
                              + 0xFFFE * 'q0                // + p[2] * q0[0]
                              + 0xFFFF * 'q0                // + p[1] * q0[1]
                              + 0xFC2F * q0;                // + p[0] * q0[2]

eq_secp256k1_dbl_chunks[ 3] =   2 * s * 'y1                 //   2[0] * s[3] * y1[0]
                              + 2 * s * 'y1                 // + 2[0] * s[2] * y1[1]
                              + 2 * 's * y1                 // + 2[0] * s[1] * y1[2]
                              + 2 * 's * y1                 // + 2[0] * s[0] * y1[3]
                              - 3 * x1 * 'x1                // - 3[0] * x1[3] * x1[0]
                              - 3 * x1 * 'x1                // - 3[0] * x1[2] * x1[1]
                              - 3 * 'x1 * x1                // - 3[0] * x1[1] * x1[2]
                              - 3 * 'x1 * x1                // - 3[0] * x1[0] * x1[3]
                              + 0xFFFF * 'q0                // + p[3] * q0[0]
                              + 0xFFFE * 'q0                // + p[2] * q0[1]
                              + 0xFFFF * q0                 // + p[1] * q0[2]
                              + 0xFC2F * q0;                // + p[0] * q0[3]

// clock #2

eq_secp256k1_dbl_chunks[ 4] =   2 * s * 2'y1                //   2[0] * s[4] * y1[0]
                              + 2 * 's * 2'y1               // + 2[0] * s[3] * y1[1]
                              + 2 * 's * 'y1                // + 2[0] * s[2] * y1[2]
                              + 2 * 2's * 'y1               // + 2[0] * s[1] * y1[3]
                              + 2 * 2's * y1                // + 2[0] * s[0] * y1[4]
                              - 3 * x1 * 2'x1               // - 3[0] * x1[4] * x1[0]
                              - 3 * 'x1 * 2'x1              // - 3[0] * x1[3] * x1[1]
                              - 3 * 'x1 * 'x1               // - 3[0] * x1[2] * x1[2]
                              - 3 * 2'x1 * 'x1              // - 3[0] * x1[1] * x1[3]
                              - 3 * 2'x1 * x1               // - 3[0] * x1[0] * x1[4]
                              + 0xFFFF * 2'q0               // + p[4] * q0[0]
                              + 0xFFFF * 2'q0               // + p[3] * q0[1]
                              + 0xFFFE * 'q0                // + p[2] * q0[2]
                              + 0xFFFF * 'q0                // + p[1] * q0[3]
                              + 0xFC2F * q0;                // + p[0] * q0[4]

eq_secp256k1_dbl_chunks[ 5] =   2 * s * 2'y1                //   2[0] * s[5] * y1[0]
                              + 2 * s * 2'y1                // + 2[0] * s[4] * y1[1]
                              + 2 * 's * 'y1                // + 2[0] * s[3] * y1[2]
                              + 2 * 's * 'y1                // + 2[0] * s[2] * y1[3]
                              + 2 * 2's * y1                // + 2[0] * s[1] * y1[4]
                              + 2 * 2's * y1                // + 2[0] * s[0] * y1[5]
                              - 3 * x1 * 2'x1               // - 3[0] * x1[5] * x1[0]
                              - 3 * x1 * 2'x1               // - 3[0] * x1[4] * x1[1]
                              - 3 * 'x1 * 'x1               // - 3[0] * x1[3] * x1[2]
                              - 3 * 'x1 * 'x1               // - 3[0] * x1[2] * x1[3]
                              - 3 * 2'x1 * x1               // - 3[0] * x1[1] * x1[4]
                              - 3 * 2'x1 * x1               // - 3[0] * x1[0] * x1[5]
                              + 0xFFFF * 2'q0               // + p[5] * q0[0]
                              + 0xFFFF * 2'q0               // + p[4] * q0[1]
                              + 0xFFFF * 'q0                // + p[3] * q0[2]
                              + 0xFFFE * 'q0                // + p[2] * q0[3]
                              + 0xFFFF * q0                 // + p[1] * q0[4]
                              + 0xFC2F * q0;                // + p[0] * q0[5]

// clock #3

eq_secp256k1_dbl_chunks[ 6] =   2 * s * 3'y1                //   2[0] * s[6] * y1[0]
                              + 2 * 's * 3'y1               // + 2[0] * s[5] * y1[1]
                              + 2 * 's * 2'y1               // + 2[0] * s[4] * y1[2]
                              + 2 * 2's * 2'y1              // + 2[0] * s[3] * y1[3]
                              + 2 * 2's * 'y1               // + 2[0] * s[2] * y1[4]
                              + 2 * 3's * 'y1               // + 2[0] * s[1] * y1[5]
                              + 2 * 3's * y1                // + 2[0] * s[0] * y1[6]
                              - 3 * x1 * 3'x1               // - 3[0] * x1[6] * x1[0]
                              - 3 * 'x1 * 3'x1              // - 3[0] * x1[5] * x1[1]
                              - 3 * 'x1 * 2'x1              // - 3[0] * x1[4] * x1[2]
                              - 3 * 2'x1 * 2'x1             // - 3[0] * x1[3] * x1[3]
                              - 3 * 2'x1 * 'x1              // - 3[0] * x1[2] * x1[4]
                              - 3 * 3'x1 * 'x1              // - 3[0] * x1[1] * x1[5]
                              - 3 * 3'x1 * x1               // - 3[0] * x1[0] * x1[6]
                              + 0xFFFF * 3'q0               // + p[6] * q0[0]
                              + 0xFFFF * 3'q0               // + p[5] * q0[1]
                              + 0xFFFF * 2'q0               // + p[4] * q0[2]
                              + 0xFFFF * 2'q0               // + p[3] * q0[3]
                              + 0xFFFE * 'q0                // + p[2] * q0[4]
                              + 0xFFFF * 'q0                // + p[1] * q0[5]
                              + 0xFC2F * q0;                // + p[0] * q0[6]

eq_secp256k1_dbl_chunks[ 7] =   2 * s * 3'y1                //   2[0] * s[7] * y1[0]
                              + 2 * s * 3'y1                // + 2[0] * s[6] * y1[1]
                              + 2 * 's * 2'y1               // + 2[0] * s[5] * y1[2]
                              + 2 * 's * 2'y1               // + 2[0] * s[4] * y1[3]
                              + 2 * 2's * 'y1               // + 2[0] * s[3] * y1[4]
                              + 2 * 2's * 'y1               // + 2[0] * s[2] * y1[5]
                              + 2 * 3's * y1                // + 2[0] * s[1] * y1[6]
                              + 2 * 3's * y1                // + 2[0] * s[0] * y1[7]
                              - 3 * x1 * 3'x1               // - 3[0] * x1[7] * x1[0]
                              - 3 * x1 * 3'x1               // - 3[0] * x1[6] * x1[1]
                              - 3 * 'x1 * 2'x1              // - 3[0] * x1[5] * x1[2]
                              - 3 * 'x1 * 2'x1              // - 3[0] * x1[4] * x1[3]
                              - 3 * 2'x1 * 'x1              // - 3[0] * x1[3] * x1[4]
                              - 3 * 2'x1 * 'x1              // - 3[0] * x1[2] * x1[5]
                              - 3 * 3'x1 * x1               // - 3[0] * x1[1] * x1[6]
                              - 3 * 3'x1 * x1               // - 3[0] * x1[0] * x1[7]
                              + 0xFFFF * 3'q0               // + p[7] * q0[0]
                              + 0xFFFF * 3'q0               // + p[6] * q0[1]
                              + 0xFFFF * 2'q0               // + p[5] * q0[2]
                              + 0xFFFF * 2'q0               // + p[4] * q0[3]
                              + 0xFFFF * 'q0                // + p[3] * q0[4]
                              + 0xFFFE * 'q0                // + p[2] * q0[5]
                              + 0xFFFF * q0                 // + p[1] * q0[6]
                              + 0xFC2F * q0;                // + p[0] * q0[7]

// clock #4

eq_secp256k1_dbl_chunks[ 8] =   2 * s * 4'y1                //   2[0] * s[8] * y1[0]
                              + 2 * 's * 4'y1               // + 2[0] * s[7] * y1[1]
                              + 2 * 's * 3'y1               // + 2[0] * s[6] * y1[2]
                              + 2 * 2's * 3'y1              // + 2[0] * s[5] * y1[3]
                              + 2 * 2's * 2'y1              // + 2[0] * s[4] * y1[4]
                              + 2 * 3's * 2'y1              // + 2[0] * s[3] * y1[5]
                              + 2 * 3's * 'y1               // + 2[0] * s[2] * y1[6]
                              + 2 * 4's * 'y1               // + 2[0] * s[1] * y1[7]
                              + 2 * 4's * y1                // + 2[0] * s[0] * y1[8]
                              - 3 * x1 * 4'x1               // - 3[0] * x1[8] * x1[0]
                              - 3 * 'x1 * 4'x1              // - 3[0] * x1[7] * x1[1]
                              - 3 * 'x1 * 3'x1              // - 3[0] * x1[6] * x1[2]
                              - 3 * 2'x1 * 3'x1             // - 3[0] * x1[5] * x1[3]
                              - 3 * 2'x1 * 2'x1             // - 3[0] * x1[4] * x1[4]
                              - 3 * 3'x1 * 2'x1             // - 3[0] * x1[3] * x1[5]
                              - 3 * 3'x1 * 'x1              // - 3[0] * x1[2] * x1[6]
                              - 3 * 4'x1 * 'x1              // - 3[0] * x1[1] * x1[7]
                              - 3 * 4'x1 * x1               // - 3[0] * x1[0] * x1[8]
                              + 0xFFFF * 4'q0               // + p[8] * q0[0]
                              + 0xFFFF * 4'q0               // + p[7] * q0[1]
                              + 0xFFFF * 3'q0               // + p[6] * q0[2]
                              + 0xFFFF * 3'q0               // + p[5] * q0[3]
                              + 0xFFFF * 2'q0               // + p[4] * q0[4]
                              + 0xFFFF * 2'q0               // + p[3] * q0[5]
                              + 0xFFFE * 'q0                // + p[2] * q0[6]
                              + 0xFFFF * 'q0                // + p[1] * q0[7]
                              + 0xFC2F * q0;                // + p[0] * q0[8]

eq_secp256k1_dbl_chunks[ 9] =   2 * s * 4'y1                //   2[0] * s[9] * y1[0]
                              + 2 * s * 4'y1                // + 2[0] * s[8] * y1[1]
                              + 2 * 's * 3'y1               // + 2[0] * s[7] * y1[2]
                              + 2 * 's * 3'y1               // + 2[0] * s[6] * y1[3]
                              + 2 * 2's * 2'y1              // + 2[0] * s[5] * y1[4]
                              + 2 * 2's * 2'y1              // + 2[0] * s[4] * y1[5]
                              + 2 * 3's * 'y1               // + 2[0] * s[3] * y1[6]
                              + 2 * 3's * 'y1               // + 2[0] * s[2] * y1[7]
                              + 2 * 4's * y1                // + 2[0] * s[1] * y1[8]
                              + 2 * 4's * y1                // + 2[0] * s[0] * y1[9]
                              - 3 * x1 * 4'x1               // - 3[0] * x1[9] * x1[0]
                              - 3 * x1 * 4'x1               // - 3[0] * x1[8] * x1[1]
                              - 3 * 'x1 * 3'x1              // - 3[0] * x1[7] * x1[2]
                              - 3 * 'x1 * 3'x1              // - 3[0] * x1[6] * x1[3]
                              - 3 * 2'x1 * 2'x1             // - 3[0] * x1[5] * x1[4]
                              - 3 * 2'x1 * 2'x1             // - 3[0] * x1[4] * x1[5]
                              - 3 * 3'x1 * 'x1              // - 3[0] * x1[3] * x1[6]
                              - 3 * 3'x1 * 'x1              // - 3[0] * x1[2] * x1[7]
                              - 3 * 4'x1 * x1               // - 3[0] * x1[1] * x1[8]
                              - 3 * 4'x1 * x1               // - 3[0] * x1[0] * x1[9]
                              + 0xFFFF * 4'q0               // + p[9] * q0[0]
                              + 0xFFFF * 4'q0               // + p[8] * q0[1]
                              + 0xFFFF * 3'q0               // + p[7] * q0[2]
                              + 0xFFFF * 3'q0               // + p[6] * q0[3]
                              + 0xFFFF * 2'q0               // + p[5] * q0[4]
                              + 0xFFFF * 2'q0               // + p[4] * q0[5]
                              + 0xFFFF * 'q0                // + p[3] * q0[6]
                              + 0xFFFE * 'q0                // + p[2] * q0[7]
                              + 0xFFFF * q0                 // + p[1] * q0[8]
                              + 0xFC2F * q0;                // + p[0] * q0[9]

// clock #5

eq_secp256k1_dbl_chunks[10] =   2 * s * 5'y1                //   2[0] * s[10] * y1[0]
                              + 2 * 's * 5'y1               // + 2[0] * s[9] * y1[1]
                              + 2 * 's * 4'y1               // + 2[0] * s[8] * y1[2]
                              + 2 * 2's * 4'y1              // + 2[0] * s[7] * y1[3]
                              + 2 * 2's * 3'y1              // + 2[0] * s[6] * y1[4]
                              + 2 * 3's * 3'y1              // + 2[0] * s[5] * y1[5]
                              + 2 * 3's * 2'y1              // + 2[0] * s[4] * y1[6]
                              + 2 * 4's * 2'y1              // + 2[0] * s[3] * y1[7]
                              + 2 * 4's * 'y1               // + 2[0] * s[2] * y1[8]
                              + 2 * 5's * 'y1               // + 2[0] * s[1] * y1[9]
                              + 2 * 5's * y1                // + 2[0] * s[0] * y1[10]
                              - 3 * x1 * 5'x1               // - 3[0] * x1[10] * x1[0]
                              - 3 * 'x1 * 5'x1              // - 3[0] * x1[9] * x1[1]
                              - 3 * 'x1 * 4'x1              // - 3[0] * x1[8] * x1[2]
                              - 3 * 2'x1 * 4'x1             // - 3[0] * x1[7] * x1[3]
                              - 3 * 2'x1 * 3'x1             // - 3[0] * x1[6] * x1[4]
                              - 3 * 3'x1 * 3'x1             // - 3[0] * x1[5] * x1[5]
                              - 3 * 3'x1 * 2'x1             // - 3[0] * x1[4] * x1[6]
                              - 3 * 4'x1 * 2'x1             // - 3[0] * x1[3] * x1[7]
                              - 3 * 4'x1 * 'x1              // - 3[0] * x1[2] * x1[8]
                              - 3 * 5'x1 * 'x1              // - 3[0] * x1[1] * x1[9]
                              - 3 * 5'x1 * x1               // - 3[0] * x1[0] * x1[10]
                              + 0xFFFF * 5'q0               // + p[10] * q0[0]
                              + 0xFFFF * 5'q0               // + p[9] * q0[1]
                              + 0xFFFF * 4'q0               // + p[8] * q0[2]
                              + 0xFFFF * 4'q0               // + p[7] * q0[3]
                              + 0xFFFF * 3'q0               // + p[6] * q0[4]
                              + 0xFFFF * 3'q0               // + p[5] * q0[5]
                              + 0xFFFF * 2'q0               // + p[4] * q0[6]
                              + 0xFFFF * 2'q0               // + p[3] * q0[7]
                              + 0xFFFE * 'q0                // + p[2] * q0[8]
                              + 0xFFFF * 'q0                // + p[1] * q0[9]
                              + 0xFC2F * q0;                // + p[0] * q0[10]

eq_secp256k1_dbl_chunks[11] =   2 * s * 5'y1                //   2[0] * s[11] * y1[0]
                              + 2 * s * 5'y1                // + 2[0] * s[10] * y1[1]
                              + 2 * 's * 4'y1               // + 2[0] * s[9] * y1[2]
                              + 2 * 's * 4'y1               // + 2[0] * s[8] * y1[3]
                              + 2 * 2's * 3'y1              // + 2[0] * s[7] * y1[4]
                              + 2 * 2's * 3'y1              // + 2[0] * s[6] * y1[5]
                              + 2 * 3's * 2'y1              // + 2[0] * s[5] * y1[6]
                              + 2 * 3's * 2'y1              // + 2[0] * s[4] * y1[7]
                              + 2 * 4's * 'y1               // + 2[0] * s[3] * y1[8]
                              + 2 * 4's * 'y1               // + 2[0] * s[2] * y1[9]
                              + 2 * 5's * y1                // + 2[0] * s[1] * y1[10]
                              + 2 * 5's * y1                // + 2[0] * s[0] * y1[11]
                              - 3 * x1 * 5'x1               // - 3[0] * x1[11] * x1[0]
                              - 3 * x1 * 5'x1               // - 3[0] * x1[10] * x1[1]
                              - 3 * 'x1 * 4'x1              // - 3[0] * x1[9] * x1[2]
                              - 3 * 'x1 * 4'x1              // - 3[0] * x1[8] * x1[3]
                              - 3 * 2'x1 * 3'x1             // - 3[0] * x1[7] * x1[4]
                              - 3 * 2'x1 * 3'x1             // - 3[0] * x1[6] * x1[5]
                              - 3 * 3'x1 * 2'x1             // - 3[0] * x1[5] * x1[6]
                              - 3 * 3'x1 * 2'x1             // - 3[0] * x1[4] * x1[7]
                              - 3 * 4'x1 * 'x1              // - 3[0] * x1[3] * x1[8]
                              - 3 * 4'x1 * 'x1              // - 3[0] * x1[2] * x1[9]
                              - 3 * 5'x1 * x1               // - 3[0] * x1[1] * x1[10]
                              - 3 * 5'x1 * x1               // - 3[0] * x1[0] * x1[11]
                              + 0xFFFF * 5'q0               // + p[11] * q0[0]
                              + 0xFFFF * 5'q0               // + p[10] * q0[1]
                              + 0xFFFF * 4'q0               // + p[9] * q0[2]
                              + 0xFFFF * 4'q0               // + p[8] * q0[3]
                              + 0xFFFF * 3'q0               // + p[7] * q0[4]
                              + 0xFFFF * 3'q0               // + p[6] * q0[5]
                              + 0xFFFF * 2'q0               // + p[5] * q0[6]
                              + 0xFFFF * 2'q0               // + p[4] * q0[7]
                              + 0xFFFF * 'q0                // + p[3] * q0[8]
                              + 0xFFFE * 'q0                // + p[2] * q0[9]
                              + 0xFFFF * q0                 // + p[1] * q0[10]
                              + 0xFC2F * q0;                // + p[0] * q0[11]

// clock #6

eq_secp256k1_dbl_chunks[12] =   2 * s * 6'y1                //   2[0] * s[12] * y1[0]
                              + 2 * 's * 6'y1               // + 2[0] * s[11] * y1[1]
                              + 2 * 's * 5'y1               // + 2[0] * s[10] * y1[2]
                              + 2 * 2's * 5'y1              // + 2[0] * s[9] * y1[3]
                              + 2 * 2's * 4'y1              // + 2[0] * s[8] * y1[4]
                              + 2 * 3's * 4'y1              // + 2[0] * s[7] * y1[5]
                              + 2 * 3's * 3'y1              // + 2[0] * s[6] * y1[6]
                              + 2 * 4's * 3'y1              // + 2[0] * s[5] * y1[7]
                              + 2 * 4's * 2'y1              // + 2[0] * s[4] * y1[8]
                              + 2 * 5's * 2'y1              // + 2[0] * s[3] * y1[9]
                              + 2 * 5's * 'y1               // + 2[0] * s[2] * y1[10]
                              + 2 * 6's * 'y1               // + 2[0] * s[1] * y1[11]
                              + 2 * 6's * y1                // + 2[0] * s[0] * y1[12]
                              - 3 * x1 * 6'x1               // - 3[0] * x1[12] * x1[0]
                              - 3 * 'x1 * 6'x1              // - 3[0] * x1[11] * x1[1]
                              - 3 * 'x1 * 5'x1              // - 3[0] * x1[10] * x1[2]
                              - 3 * 2'x1 * 5'x1             // - 3[0] * x1[9] * x1[3]
                              - 3 * 2'x1 * 4'x1             // - 3[0] * x1[8] * x1[4]
                              - 3 * 3'x1 * 4'x1             // - 3[0] * x1[7] * x1[5]
                              - 3 * 3'x1 * 3'x1             // - 3[0] * x1[6] * x1[6]
                              - 3 * 4'x1 * 3'x1             // - 3[0] * x1[5] * x1[7]
                              - 3 * 4'x1 * 2'x1             // - 3[0] * x1[4] * x1[8]
                              - 3 * 5'x1 * 2'x1             // - 3[0] * x1[3] * x1[9]
                              - 3 * 5'x1 * 'x1              // - 3[0] * x1[2] * x1[10]
                              - 3 * 6'x1 * 'x1              // - 3[0] * x1[1] * x1[11]
                              - 3 * 6'x1 * x1               // - 3[0] * x1[0] * x1[12]
                              + 0xFFFF * 6'q0               // + p[12] * q0[0]
                              + 0xFFFF * 6'q0               // + p[11] * q0[1]
                              + 0xFFFF * 5'q0               // + p[10] * q0[2]
                              + 0xFFFF * 5'q0               // + p[9] * q0[3]
                              + 0xFFFF * 4'q0               // + p[8] * q0[4]
                              + 0xFFFF * 4'q0               // + p[7] * q0[5]
                              + 0xFFFF * 3'q0               // + p[6] * q0[6]
                              + 0xFFFF * 3'q0               // + p[5] * q0[7]
                              + 0xFFFF * 2'q0               // + p[4] * q0[8]
                              + 0xFFFF * 2'q0               // + p[3] * q0[9]
                              + 0xFFFE * 'q0                // + p[2] * q0[10]
                              + 0xFFFF * 'q0                // + p[1] * q0[11]
                              + 0xFC2F * q0;                // + p[0] * q0[12]

eq_secp256k1_dbl_chunks[13] =   2 * s * 6'y1                //   2[0] * s[13] * y1[0]
                              + 2 * s * 6'y1                // + 2[0] * s[12] * y1[1]
                              + 2 * 's * 5'y1               // + 2[0] * s[11] * y1[2]
                              + 2 * 's * 5'y1               // + 2[0] * s[10] * y1[3]
                              + 2 * 2's * 4'y1              // + 2[0] * s[9] * y1[4]
                              + 2 * 2's * 4'y1              // + 2[0] * s[8] * y1[5]
                              + 2 * 3's * 3'y1              // + 2[0] * s[7] * y1[6]
                              + 2 * 3's * 3'y1              // + 2[0] * s[6] * y1[7]
                              + 2 * 4's * 2'y1              // + 2[0] * s[5] * y1[8]
                              + 2 * 4's * 2'y1              // + 2[0] * s[4] * y1[9]
                              + 2 * 5's * 'y1               // + 2[0] * s[3] * y1[10]
                              + 2 * 5's * 'y1               // + 2[0] * s[2] * y1[11]
                              + 2 * 6's * y1                // + 2[0] * s[1] * y1[12]
                              + 2 * 6's * y1                // + 2[0] * s[0] * y1[13]
                              - 3 * x1 * 6'x1               // - 3[0] * x1[13] * x1[0]
                              - 3 * x1 * 6'x1               // - 3[0] * x1[12] * x1[1]
                              - 3 * 'x1 * 5'x1              // - 3[0] * x1[11] * x1[2]
                              - 3 * 'x1 * 5'x1              // - 3[0] * x1[10] * x1[3]
                              - 3 * 2'x1 * 4'x1             // - 3[0] * x1[9] * x1[4]
                              - 3 * 2'x1 * 4'x1             // - 3[0] * x1[8] * x1[5]
                              - 3 * 3'x1 * 3'x1             // - 3[0] * x1[7] * x1[6]
                              - 3 * 3'x1 * 3'x1             // - 3[0] * x1[6] * x1[7]
                              - 3 * 4'x1 * 2'x1             // - 3[0] * x1[5] * x1[8]
                              - 3 * 4'x1 * 2'x1             // - 3[0] * x1[4] * x1[9]
                              - 3 * 5'x1 * 'x1              // - 3[0] * x1[3] * x1[10]
                              - 3 * 5'x1 * 'x1              // - 3[0] * x1[2] * x1[11]
                              - 3 * 6'x1 * x1               // - 3[0] * x1[1] * x1[12]
                              - 3 * 6'x1 * x1               // - 3[0] * x1[0] * x1[13]
                              + 0xFFFF * 6'q0               // + p[13] * q0[0]
                              + 0xFFFF * 6'q0               // + p[12] * q0[1]
                              + 0xFFFF * 5'q0               // + p[11] * q0[2]
                              + 0xFFFF * 5'q0               // + p[10] * q0[3]
                              + 0xFFFF * 4'q0               // + p[9] * q0[4]
                              + 0xFFFF * 4'q0               // + p[8] * q0[5]
                              + 0xFFFF * 3'q0               // + p[7] * q0[6]
                              + 0xFFFF * 3'q0               // + p[6] * q0[7]
                              + 0xFFFF * 2'q0               // + p[5] * q0[8]
                              + 0xFFFF * 2'q0               // + p[4] * q0[9]
                              + 0xFFFF * 'q0                // + p[3] * q0[10]
                              + 0xFFFE * 'q0                // + p[2] * q0[11]
                              + 0xFFFF * q0                 // + p[1] * q0[12]
                              + 0xFC2F * q0;                // + p[0] * q0[13]

// clock #7

eq_secp256k1_dbl_chunks[14] =   2 * s * 7'y1                //   2[0] * s[14] * y1[0]
                              + 2 * 's * 7'y1               // + 2[0] * s[13] * y1[1]
                              + 2 * 's * 6'y1               // + 2[0] * s[12] * y1[2]
                              + 2 * 2's * 6'y1              // + 2[0] * s[11] * y1[3]
                              + 2 * 2's * 5'y1              // + 2[0] * s[10] * y1[4]
                              + 2 * 3's * 5'y1              // + 2[0] * s[9] * y1[5]
                              + 2 * 3's * 4'y1              // + 2[0] * s[8] * y1[6]
                              + 2 * 4's * 4'y1              // + 2[0] * s[7] * y1[7]
                              + 2 * 4's * 3'y1              // + 2[0] * s[6] * y1[8]
                              + 2 * 5's * 3'y1              // + 2[0] * s[5] * y1[9]
                              + 2 * 5's * 2'y1              // + 2[0] * s[4] * y1[10]
                              + 2 * 6's * 2'y1              // + 2[0] * s[3] * y1[11]
                              + 2 * 6's * 'y1               // + 2[0] * s[2] * y1[12]
                              + 2 * 7's * 'y1               // + 2[0] * s[1] * y1[13]
                              + 2 * 7's * y1                // + 2[0] * s[0] * y1[14]
                              - 3 * x1 * 7'x1               // - 3[0] * x1[14] * x1[0]
                              - 3 * 'x1 * 7'x1              // - 3[0] * x1[13] * x1[1]
                              - 3 * 'x1 * 6'x1              // - 3[0] * x1[12] * x1[2]
                              - 3 * 2'x1 * 6'x1             // - 3[0] * x1[11] * x1[3]
                              - 3 * 2'x1 * 5'x1             // - 3[0] * x1[10] * x1[4]
                              - 3 * 3'x1 * 5'x1             // - 3[0] * x1[9] * x1[5]
                              - 3 * 3'x1 * 4'x1             // - 3[0] * x1[8] * x1[6]
                              - 3 * 4'x1 * 4'x1             // - 3[0] * x1[7] * x1[7]
                              - 3 * 4'x1 * 3'x1             // - 3[0] * x1[6] * x1[8]
                              - 3 * 5'x1 * 3'x1             // - 3[0] * x1[5] * x1[9]
                              - 3 * 5'x1 * 2'x1             // - 3[0] * x1[4] * x1[10]
                              - 3 * 6'x1 * 2'x1             // - 3[0] * x1[3] * x1[11]
                              - 3 * 6'x1 * 'x1              // - 3[0] * x1[2] * x1[12]
                              - 3 * 7'x1 * 'x1              // - 3[0] * x1[1] * x1[13]
                              - 3 * 7'x1 * x1               // - 3[0] * x1[0] * x1[14]
                              + 0xFFFF * 7'q0               // + p[14] * q0[0]
                              + 0xFFFF * 7'q0               // + p[13] * q0[1]
                              + 0xFFFF * 6'q0               // + p[12] * q0[2]
                              + 0xFFFF * 6'q0               // + p[11] * q0[3]
                              + 0xFFFF * 5'q0               // + p[10] * q0[4]
                              + 0xFFFF * 5'q0               // + p[9] * q0[5]
                              + 0xFFFF * 4'q0               // + p[8] * q0[6]
                              + 0xFFFF * 4'q0               // + p[7] * q0[7]
                              + 0xFFFF * 3'q0               // + p[6] * q0[8]
                              + 0xFFFF * 3'q0               // + p[5] * q0[9]
                              + 0xFFFF * 2'q0               // + p[4] * q0[10]
                              + 0xFFFF * 2'q0               // + p[3] * q0[11]
                              + 0xFFFE * 'q0                // + p[2] * q0[12]
                              + 0xFFFF * 'q0                // + p[1] * q0[13]
                              + 0xFC2F * q0;                // + p[0] * q0[14]

eq_secp256k1_dbl_chunks[15] =   2 * s * 7'y1                //   2[0] * s[15] * y1[0]
                              + 2 * s * 7'y1                // + 2[0] * s[14] * y1[1]
                              + 2 * 's * 6'y1               // + 2[0] * s[13] * y1[2]
                              + 2 * 's * 6'y1               // + 2[0] * s[12] * y1[3]
                              + 2 * 2's * 5'y1              // + 2[0] * s[11] * y1[4]
                              + 2 * 2's * 5'y1              // + 2[0] * s[10] * y1[5]
                              + 2 * 3's * 4'y1              // + 2[0] * s[9] * y1[6]
                              + 2 * 3's * 4'y1              // + 2[0] * s[8] * y1[7]
                              + 2 * 4's * 3'y1              // + 2[0] * s[7] * y1[8]
                              + 2 * 4's * 3'y1              // + 2[0] * s[6] * y1[9]
                              + 2 * 5's * 2'y1              // + 2[0] * s[5] * y1[10]
                              + 2 * 5's * 2'y1              // + 2[0] * s[4] * y1[11]
                              + 2 * 6's * 'y1               // + 2[0] * s[3] * y1[12]
                              + 2 * 6's * 'y1               // + 2[0] * s[2] * y1[13]
                              + 2 * 7's * y1                // + 2[0] * s[1] * y1[14]
                              + 2 * 7's * y1                // + 2[0] * s[0] * y1[15]
                              - 3 * x1 * 7'x1               // - 3[0] * x1[15] * x1[0]
                              - 3 * x1 * 7'x1               // - 3[0] * x1[14] * x1[1]
                              - 3 * 'x1 * 6'x1              // - 3[0] * x1[13] * x1[2]
                              - 3 * 'x1 * 6'x1              // - 3[0] * x1[12] * x1[3]
                              - 3 * 2'x1 * 5'x1             // - 3[0] * x1[11] * x1[4]
                              - 3 * 2'x1 * 5'x1             // - 3[0] * x1[10] * x1[5]
                              - 3 * 3'x1 * 4'x1             // - 3[0] * x1[9] * x1[6]
                              - 3 * 3'x1 * 4'x1             // - 3[0] * x1[8] * x1[7]
                              - 3 * 4'x1 * 3'x1             // - 3[0] * x1[7] * x1[8]
                              - 3 * 4'x1 * 3'x1             // - 3[0] * x1[6] * x1[9]
                              - 3 * 5'x1 * 2'x1             // - 3[0] * x1[5] * x1[10]
                              - 3 * 5'x1 * 2'x1             // - 3[0] * x1[4] * x1[11]
                              - 3 * 6'x1 * 'x1              // - 3[0] * x1[3] * x1[12]
                              - 3 * 6'x1 * 'x1              // - 3[0] * x1[2] * x1[13]
                              - 3 * 7'x1 * x1               // - 3[0] * x1[1] * x1[14]
                              - 3 * 7'x1 * x1               // - 3[0] * x1[0] * x1[15]
                              + 0xFFFF * 7'q0               // + p[15] * q0[0]
                              + 0xFFFF * 7'q0               // + p[14] * q0[1]
                              + 0xFFFF * 6'q0               // + p[13] * q0[2]
                              + 0xFFFF * 6'q0               // + p[12] * q0[3]
                              + 0xFFFF * 5'q0               // + p[11] * q0[4]
                              + 0xFFFF * 5'q0               // + p[10] * q0[5]
                              + 0xFFFF * 4'q0               // + p[9] * q0[6]
                              + 0xFFFF * 4'q0               // + p[8] * q0[7]
                              + 0xFFFF * 3'q0               // + p[7] * q0[8]
                              + 0xFFFF * 3'q0               // + p[6] * q0[9]
                              + 0xFFFF * 2'q0               // + p[5] * q0[10]
                              + 0xFFFF * 2'q0               // + p[4] * q0[11]
                              + 0xFFFF * 'q0                // + p[3] * q0[12]
                              + 0xFFFE * 'q0                // + p[2] * q0[13]
                              + 0xFFFF * q0                 // + p[1] * q0[14]
                              + 0xFC2F * q0;                // + p[0] * q0[15]

// clock #8

eq_secp256k1_dbl_chunks[16] =   2 * 's * 8'y1               //   2[0] * s[15] * y1[1]
                              + 2 * 's * 7'y1               // + 2[0] * s[14] * y1[2]
                              + 2 * 2's * 7'y1              // + 2[0] * s[13] * y1[3]
                              + 2 * 2's * 6'y1              // + 2[0] * s[12] * y1[4]
                              + 2 * 3's * 6'y1              // + 2[0] * s[11] * y1[5]
                              + 2 * 3's * 5'y1              // + 2[0] * s[10] * y1[6]
                              + 2 * 4's * 5'y1              // + 2[0] * s[9] * y1[7]
                              + 2 * 4's * 4'y1              // + 2[0] * s[8] * y1[8]
                              + 2 * 5's * 4'y1              // + 2[0] * s[7] * y1[9]
                              + 2 * 5's * 3'y1              // + 2[0] * s[6] * y1[10]
                              + 2 * 6's * 3'y1              // + 2[0] * s[5] * y1[11]
                              + 2 * 6's * 2'y1              // + 2[0] * s[4] * y1[12]
                              + 2 * 7's * 2'y1              // + 2[0] * s[3] * y1[13]
                              + 2 * 7's * 'y1               // + 2[0] * s[2] * y1[14]
                              + 2 * 8's * 'y1               // + 2[0] * s[1] * y1[15]
                              - 3 * 'x1 * 8'x1              // - 3[0] * x1[15] * x1[1]
                              - 3 * 'x1 * 7'x1              // - 3[0] * x1[14] * x1[2]
                              - 3 * 2'x1 * 7'x1             // - 3[0] * x1[13] * x1[3]
                              - 3 * 2'x1 * 6'x1             // - 3[0] * x1[12] * x1[4]
                              - 3 * 3'x1 * 6'x1             // - 3[0] * x1[11] * x1[5]
                              - 3 * 3'x1 * 5'x1             // - 3[0] * x1[10] * x1[6]
                              - 3 * 4'x1 * 5'x1             // - 3[0] * x1[9] * x1[7]
                              - 3 * 4'x1 * 4'x1             // - 3[0] * x1[8] * x1[8]
                              - 3 * 5'x1 * 4'x1             // - 3[0] * x1[7] * x1[9]
                              - 3 * 5'x1 * 3'x1             // - 3[0] * x1[6] * x1[10]
                              - 3 * 6'x1 * 3'x1             // - 3[0] * x1[5] * x1[11]
                              - 3 * 6'x1 * 2'x1             // - 3[0] * x1[4] * x1[12]
                              - 3 * 7'x1 * 2'x1             // - 3[0] * x1[3] * x1[13]
                              - 3 * 7'x1 * 'x1              // - 3[0] * x1[2] * x1[14]
                              - 3 * 8'x1 * 'x1              // - 3[0] * x1[1] * x1[15]
                              + 0xFFFF * 8'q0               // + p[15] * q0[1]
                              + 0xFFFF * 7'q0               // + p[14] * q0[2]
                              + 0xFFFF * 7'q0               // + p[13] * q0[3]
                              + 0xFFFF * 6'q0               // + p[12] * q0[4]
                              + 0xFFFF * 6'q0               // + p[11] * q0[5]
                              + 0xFFFF * 5'q0               // + p[10] * q0[6]
                              + 0xFFFF * 5'q0               // + p[9] * q0[7]
                              + 0xFFFF * 4'q0               // + p[8] * q0[8]
                              + 0xFFFF * 4'q0               // + p[7] * q0[9]
                              + 0xFFFF * 3'q0               // + p[6] * q0[10]
                              + 0xFFFF * 3'q0               // + p[5] * q0[11]
                              + 0xFFFF * 2'q0               // + p[4] * q0[12]
                              + 0xFFFF * 2'q0               // + p[3] * q0[13]
                              + 0xFFFE * 'q0                // + p[2] * q0[14]
                              + 0xFFFF * 'q0                // + p[1] * q0[15]
                              - 0xF0BC;                     // - (p*offset)[16]

eq_secp256k1_dbl_chunks[17] =   2 * 's * 7'y1               //   2[0] * s[15] * y1[2]
                              + 2 * 's * 7'y1               // + 2[0] * s[14] * y1[3]
                              + 2 * 2's * 6'y1              // + 2[0] * s[13] * y1[4]
                              + 2 * 2's * 6'y1              // + 2[0] * s[12] * y1[5]
                              + 2 * 3's * 5'y1              // + 2[0] * s[11] * y1[6]
                              + 2 * 3's * 5'y1              // + 2[0] * s[10] * y1[7]
                              + 2 * 4's * 4'y1              // + 2[0] * s[9] * y1[8]
                              + 2 * 4's * 4'y1              // + 2[0] * s[8] * y1[9]
                              + 2 * 5's * 3'y1              // + 2[0] * s[7] * y1[10]
                              + 2 * 5's * 3'y1              // + 2[0] * s[6] * y1[11]
                              + 2 * 6's * 2'y1              // + 2[0] * s[5] * y1[12]
                              + 2 * 6's * 2'y1              // + 2[0] * s[4] * y1[13]
                              + 2 * 7's * 'y1               // + 2[0] * s[3] * y1[14]
                              + 2 * 7's * 'y1               // + 2[0] * s[2] * y1[15]
                              - 3 * 'x1 * 7'x1              // - 3[0] * x1[15] * x1[2]
                              - 3 * 'x1 * 7'x1              // - 3[0] * x1[14] * x1[3]
                              - 3 * 2'x1 * 6'x1             // - 3[0] * x1[13] * x1[4]
                              - 3 * 2'x1 * 6'x1             // - 3[0] * x1[12] * x1[5]
                              - 3 * 3'x1 * 5'x1             // - 3[0] * x1[11] * x1[6]
                              - 3 * 3'x1 * 5'x1             // - 3[0] * x1[10] * x1[7]
                              - 3 * 4'x1 * 4'x1             // - 3[0] * x1[9] * x1[8]
                              - 3 * 4'x1 * 4'x1             // - 3[0] * x1[8] * x1[9]
                              - 3 * 5'x1 * 3'x1             // - 3[0] * x1[7] * x1[10]
                              - 3 * 5'x1 * 3'x1             // - 3[0] * x1[6] * x1[11]
                              - 3 * 6'x1 * 2'x1             // - 3[0] * x1[5] * x1[12]
                              - 3 * 6'x1 * 2'x1             // - 3[0] * x1[4] * x1[13]
                              - 3 * 7'x1 * 'x1              // - 3[0] * x1[3] * x1[14]
                              - 3 * 7'x1 * 'x1              // - 3[0] * x1[2] * x1[15]
                              + 0xFFFF * 7'q0               // + p[15] * q0[2]
                              + 0xFFFF * 7'q0               // + p[14] * q0[3]
                              + 0xFFFF * 6'q0               // + p[13] * q0[4]
                              + 0xFFFF * 6'q0               // + p[12] * q0[5]
                              + 0xFFFF * 5'q0               // + p[11] * q0[6]
                              + 0xFFFF * 5'q0               // + p[10] * q0[7]
                              + 0xFFFF * 4'q0               // + p[9] * q0[8]
                              + 0xFFFF * 4'q0               // + p[8] * q0[9]
                              + 0xFFFF * 3'q0               // + p[7] * q0[10]
                              + 0xFFFF * 3'q0               // + p[6] * q0[11]
                              + 0xFFFF * 2'q0               // + p[5] * q0[12]
                              + 0xFFFF * 2'q0               // + p[4] * q0[13]
                              + 0xFFFF * 'q0                // + p[3] * q0[14]
                              + 0xFFFE * 'q0                // + p[2] * q0[15]
                              - 0xFFFF;                     // - (p*offset)[17]

// clock #9

eq_secp256k1_dbl_chunks[18] =   2 * 2's * 8'y1              //   2[0] * s[15] * y1[3]
                              + 2 * 2's * 7'y1              // + 2[0] * s[14] * y1[4]
                              + 2 * 3's * 7'y1              // + 2[0] * s[13] * y1[5]
                              + 2 * 3's * 6'y1              // + 2[0] * s[12] * y1[6]
                              + 2 * 4's * 6'y1              // + 2[0] * s[11] * y1[7]
                              + 2 * 4's * 5'y1              // + 2[0] * s[10] * y1[8]
                              + 2 * 5's * 5'y1              // + 2[0] * s[9] * y1[9]
                              + 2 * 5's * 4'y1              // + 2[0] * s[8] * y1[10]
                              + 2 * 6's * 4'y1              // + 2[0] * s[7] * y1[11]
                              + 2 * 6's * 3'y1              // + 2[0] * s[6] * y1[12]
                              + 2 * 7's * 3'y1              // + 2[0] * s[5] * y1[13]
                              + 2 * 7's * 2'y1              // + 2[0] * s[4] * y1[14]
                              + 2 * 8's * 2'y1              // + 2[0] * s[3] * y1[15]
                              - 3 * 2'x1 * 8'x1             // - 3[0] * x1[15] * x1[3]
                              - 3 * 2'x1 * 7'x1             // - 3[0] * x1[14] * x1[4]
                              - 3 * 3'x1 * 7'x1             // - 3[0] * x1[13] * x1[5]
                              - 3 * 3'x1 * 6'x1             // - 3[0] * x1[12] * x1[6]
                              - 3 * 4'x1 * 6'x1             // - 3[0] * x1[11] * x1[7]
                              - 3 * 4'x1 * 5'x1             // - 3[0] * x1[10] * x1[8]
                              - 3 * 5'x1 * 5'x1             // - 3[0] * x1[9] * x1[9]
                              - 3 * 5'x1 * 4'x1             // - 3[0] * x1[8] * x1[10]
                              - 3 * 6'x1 * 4'x1             // - 3[0] * x1[7] * x1[11]
                              - 3 * 6'x1 * 3'x1             // - 3[0] * x1[6] * x1[12]
                              - 3 * 7'x1 * 3'x1             // - 3[0] * x1[5] * x1[13]
                              - 3 * 7'x1 * 2'x1             // - 3[0] * x1[4] * x1[14]
                              - 3 * 8'x1 * 2'x1             // - 3[0] * x1[3] * x1[15]
                              + 0xFFFF * 8'q0               // + p[15] * q0[3]
                              + 0xFFFF * 7'q0               // + p[14] * q0[4]
                              + 0xFFFF * 7'q0               // + p[13] * q0[5]
                              + 0xFFFF * 6'q0               // + p[12] * q0[6]
                              + 0xFFFF * 6'q0               // + p[11] * q0[7]
                              + 0xFFFF * 5'q0               // + p[10] * q0[8]
                              + 0xFFFF * 5'q0               // + p[9] * q0[9]
                              + 0xFFFF * 4'q0               // + p[8] * q0[10]
                              + 0xFFFF * 4'q0               // + p[7] * q0[11]
                              + 0xFFFF * 3'q0               // + p[6] * q0[12]
                              + 0xFFFF * 3'q0               // + p[5] * q0[13]
                              + 0xFFFF * 2'q0               // + p[4] * q0[14]
                              + 0xFFFF * 2'q0               // + p[3] * q0[15]
                              - 0xFFFB;                     // - (p*offset)[18]

eq_secp256k1_dbl_chunks[19] =   2 * 2's * 7'y1              //   2[0] * s[15] * y1[4]
                              + 2 * 2's * 7'y1              // + 2[0] * s[14] * y1[5]
                              + 2 * 3's * 6'y1              // + 2[0] * s[13] * y1[6]
                              + 2 * 3's * 6'y1              // + 2[0] * s[12] * y1[7]
                              + 2 * 4's * 5'y1              // + 2[0] * s[11] * y1[8]
                              + 2 * 4's * 5'y1              // + 2[0] * s[10] * y1[9]
                              + 2 * 5's * 4'y1              // + 2[0] * s[9] * y1[10]
                              + 2 * 5's * 4'y1              // + 2[0] * s[8] * y1[11]
                              + 2 * 6's * 3'y1              // + 2[0] * s[7] * y1[12]
                              + 2 * 6's * 3'y1              // + 2[0] * s[6] * y1[13]
                              + 2 * 7's * 2'y1              // + 2[0] * s[5] * y1[14]
                              + 2 * 7's * 2'y1              // + 2[0] * s[4] * y1[15]
                              - 3 * 2'x1 * 7'x1             // - 3[0] * x1[15] * x1[4]
                              - 3 * 2'x1 * 7'x1             // - 3[0] * x1[14] * x1[5]
                              - 3 * 3'x1 * 6'x1             // - 3[0] * x1[13] * x1[6]
                              - 3 * 3'x1 * 6'x1             // - 3[0] * x1[12] * x1[7]
                              - 3 * 4'x1 * 5'x1             // - 3[0] * x1[11] * x1[8]
                              - 3 * 4'x1 * 5'x1             // - 3[0] * x1[10] * x1[9]
                              - 3 * 5'x1 * 4'x1             // - 3[0] * x1[9] * x1[10]
                              - 3 * 5'x1 * 4'x1             // - 3[0] * x1[8] * x1[11]
                              - 3 * 6'x1 * 3'x1             // - 3[0] * x1[7] * x1[12]
                              - 3 * 6'x1 * 3'x1             // - 3[0] * x1[6] * x1[13]
                              - 3 * 7'x1 * 2'x1             // - 3[0] * x1[5] * x1[14]
                              - 3 * 7'x1 * 2'x1             // - 3[0] * x1[4] * x1[15]
                              + 0xFFFF * 7'q0               // + p[15] * q0[4]
                              + 0xFFFF * 7'q0               // + p[14] * q0[5]
                              + 0xFFFF * 6'q0               // + p[13] * q0[6]
                              + 0xFFFF * 6'q0               // + p[12] * q0[7]
                              + 0xFFFF * 5'q0               // + p[11] * q0[8]
                              + 0xFFFF * 5'q0               // + p[10] * q0[9]
                              + 0xFFFF * 4'q0               // + p[9] * q0[10]
                              + 0xFFFF * 4'q0               // + p[8] * q0[11]
                              + 0xFFFF * 3'q0               // + p[7] * q0[12]
                              + 0xFFFF * 3'q0               // + p[6] * q0[13]
                              + 0xFFFF * 2'q0               // + p[5] * q0[14]
                              + 0xFFFF * 2'q0               // + p[4] * q0[15]
                              - 0xFFFF;                     // - (p*offset)[19]

// clock #10

eq_secp256k1_dbl_chunks[20] =   2 * 3's * 8'y1              //   2[0] * s[15] * y1[5]
                              + 2 * 3's * 7'y1              // + 2[0] * s[14] * y1[6]
                              + 2 * 4's * 7'y1              // + 2[0] * s[13] * y1[7]
                              + 2 * 4's * 6'y1              // + 2[0] * s[12] * y1[8]
                              + 2 * 5's * 6'y1              // + 2[0] * s[11] * y1[9]
                              + 2 * 5's * 5'y1              // + 2[0] * s[10] * y1[10]
                              + 2 * 6's * 5'y1              // + 2[0] * s[9] * y1[11]
                              + 2 * 6's * 4'y1              // + 2[0] * s[8] * y1[12]
                              + 2 * 7's * 4'y1              // + 2[0] * s[7] * y1[13]
                              + 2 * 7's * 3'y1              // + 2[0] * s[6] * y1[14]
                              + 2 * 8's * 3'y1              // + 2[0] * s[5] * y1[15]
                              - 3 * 3'x1 * 8'x1             // - 3[0] * x1[15] * x1[5]
                              - 3 * 3'x1 * 7'x1             // - 3[0] * x1[14] * x1[6]
                              - 3 * 4'x1 * 7'x1             // - 3[0] * x1[13] * x1[7]
                              - 3 * 4'x1 * 6'x1             // - 3[0] * x1[12] * x1[8]
                              - 3 * 5'x1 * 6'x1             // - 3[0] * x1[11] * x1[9]
                              - 3 * 5'x1 * 5'x1             // - 3[0] * x1[10] * x1[10]
                              - 3 * 6'x1 * 5'x1             // - 3[0] * x1[9] * x1[11]
                              - 3 * 6'x1 * 4'x1             // - 3[0] * x1[8] * x1[12]
                              - 3 * 7'x1 * 4'x1             // - 3[0] * x1[7] * x1[13]
                              - 3 * 7'x1 * 3'x1             // - 3[0] * x1[6] * x1[14]
                              - 3 * 8'x1 * 3'x1             // - 3[0] * x1[5] * x1[15]
                              + 0xFFFF * 8'q0               // + p[15] * q0[5]
                              + 0xFFFF * 7'q0               // + p[14] * q0[6]
                              + 0xFFFF * 7'q0               // + p[13] * q0[7]
                              + 0xFFFF * 6'q0               // + p[12] * q0[8]
                              + 0xFFFF * 6'q0               // + p[11] * q0[9]
                              + 0xFFFF * 5'q0               // + p[10] * q0[10]
                              + 0xFFFF * 5'q0               // + p[9] * q0[11]
                              + 0xFFFF * 4'q0               // + p[8] * q0[12]
                              + 0xFFFF * 4'q0               // + p[7] * q0[13]
                              + 0xFFFF * 3'q0               // + p[6] * q0[14]
                              + 0xFFFF * 3'q0               // + p[5] * q0[15]
                              - 0xFFFF;                     // - (p*offset)[20]

eq_secp256k1_dbl_chunks[21] =   2 * 3's * 7'y1              //   2[0] * s[15] * y1[6]
                              + 2 * 3's * 7'y1              // + 2[0] * s[14] * y1[7]
                              + 2 * 4's * 6'y1              // + 2[0] * s[13] * y1[8]
                              + 2 * 4's * 6'y1              // + 2[0] * s[12] * y1[9]
                              + 2 * 5's * 5'y1              // + 2[0] * s[11] * y1[10]
                              + 2 * 5's * 5'y1              // + 2[0] * s[10] * y1[11]
                              + 2 * 6's * 4'y1              // + 2[0] * s[9] * y1[12]
                              + 2 * 6's * 4'y1              // + 2[0] * s[8] * y1[13]
                              + 2 * 7's * 3'y1              // + 2[0] * s[7] * y1[14]
                              + 2 * 7's * 3'y1              // + 2[0] * s[6] * y1[15]
                              - 3 * 3'x1 * 7'x1             // - 3[0] * x1[15] * x1[6]
                              - 3 * 3'x1 * 7'x1             // - 3[0] * x1[14] * x1[7]
                              - 3 * 4'x1 * 6'x1             // - 3[0] * x1[13] * x1[8]
                              - 3 * 4'x1 * 6'x1             // - 3[0] * x1[12] * x1[9]
                              - 3 * 5'x1 * 5'x1             // - 3[0] * x1[11] * x1[10]
                              - 3 * 5'x1 * 5'x1             // - 3[0] * x1[10] * x1[11]
                              - 3 * 6'x1 * 4'x1             // - 3[0] * x1[9] * x1[12]
                              - 3 * 6'x1 * 4'x1             // - 3[0] * x1[8] * x1[13]
                              - 3 * 7'x1 * 3'x1             // - 3[0] * x1[7] * x1[14]
                              - 3 * 7'x1 * 3'x1             // - 3[0] * x1[6] * x1[15]
                              + 0xFFFF * 7'q0               // + p[15] * q0[6]
                              + 0xFFFF * 7'q0               // + p[14] * q0[7]
                              + 0xFFFF * 6'q0               // + p[13] * q0[8]
                              + 0xFFFF * 6'q0               // + p[12] * q0[9]
                              + 0xFFFF * 5'q0               // + p[11] * q0[10]
                              + 0xFFFF * 5'q0               // + p[10] * q0[11]
                              + 0xFFFF * 4'q0               // + p[9] * q0[12]
                              + 0xFFFF * 4'q0               // + p[8] * q0[13]
                              + 0xFFFF * 3'q0               // + p[7] * q0[14]
                              + 0xFFFF * 3'q0               // + p[6] * q0[15]
                              - 0xFFFF;                     // - (p*offset)[21]

// clock #11

eq_secp256k1_dbl_chunks[22] =   2 * 4's * 8'y1              //   2[0] * s[15] * y1[7]
                              + 2 * 4's * 7'y1              // + 2[0] * s[14] * y1[8]
                              + 2 * 5's * 7'y1              // + 2[0] * s[13] * y1[9]
                              + 2 * 5's * 6'y1              // + 2[0] * s[12] * y1[10]
                              + 2 * 6's * 6'y1              // + 2[0] * s[11] * y1[11]
                              + 2 * 6's * 5'y1              // + 2[0] * s[10] * y1[12]
                              + 2 * 7's * 5'y1              // + 2[0] * s[9] * y1[13]
                              + 2 * 7's * 4'y1              // + 2[0] * s[8] * y1[14]
                              + 2 * 8's * 4'y1              // + 2[0] * s[7] * y1[15]
                              - 3 * 4'x1 * 8'x1             // - 3[0] * x1[15] * x1[7]
                              - 3 * 4'x1 * 7'x1             // - 3[0] * x1[14] * x1[8]
                              - 3 * 5'x1 * 7'x1             // - 3[0] * x1[13] * x1[9]
                              - 3 * 5'x1 * 6'x1             // - 3[0] * x1[12] * x1[10]
                              - 3 * 6'x1 * 6'x1             // - 3[0] * x1[11] * x1[11]
                              - 3 * 6'x1 * 5'x1             // - 3[0] * x1[10] * x1[12]
                              - 3 * 7'x1 * 5'x1             // - 3[0] * x1[9] * x1[13]
                              - 3 * 7'x1 * 4'x1             // - 3[0] * x1[8] * x1[14]
                              - 3 * 8'x1 * 4'x1             // - 3[0] * x1[7] * x1[15]
                              + 0xFFFF * 8'q0               // + p[15] * q0[7]
                              + 0xFFFF * 7'q0               // + p[14] * q0[8]
                              + 0xFFFF * 7'q0               // + p[13] * q0[9]
                              + 0xFFFF * 6'q0               // + p[12] * q0[10]
                              + 0xFFFF * 6'q0               // + p[11] * q0[11]
                              + 0xFFFF * 5'q0               // + p[10] * q0[12]
                              + 0xFFFF * 5'q0               // + p[9] * q0[13]
                              + 0xFFFF * 4'q0               // + p[8] * q0[14]
                              + 0xFFFF * 4'q0               // + p[7] * q0[15]
                              - 0xFFFF;                     // - (p*offset)[22]

eq_secp256k1_dbl_chunks[23] =   2 * 4's * 7'y1              //   2[0] * s[15] * y1[8]
                              + 2 * 4's * 7'y1              // + 2[0] * s[14] * y1[9]
                              + 2 * 5's * 6'y1              // + 2[0] * s[13] * y1[10]
                              + 2 * 5's * 6'y1              // + 2[0] * s[12] * y1[11]
                              + 2 * 6's * 5'y1              // + 2[0] * s[11] * y1[12]
                              + 2 * 6's * 5'y1              // + 2[0] * s[10] * y1[13]
                              + 2 * 7's * 4'y1              // + 2[0] * s[9] * y1[14]
                              + 2 * 7's * 4'y1              // + 2[0] * s[8] * y1[15]
                              - 3 * 4'x1 * 7'x1             // - 3[0] * x1[15] * x1[8]
                              - 3 * 4'x1 * 7'x1             // - 3[0] * x1[14] * x1[9]
                              - 3 * 5'x1 * 6'x1             // - 3[0] * x1[13] * x1[10]
                              - 3 * 5'x1 * 6'x1             // - 3[0] * x1[12] * x1[11]
                              - 3 * 6'x1 * 5'x1             // - 3[0] * x1[11] * x1[12]
                              - 3 * 6'x1 * 5'x1             // - 3[0] * x1[10] * x1[13]
                              - 3 * 7'x1 * 4'x1             // - 3[0] * x1[9] * x1[14]
                              - 3 * 7'x1 * 4'x1             // - 3[0] * x1[8] * x1[15]
                              + 0xFFFF * 7'q0               // + p[15] * q0[8]
                              + 0xFFFF * 7'q0               // + p[14] * q0[9]
                              + 0xFFFF * 6'q0               // + p[13] * q0[10]
                              + 0xFFFF * 6'q0               // + p[12] * q0[11]
                              + 0xFFFF * 5'q0               // + p[11] * q0[12]
                              + 0xFFFF * 5'q0               // + p[10] * q0[13]
                              + 0xFFFF * 4'q0               // + p[9] * q0[14]
                              + 0xFFFF * 4'q0               // + p[8] * q0[15]
                              - 0xFFFF;                     // - (p*offset)[23]

// clock #12

eq_secp256k1_dbl_chunks[24] =   2 * 5's * 8'y1              //   2[0] * s[15] * y1[9]
                              + 2 * 5's * 7'y1              // + 2[0] * s[14] * y1[10]
                              + 2 * 6's * 7'y1              // + 2[0] * s[13] * y1[11]
                              + 2 * 6's * 6'y1              // + 2[0] * s[12] * y1[12]
                              + 2 * 7's * 6'y1              // + 2[0] * s[11] * y1[13]
                              + 2 * 7's * 5'y1              // + 2[0] * s[10] * y1[14]
                              + 2 * 8's * 5'y1              // + 2[0] * s[9] * y1[15]
                              - 3 * 5'x1 * 8'x1             // - 3[0] * x1[15] * x1[9]
                              - 3 * 5'x1 * 7'x1             // - 3[0] * x1[14] * x1[10]
                              - 3 * 6'x1 * 7'x1             // - 3[0] * x1[13] * x1[11]
                              - 3 * 6'x1 * 6'x1             // - 3[0] * x1[12] * x1[12]
                              - 3 * 7'x1 * 6'x1             // - 3[0] * x1[11] * x1[13]
                              - 3 * 7'x1 * 5'x1             // - 3[0] * x1[10] * x1[14]
                              - 3 * 8'x1 * 5'x1             // - 3[0] * x1[9] * x1[15]
                              + 0xFFFF * 8'q0               // + p[15] * q0[9]
                              + 0xFFFF * 7'q0               // + p[14] * q0[10]
                              + 0xFFFF * 7'q0               // + p[13] * q0[11]
                              + 0xFFFF * 6'q0               // + p[12] * q0[12]
                              + 0xFFFF * 6'q0               // + p[11] * q0[13]
                              + 0xFFFF * 5'q0               // + p[10] * q0[14]
                              + 0xFFFF * 5'q0               // + p[9] * q0[15]
                              - 0xFFFF;                     // - (p*offset)[24]

eq_secp256k1_dbl_chunks[25] =   2 * 5's * 7'y1              //   2[0] * s[15] * y1[10]
                              + 2 * 5's * 7'y1              // + 2[0] * s[14] * y1[11]
                              + 2 * 6's * 6'y1              // + 2[0] * s[13] * y1[12]
                              + 2 * 6's * 6'y1              // + 2[0] * s[12] * y1[13]
                              + 2 * 7's * 5'y1              // + 2[0] * s[11] * y1[14]
                              + 2 * 7's * 5'y1              // + 2[0] * s[10] * y1[15]
                              - 3 * 5'x1 * 7'x1             // - 3[0] * x1[15] * x1[10]
                              - 3 * 5'x1 * 7'x1             // - 3[0] * x1[14] * x1[11]
                              - 3 * 6'x1 * 6'x1             // - 3[0] * x1[13] * x1[12]
                              - 3 * 6'x1 * 6'x1             // - 3[0] * x1[12] * x1[13]
                              - 3 * 7'x1 * 5'x1             // - 3[0] * x1[11] * x1[14]
                              - 3 * 7'x1 * 5'x1             // - 3[0] * x1[10] * x1[15]
                              + 0xFFFF * 7'q0               // + p[15] * q0[10]
                              + 0xFFFF * 7'q0               // + p[14] * q0[11]
                              + 0xFFFF * 6'q0               // + p[13] * q0[12]
                              + 0xFFFF * 6'q0               // + p[12] * q0[13]
                              + 0xFFFF * 5'q0               // + p[11] * q0[14]
                              + 0xFFFF * 5'q0               // + p[10] * q0[15]
                              - 0xFFFF;                     // - (p*offset)[25]

// clock #13

eq_secp256k1_dbl_chunks[26] =   2 * 6's * 8'y1              //   2[0] * s[15] * y1[11]
                              + 2 * 6's * 7'y1              // + 2[0] * s[14] * y1[12]
                              + 2 * 7's * 7'y1              // + 2[0] * s[13] * y1[13]
                              + 2 * 7's * 6'y1              // + 2[0] * s[12] * y1[14]
                              + 2 * 8's * 6'y1              // + 2[0] * s[11] * y1[15]
                              - 3 * 6'x1 * 8'x1             // - 3[0] * x1[15] * x1[11]
                              - 3 * 6'x1 * 7'x1             // - 3[0] * x1[14] * x1[12]
                              - 3 * 7'x1 * 7'x1             // - 3[0] * x1[13] * x1[13]
                              - 3 * 7'x1 * 6'x1             // - 3[0] * x1[12] * x1[14]
                              - 3 * 8'x1 * 6'x1             // - 3[0] * x1[11] * x1[15]
                              + 0xFFFF * 8'q0               // + p[15] * q0[11]
                              + 0xFFFF * 7'q0               // + p[14] * q0[12]
                              + 0xFFFF * 7'q0               // + p[13] * q0[13]
                              + 0xFFFF * 6'q0               // + p[12] * q0[14]
                              + 0xFFFF * 6'q0               // + p[11] * q0[15]
                              - 0xFFFF;                     // - (p*offset)[26]

eq_secp256k1_dbl_chunks[27] =   2 * 6's * 7'y1              //   2[0] * s[15] * y1[12]
                              + 2 * 6's * 7'y1              // + 2[0] * s[14] * y1[13]
                              + 2 * 7's * 6'y1              // + 2[0] * s[13] * y1[14]
                              + 2 * 7's * 6'y1              // + 2[0] * s[12] * y1[15]
                              - 3 * 6'x1 * 7'x1             // - 3[0] * x1[15] * x1[12]
                              - 3 * 6'x1 * 7'x1             // - 3[0] * x1[14] * x1[13]
                              - 3 * 7'x1 * 6'x1             // - 3[0] * x1[13] * x1[14]
                              - 3 * 7'x1 * 6'x1             // - 3[0] * x1[12] * x1[15]
                              + 0xFFFF * 7'q0               // + p[15] * q0[12]
                              + 0xFFFF * 7'q0               // + p[14] * q0[13]
                              + 0xFFFF * 6'q0               // + p[13] * q0[14]
                              + 0xFFFF * 6'q0               // + p[12] * q0[15]
                              - 0xFFFF;                     // - (p*offset)[27]

// clock #14

eq_secp256k1_dbl_chunks[28] =   2 * 7's * 8'y1              //   2[0] * s[15] * y1[13]
                              + 2 * 7's * 7'y1              // + 2[0] * s[14] * y1[14]
                              + 2 * 8's * 7'y1              // + 2[0] * s[13] * y1[15]
                              - 3 * 7'x1 * 8'x1             // - 3[0] * x1[15] * x1[13]
                              - 3 * 7'x1 * 7'x1             // - 3[0] * x1[14] * x1[14]
                              - 3 * 8'x1 * 7'x1             // - 3[0] * x1[13] * x1[15]
                              + 0xFFFF * 8'q0               // + p[15] * q0[13]
                              + 0xFFFF * 7'q0               // + p[14] * q0[14]
                              + 0xFFFF * 7'q0               // + p[13] * q0[15]
                              - 0xFFFF;                     // - (p*offset)[28]

eq_secp256k1_dbl_chunks[29] =   2 * 7's * 7'y1              //   2[0] * s[15] * y1[14]
                              + 2 * 7's * 7'y1              // + 2[0] * s[14] * y1[15]
                              - 3 * 7'x1 * 7'x1             // - 3[0] * x1[15] * x1[14]
                              - 3 * 7'x1 * 7'x1             // - 3[0] * x1[14] * x1[15]
                              + 0xFFFF * 7'q0               // + p[15] * q0[14]
                              + 0xFFFF * 7'q0               // + p[14] * q0[15]
                              - 0xFFFF;                     // - (p*offset)[29]

// clock #15

eq_secp256k1_dbl_chunks[30] =   2 * 8's * 8'y1              //   2[0] * s[15] * y1[15]
                              - 3 * 8'x1 * 8'x1             // - 3[0] * x1[15] * x1[15]
                              + 0xFFFF * 8'q0               // + p[15] * q0[15]
                              - 0xFFFF;                     // - (p*offset)[30]

eq_secp256k1_dbl_chunks[31] = - 0x3FFFF;                    // - (p*offset)[31]

