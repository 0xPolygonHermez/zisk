require "std_range_check.pil";

airtemplate RangeCheckDynamic1(const int N = 2**8) {

    col witness colu;
    col witness sel_7, sel_8, sel_16, sel_17;

    int id_range_7 = range_check_id(0, 2**7-1);
    int id_range_8 = range_check_id(0, 2**8-1);
    assert(id_range_8 != U8AIR_OPID);
    int id_range_8_2 = range_check_id(0, 2**8-1);
    assert(id_range_8_2 == id_range_8);
    int id_range_17 = range_check_id(0, 2**17-1);
    int id_range_16 = range_check_id(0, 2**16-1);
    assert(id_range_16 != U16AIR_OPID);
    int id_range_7_2 = range_check_id(0, 2**7-1);
    assert(id_range_7_2 == id_range_7);

    range_check_dynamic(colu, id_range_7 * sel_7 + id_range_8 * sel_8 + id_range_16 * sel_16 + id_range_17 * sel_17);
};

airtemplate RangeCheckDynamic2(const int N = 2**6) {

    col witness colu;
    col witness sel_1, sel_2, sel_3, sel_4, sel_5;

    int id_range_1 = range_check_id(5225, 29023);
    int id_range_2 = range_check_id(-8719, -7269);
    int id_range_3 = range_check_id(-10, 10);
    int id_range_4 = range_check_id(0, 2**8-1);
    assert(id_range_4 != U8AIR_OPID);
    int id_range_5 = range_check_id(0, 2**7-1);

    range_check_dynamic(colu, id_range_1 * sel_1 + id_range_2 * sel_2 + id_range_3 * sel_3 + id_range_4 * sel_4 + id_range_5 * sel_5);
};