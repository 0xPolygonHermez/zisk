// WARNING: This file has been autogenerated from the PILOUT file.
// Manual modifications are not recommended and may be overwritten.
use proofman_common as common;
pub use proofman_macros::trace;

trace!(MainRow, MainTrace<F> {
 a: [F; 2], b: [F; 2], c: [F; 2], flag: F, pc: F, a_src_imm: F, a_src_mem: F, a_offset_imm0: F, a_imm1: F, a_src_step: F, b_src_imm: F, b_src_mem: F, b_offset_imm0: F, b_imm1: F, b_src_ind: F, ind_width: F, is_external_op: F, op: F, store_ra: F, store_mem: F, store_ind: F, store_offset: F, set_pc: F, jmp_offset1: F, jmp_offset2: F, m32: F, addr1: F, __debug_operation_bus_enabled: F,
});

trace!(RomRow, RomTrace<F> {
 line: F, a_offset_imm0: F, a_imm1: F, b_offset_imm0: F, b_imm1: F, ind_width: F, op: F, store_offset: F, jmp_offset1: F, jmp_offset2: F, flags: F, multiplicity: F,
});

trace!(BinaryRow, BinaryTrace<F> {
 m_op: F, mode32: F, free_in_a: [F; 8], free_in_b: [F; 8], free_in_c: [F; 8], carry: [F; 8], use_last_carry: F, op_is_min_max: F, cout: F, result_is_a: F, use_last_carry_mode32: F, use_last_carry_mode64: F, m_op_or_ext: F, free_in_a_or_c: [F; 4], free_in_b_or_zero: [F; 4], multiplicity: F, main_step: F,
});

trace!(BinaryTableRow, BinaryTableTrace<F> {
 multiplicity: F,
});

trace!(BinaryExtensionRow, BinaryExtensionTrace<F> {
 op: F, in1: [F; 8], in2_low: F, out: [[F; 2]; 8], op_is_shift: F, in2: [F; 2], main_step: F, multiplicity: F,
});

trace!(BinaryExtensionTableRow, BinaryExtensionTableTrace<F> {
 multiplicity: F,
});

trace!(SpecifiedRangesRow, SpecifiedRangesTrace<F> {
 mul: [F; 1],
});
